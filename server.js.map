{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/helpers.js","webpack:///external \"recharts\"","webpack:///external \"react\"","webpack:///external \"react-icons/ri\"","webpack:///external \"lodash\"","webpack:///external \"ethers\"","webpack:///./src/addresses.js","webpack:///external \"classnames\"","webpack:///external \"react-router-dom\"","webpack:///./node_modules/css-loader/dist/runtime/getUrl.js","webpack:///external \"moment\"","webpack:///./src/utils.js","webpack:///external \"@apollo/client\"","webpack:///./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack:///./node_modules/css-loader/dist/runtime/api.js","webpack:///external \"cross-fetch\"","webpack:///external \"strftime\"","webpack:///./src/prices.js","webpack:///external \"framer-motion\"","webpack:///external \"react-icons/fa\"","webpack:///external \"express\"","webpack:///external \"chalk\"","webpack:///./src/fonts/relative/relative-book-pro.eot","webpack:///./src/fonts/relative/relative-bold-pro.eot","webpack:///external \"http\"","webpack:///external \"react-dom/server\"","webpack:///external \"console-log-level\"","webpack:///external \"react-dropdown-select\"","webpack:///external \"react-date-range\"","webpack:///./src/fonts/relative/relative-book-pro.woff2","webpack:///./src/fonts/relative/relative-book-pro.woff","webpack:///./src/fonts/relative/relative-book-pro.ttf","webpack:///./src/fonts/relative/relative-bold-pro.woff2","webpack:///./src/fonts/relative/relative-bold-pro.woff","webpack:///./src/fonts/relative/relative-bold-pro.ttf","webpack:///./src/img/logo_GMX.svg","webpack:///./src/img/logo_GMX_dark.svg","webpack:///./src/img/logo_GMX_light.svg","webpack:///external \"react-icons/fi\"","webpack:///./src/index.js","webpack:///./src/ttl-cache.js","webpack:///external \"object-sizeof\"","webpack:///./src/graph.js","webpack:///./node_modules/react-date-range/dist/styles.css","webpack:///./node_modules/react-date-range/dist/theme/default.css","webpack:///./src/App.css","webpack:///external \"cors\"","webpack:///./src/components/CsvLink.js","webpack:///./src/components/ChartWrapper.js","webpack:///./src/hooks/useChartViewState.js","webpack:///./src/components/VolumeChart.js","webpack:///./src/components/FeesChart.js","webpack:///./src/components/GenericChart.js","webpack:///./src/components/DateRangeSelect.js","webpack:///./src/dataProvider.js","webpack:///./src/components/PoolAmountChart/index.js","webpack:///./src/components/TradersProfitLossChart/index.js","webpack:///./src/views/Arbitrum.js","webpack:///./src/views/Referrals.js","webpack:///./src/views/Avalanche.js","webpack:///./src/views/Trading.js","webpack:///./src/App.js","webpack:///./src/routes.js","webpack:///./src/middlewares.js","webpack:///./src/server.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","BigNumber","ethers","CHART_HEIGHT","YAXIS_WIDTH","GREEN","RED","COLORS","COINCOLORS","levelColor","getLogger","Logger","level","prefix","toUpperCase","chalk","white","logger","numberFmt0","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","numberFmt1","numberFmt2","currencyFmt0","style","currency","currencyFmt1","currencyFmt2","fillPeriods","arr","period","from","to","interpolate","extrapolate","prevItem","prevTimestamp","timestamp","prevPeriodStep","Math","floor","ret","length","item","periodStep","diff","j","newItem","push","lastPeriodStep","formatNumber","opts","compact","absValue","abs","_getCurrencyFmt","format","display","compactNumber","_getNumberFmt","toFixed","tooltipLabelFormatter","label","args","constructor","Date","payload","date","strftime","all","unit","yaxisFormatterPercent","yaxisFormatterNumber","yaxisFormatter","tooltipFormatterNumber","tooltipFormatterPercent","tooltipFormatter","convertToPercents","data","ignoreKeys","totalKey","allIgnoredKeys","concat","map","stats","total","entries","reduce","acc","includes","token","tooltipLabelFormatterUnits","getDate","tsToIso","ts","getTimezoneOffset","toISOString","slice","tsToIsoDate","urlWithParams","url","params","memo","encodeURIComponent","join","getProvider","chainId","rpc","BSC","ARBITRUM","Error","providers","JsonRpcProvider","provider","async","getLatestReliableBlock","number","getLatestReliableBlockNumber","getBlock","getBlockNumber","getTransaction","hash","callWithRetry","getTransactions","hashes","Promise","blockNumber","getBlocks","numbers","findNearest","needle","el","prevEl","func","maxTries","ex","queryProviderLogs","fromBlock","toBlock","address","backwards","info","allResult","chunkFromBlock","chunkToBlock","max","min","result","getLogs","reverse","LogRecord","row","JSON","parse","type","hex","UsdgSupplyRecord","supply","require","AVALANCHE","addresses","Vault","Router","USDG","Stabilize","WardenSwapRouter","OneInchRouter","DodoexRouter","MetamaskRouter","GMX","BTC","ETH","LINK","UNI","DAI","RewardReader","GLP","GlpManager","AVAX","getAddress","options","default","test","needQuotes","replace","sleep","ms","resolve","setTimeout","toReadable","createHttpError","code","message","error","_slicedToArray","Array","isArray","_arrayWithHoles","_i","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","_item","content","cssMapping","btoa","base64","unescape","stringify","sourceMapping","sourceURLs","sources","source","sourceRoot","cssWithMappingToString","list","this","mediaQuery","dedupe","alreadyImportedModules","id","ttlCache","TtlCache","PERIOD_TO_SECONDS","VALID_PERIODS","Set","keys","cachedPrices","candleByPriceId","PRICE_START_TIMESTAMP","putPricesIntoCache","prices","append","undefined","start","now","groupByTokenAndPeriod","price","pricesForTokenAndPeriod","putPricesForTokenAndPeriodIntoCache","process","env","HOSTNAME","priceToCandle","Number","open","close","h","high","low","candles","candle","isEqual","unshift","binSearchPrice","gt","mid","left","right","getPrices","preferableChainId","symbol","tokenAddress","toLowerCase","latestUpdateTimestamp","CANDLE_PROPS","loadNewPrices","graphClient","getPricesClient","query","gql","priceCandles","warn","loadOldPrices","getQueryPart","before","skip","getQuery","seenOldPrices","p0","part","has","add","getPricesLimit","limit","getPricesFromTo","cacheKey","fromCache","debug","inbound","indexFrom","indexTo","getPriceRange","set","getLastUpdatedTimestamp","app","http","listen","port","console","log","cb","ttl","maxKeys","_cache","_ttl","_maxKeys","_logger","apolloOptions","fetchPolicy","watchQuery","arbitrumPricesClient","ApolloClient","link","HttpLink","uri","fetch","cache","InMemoryCache","defaultOptions","avalanchePricesClient","___CSS_LOADER_EXPORT___","___CSS_LOADER_URL_REPLACEMENT_0___","___CSS_LOADER_URL_REPLACEMENT_1___","___CSS_LOADER_URL_REPLACEMENT_2___","___CSS_LOADER_URL_REPLACEMENT_3___","___CSS_LOADER_URL_REPLACEMENT_4___","___CSS_LOADER_URL_REPLACEMENT_5___","___CSS_LOADER_URL_REPLACEMENT_6___","___CSS_LOADER_URL_REPLACEMENT_7___","___CSS_LOADER_URL_REPLACEMENT_8___","___CSS_LOADER_URL_REPLACEMENT_9___","formatTimestamp","CsvLink","fields","onClick","useCallback","evt","preventDefault","csvUrl","csvHeader","field","csvBody","getCsvUrl","end","fileName","aElement","document","createElement","href","download","body","appendChild","click","removeChild","title","className","size","ChartWrapper","props","loading","csvFields","controls","viewState","togglePercentView","cx","active","isPercentsView","children","useChartViewState","setViewState","useState","formattedData","useMemo","converToPercents","old","itemsUnit","yaxisTickFormatter","convertToPercentsHandler","VolumeChart","chartHeight","yaxisWidth","viewSettings","width","height","syncId","strokeDasharray","dataKey","tickFormatter","minTickGap","interval","tickCount","orientation","yAxisId","formatter","labelFormatter","contentStyle","textAlign","isAnimationActive","stackId","fill","dot","strokeWidth","stroke","FeesChart","GenericChart","description","yaxisDataKey","yaxisScale","truncateYThreshold","yaxisDomain","xaxisDataKey","xaxisTickFormatter","tooltipLabelFormatter_","tooltipFormatter_","items","rightYaxisDataKey","defaultYaxisTickFormatter","defaultItemUnit","ChartComponent","LineChart","BarChart","AreaChart","ComposedChart","truncatedYDomain","_","htmlItems","color","React","scale","domain","DateRangeSelect","startDate","endDate","onChange","selectedDateRangeOption","setSelectedDateRangeOption","rangeState","setRangeState","useEffect","onSelectItem","option","moment","subtract","toDate","selected","isDefault","onDateRangeChange","selection","placeholder","multi","contentRenderer","state","cursor","dropdownRenderer","methods","regexp","RegExp","search","filter","searchBy","labelField","index","keepSelectedInList","isSelected","disabled","editableDateInputs","moveRangeOnFirstSelection","ranges","showDateDisplay","closeOnSelect","closeOnScroll","values","formatUnits","arbitrum","avalanche","NOW_TS","parseInt","FIRST_DATE_TS","fillNa","prevValues","queryEarnData","chainName","account","getChainId","rewardReader","abi","glpContract","Token","glpManager","depositTokens","rewardTrackersForDepositBalances","rewardTrackersForStakingInfo","balances","stakingInfo","glpTotalSupply","glpAum","gmxPrice","getDepositBalances","getStakingInfo","then","totalSupply","getAumInUsdg","res","json","glpPrice","stakedGLP","pendingETH","pendingEsGMX","stakedGMX","stakedEsGMX","datetime","tokenSymbols","knownSwapSources","defaultFetcher","useRequest","defaultValue","fetcher","setLoading","setError","setData","useCoingeckoPrices","_symbol","ceil","getImpermanentLoss","change","sqrt","useGraph","querySource","subgraph","subgraphUrl","getChainSubgraph","client","catch","useLastBlock","finally","useLastSubgraphBlock","block","setBlock","_meta","useTradersData","closedPositionsData","feesData","useFeesData","feesCumulative","margin","fees","currentPnlCumulative","currentProfitCumulative","currentLossCumulative","sortBy","tradingStats","dataItem","longOpenInterest","shortOpenInterest","openInterest","profit","loss","profitCumulative","lossCumulative","pnl","pnlCumulative","maxProfit","maxBy","maxLoss","minBy","maxProfitLoss","maxPnl","minPnl","maxCurrentCumulativePnl","minCurrentCumulativePnl","maxCurrentCumulativeProfitLoss","maxAbsPnl","maxAbsCumulativePnl","getSwapSourcesFragment","useSwapSources","graphData","a","b","e","totalVolumeBySource","swap","topVolumeSources","sort","chain","groupBy","retItem","volume","useVolumeDataFromServer","PROPS","split","useVolumeDataRequest","getServerHostname","after","tmp","action","cumulative","cumulativeByTs","movingAverageAll","movingAverageTs","MOVING_AVERAGE_PERIOD","MOVING_AVERAGE_DAYS","forEach","prop","useUsersData","prevUniqueCountCumulative","cumulativeNewUserCount","userStats","newCountData","newCount","oldCount","uniqueCount","oldPercent","uniqueSum","uniqueSwapCount","uniqueMarginCount","uniqueMintBurnCount","useFundingRateData","groups","fundingRates","group","timeDelta","endTimestamp","startTimestamp","fundingRate","endFundingRate","startFundingRate","useVolumeData","timestampProp","volumeStats","feesQuery","chartData","feeStats","liquidation","marginAndLiquidation","sumBy","useGlpData","cumulativeDistributedUsdPerGlp","cumulativeDistributedEthPerGlp","prevGlpSupply","prevAum","glpStats","last","aum","aumInUsdg","glpSupply","distributedUsdPerGlp","distributedUsd","distributedEthPerGlp","distributedEth","glpSupplyChange","aumChange","useGlpPerformanceData","glpData","btcPrices","ethPrices","avaxPrices","glpDataById","feesDataById","BTC_WEIGHT","ETH_WEIGHT","AVAX_WEIGHT","STABLE_WEIGHT","GLP_START_PRICE","btcFirstPrice","ethFirstPrice","avaxFirstPrice","indexBtcCount","indexEthCount","indexAvaxCount","indexStableCount","lpBtcCount","lpEthCount","lpAvaxCount","lastGlpItem","lastFeesItem","cumulativeFeesPerGlp","prevEthPrice","prevAvaxPrice","btcPrice","ethPrice","avaxPrice","timestampGroup","glpItem","feesItem","dailyFees","syntheticPrice","lpBtcPrice","lpEthPrice","lpAvaxPrice","glpApr","glpPlusDistributedUsd","glpPlusDistributedEth","glpPlusFees","performanceLpEth","performanceLpEthCollectedFees","performanceLpEthDistributedUsd","performanceLpEthDistributedEth","performanceLpBtcCollectedFees","performanceLpAvaxCollectedFees","performanceSynthetic","performanceSyntheticCollectedFees","performanceSyntheticDistributedUsd","performanceSyntheticDistributedEth","PoolAmountChart","tokenStatsData","tokenStatsLoading","getTokenStatsFragment","fullData","records","retrievedTokens","timestampGroups","poolAmountUsd","poolAmountUsdRecords","poolAmountUsdRecord","useTokenStats","chartLegendItems","fillOpacity","TradersProfitLossChart","tradersData","barGap","NOW","Arbitrum","groupPeriod","dataRange","setDataRange","fromValue","toValue","fundingRateData","fundingRateLoading","volumeData","volumeLoading","totalVolume","useTotalVolumeFromServer","totalVolumeDelta","feesLoading","totalFeesData","totalFeesLoading","totalFees","totalFeesDelta","glpLoading","totalAum","totalAumDelta","aumPerformanceData","aumPerformanceLoading","dailyCoef","feeItem","volumeItem","apr","usage","averageApr","averageUsage","useAumPerformanceData","glpPerformanceData","glpPerformanceLoading","tradersLoading","openInterestDelta","swapSources","swapSourcesLoading","swapSourcesKeys","usersData","usersLoading","totalUsers","totalUsersDelta","uniqueCountCumulative","prevTotal","lastSubgraphBlock","lastSubgraphBlockError","lastBlock","isObsolete","isExperiment","setIsExperiment","window","localStorage","getItem","warning","fromNow","rel","target","dates","tick","isCoinChart","actionCount","Referrals","setGroupPeriod","setFromValue","setToValue","range","match","referralsData","referralsLoading","globalStats","totalRebateUsd","discountUsd","volumeCumulative","totalRebateUsdCumulative","referrerRebateUsd","discountUsdCumulative","referralCodesCount","referralCodesCountCumulative","referrersCount","referrersCountCumulative","referralsCount","referralsCountCumulative","useReferralsData","prevTotalVolume","totalDiscountUsd","prevTotalDiscountUsd","totalDiscountUsdDelta","totalReferrerRebateUsd","prevTotalReferrerRebateUsd","totalReferrerRebateUsdDelta","totalReferrersCount","prevTotalReferrersCount","totalReferrersCountDelta","totalReferralsCount","prevTotalReferralsCount","totalReferralsCountDelta","marginTop","Avalanche","totalVolumeData","totalVolumeLoading","totalGlpData","totalGlpLoading","totalTradersData","totalTradersLoading","totalUsersData","totalUsersLoading","Trading","setFrom","setTo","fromTs","toTs","btcData","ethData","bnbData","assetChartData","assetData","maxPrice","minPrice","Infinity","poolAmount","pnlData","pnlChartData","metrics","net","profits","long","short","pnlMin","pnlMax","liquidationsData","liquidationsChartData","cum","longCum","shortCum","collateral","isLong","disableGrouping","feesChartData","sum","swapSourcesData","rawSource","swapSourcesFilteredKeys","count","swapSourcesChartData","round","AppHeaderLinks","small","clickCloseIcon","exact","activeClassName","src","logoIcon","alt","App","setMode","isDrawerVisible","setIsDrawerVisible","targetMode","querySelector","backgroundColor","div","initial","animate","exit","variants","hidden","opacity","visible","transition","duration","darkLogoIcon","lightLogoIcon","setItem","switchMode","x","path","render","component","assets","utils","express","disable","use","static","req","on","time","method","statusCode","originalUrl","ip","_logRequest","csp","cspString","send","validChainNames","earnData","apiResponse","text","validSymbols","isNaN","updatedAt","cssAssetsTag","entrypoint","css","asset","cssLinksFromAssets","jsAssetsTag","extra","js","jsScriptTagsFromAssets","headersSent","markup","renderToString","context","location","status","response","routes"],"mappings":"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","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 42);\n","/* eslint-disable no-constant-condition */\r\n/* eslint-disable no-mixed-spaces-and-tabs */\r\nimport Logger from 'console-log-level'\r\nimport { ethers } from 'ethers'\r\nimport strftime from 'strftime'\r\nimport chalk from 'chalk'\r\n\r\nimport { BSC, ARBITRUM } from './addresses'\r\n\r\nconst { BigNumber } = ethers\r\n\r\nexport const CHART_HEIGHT = 400\r\nexport const YAXIS_WIDTH = 65\r\n\r\nexport const GREEN = '#22c761'\r\nexport const RED = '#f93333'\r\nexport const COLORS = [\r\n  '#ee64b8',\r\n  GREEN,\r\n  '#ff8d00',\r\n  '#00bfea',\r\n  '#8884ff',\r\n  '#ab6100',\r\n  '#c90000',\r\n  '#7b7b7b',\r\n  '#6464ff',\r\n  'purple',\r\n  'darkgreen',\r\n  RED,\r\n  '#ffaf01',\r\n]\r\n\r\nexport const COINCOLORS = [\r\n  '#627EEA',\r\n  '#FF9800',\r\n  '#FF007A',\r\n  '#2A5ADA',\r\n  '#2775CA',\r\n  '#26A17B',\r\n  '#9895F3',\r\n  '#8C8C8C',\r\n  '#F4B731',\r\n  'purple',\r\n  'darkgreen',\r\n  RED,\r\n  '#F0B90B',\r\n  '#FE88B1'\r\n]\r\n\r\nconst levelColor = {\r\n  'debug': 'grey',\r\n  'error': 'red',\r\n  'warn': 'orange',\r\n  'info': 'greenBright'\r\n}\r\nexport function getLogger(ns) {\r\n  return Logger({\r\n    level: process.env.NODE_ENV === 'production' ? 'info' : 'debug',\r\n    prefix: level => {\r\n      const prefix = `[${ns}] ${level.toUpperCase()}`\r\n      return (chalk[levelColor[level]] || chalk.white)(prefix)\r\n    }\r\n  })\r\n}\r\n\r\nconst logger = getLogger('helpers')\r\n\r\nconst numberFmt0 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 })\r\nconst numberFmt1 = Intl.NumberFormat('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 1 })\r\nconst numberFmt2 = Intl.NumberFormat('en-US', { minimumFractionDigits: 3, maximumFractionDigits: 3 })\r\nconst currencyFmt0 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 0, maximumFractionDigits: 0 })\r\nconst currencyFmt1 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 1, maximumFractionDigits: 1 })\r\nconst currencyFmt2 = Intl.NumberFormat('en-US', { style: 'currency', currency: 'USD', minimumFractionDigits: 2, maximumFractionDigits: 2 })\r\n\r\nexport function fillPeriods(arr, { period, from, to, interpolate = true, extrapolate = false }) {\r\n  let i = 0\r\n  let prevTimestamp = from ? from - period : arr[0].timestamp\r\n  let prevPeriodStep = Math.floor(prevTimestamp / period)\r\n  let prevItem\r\n  const ret = []\r\n\r\n  while (i < arr.length) {\r\n    const item = arr[i]\r\n    const periodStep = Math.floor(item.timestamp / period)\r\n\r\n    if (periodStep - 1 > prevPeriodStep) {\r\n      const diff = periodStep - prevPeriodStep\r\n      let j = 1\r\n      while (j < diff) {\r\n        let newItem = { timestamp: (prevPeriodStep + j) * period }\r\n        if (interpolate) {\r\n          newItem = { ...prevItem, ...newItem }\r\n        }\r\n        ret.push(newItem)\r\n        j++\r\n      }\r\n    }\r\n\r\n    ret.push(item)\r\n\r\n    if (to && i === arr.length - 1) {\r\n      const lastPeriodStep = Math.floor(to / period)\r\n      if (lastPeriodStep > periodStep) {\r\n        const diff = lastPeriodStep - periodStep\r\n        let j = 0\r\n        while (j < diff) {\r\n          let newItem = { timestamp: (periodStep + j + 1) * period }\r\n          if (extrapolate) {\r\n            newItem = { ...item, ...newItem }\r\n          }\r\n          ret.push(newItem)\r\n          j++\r\n        }\r\n      }\r\n    }\r\n\r\n    prevItem = item\r\n    prevPeriodStep = periodStep\r\n    i++\r\n  }\r\n\r\n  return ret\r\n}\r\n\r\nfunction _getNumberFmt(value) {\r\n  const absValue = Math.abs(value)\r\n  if (absValue < 10) {\r\n    return numberFmt2\r\n  } else if (absValue < 1000) {\r\n    return numberFmt1\r\n  } else {\r\n    return numberFmt0\r\n  }\r\n}\r\n\r\nfunction _getCurrencyFmt(value) {\r\n  const absValue = Math.abs(value)\r\n  if (absValue < 10) {\r\n    return currencyFmt2\r\n  } else if (absValue < 1000) {\r\n    return currencyFmt1\r\n  } else {\r\n    return currencyFmt0\r\n  }\r\n}\r\n\r\nexport const formatNumber = (value, opts = {}) => {\r\n  const currency = !!opts.currency\r\n  const compact = !!opts.compact\r\n\r\n  if (currency && !compact) {\r\n    return _getCurrencyFmt(value).format(value)\r\n  }\r\n\r\n  const display = compact ? compactNumber(value) : _getNumberFmt(value).format(value)\r\n  if (currency) {\r\n    return `$${display}`\r\n  }\r\n  return display\r\n}\r\n\r\nexport const compactNumber = value => {\r\n  const abs = Math.abs(value)\r\n  if (abs >= 1e9) {\r\n    return `${(value / 1e9).toFixed(abs < 1e10 ? 2 : 1)}B`\r\n  }\r\n  if (abs >= 1e6) {\r\n    return `${(value / 1e6).toFixed(abs < 1e7 ? 2 : 1)}M`\r\n  }\r\n  if (abs >= 1e3) {\r\n    return `${(value / 1e3).toFixed(abs < 1e4 ? 2 : 1)}K`\r\n  }\r\n  return `${value.toFixed(1)}`\r\n}\r\n\r\nexport const tooltipLabelFormatter = (label, args) => {\r\n  if (!label) {\r\n    return\r\n  }\r\n\r\n  if (label.constructor !== Date) {\r\n    label = new Date(label * 1000)\r\n  }\r\n  const item = args && args[0] && args[0].payload && args[0]\r\n  const dateFmtString = '%d.%m'\r\n  const date = strftime(dateFmtString, label)\r\n  const all = item && (item.payload.all)\r\n  if (all) {\r\n    if (item && item.unit === '%') {\r\n      return date\r\n    }\r\n    return `${date}, ${formatNumber(all, {currency: true, compact: true})}`\r\n  }\r\n  return date\r\n}\r\n\r\nexport const yaxisFormatterPercent = value => {\r\n  return value.toFixed(2) + '%'\r\n}\r\n\r\nexport const yaxisFormatterNumber = value => {\r\n  return compactNumber(value)\r\n}\r\n\r\nexport const yaxisFormatter = (value) => {\r\n  return formatNumber(value, { currency: true, compact: true })\r\n}\r\n\r\nexport const tooltipFormatterNumber = (value) => {\r\n  return formatNumber(value)\r\n}\r\n\r\nexport const tooltipFormatterPercent = (value) => {\r\n  return value.toFixed(2) + '%'\r\n}\r\n\r\nexport const tooltipFormatter = (value, name, item) => {\r\n  if (item && item.unit === '%') {\r\n    return value.toFixed(2)\r\n  }\r\n  return formatNumber(value, { currency: true })\r\n}\r\n\r\nexport const convertToPercents = (data, {ignoreKeys = [], totalKey = 'all'} = {}) => {\r\n  // Not used in percentage evaluation\r\n  const allIgnoredKeys = ignoreKeys.concat(totalKey);\r\n\r\n  return data.map(item => {\r\n      const {\r\n          timestamp,\r\n          ...stats\r\n      } = item;\r\n\r\n      let total = item[totalKey];\r\n\r\n      if (typeof total !== 'number') {\r\n        // Calculate total from actual data if totalKey is not specified\r\n        total = Object.entries(stats).reduce((acc, [key, value]) => {\r\n          if (!allIgnoredKeys.includes(key)) {\r\n            acc += value;\r\n          }\r\n  \r\n          return acc;\r\n        }, 0)\r\n      }\r\n      \r\n      const formattedStats = Object.entries(stats).reduce((acc, [token, value]) => {\r\n          if (!allIgnoredKeys.includes(token)) {\r\n            acc[token] = (value / total) * 100;\r\n          } else {\r\n            acc[token] = value\r\n          }\r\n          \r\n          return acc;\r\n      }, {})\r\n\r\n      return {\r\n          ...formattedStats,\r\n          [totalKey]: 100,\r\n          timestamp\r\n      }\r\n  })\r\n}\r\n\r\nexport const tooltipLabelFormatterUnits = (label, args) => {\r\n  if (!label) {\r\n    return label\r\n  }\r\n  if (label.constructor !== Date) {\r\n    label = new Date(label * 1000)\r\n    if (!label.getDate()) {\r\n      return label\r\n    }\r\n  }\r\n  const date = strftime('%d.%m', label)\r\n\r\n  const item = args && args[0]\r\n  if (item && item.unit === '%') {\r\n    return date\r\n  }\r\n\r\n  const all = item && (item.payload.all)\r\n\r\n  if (label.constructor !== Date) {\r\n    return all ? `${label}, total: ${all}` : label\r\n  }\r\n\r\n  return all ? `${date}, total: ${all}` : date\r\n}\r\n\r\nexport function tsToIso(ts) {\r\n  return new Date(ts - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, -5)\r\n}\r\n\r\nexport function tsToIsoDate(ts) {\r\n  return new Date(ts - new Date().getTimezoneOffset() * 60000).toISOString().slice(0, 10)\r\n}\r\n\r\nexport function urlWithParams(url, params) {\r\n  const paramsStr = Object.entries(params)\r\n    .reduce((memo, [key, value]) => {\r\n      if (value) memo.push(`${key}=${encodeURIComponent(value)}`)\r\n      return memo\r\n    }, [])\r\n    .join('&')\r\n  return `${url}?${paramsStr}`\r\n}\r\n\r\nexport function getProvider(chainId) {\r\n  let rpc\r\n  if (chainId === BSC) {\r\n    rpc = 'https://bsc-dataseed1.defibit.io/'\r\n  } else if (chainId === ARBITRUM) {\r\n    rpc = 'https://arb1.arbitrum.io/rpc'\r\n  }\r\n  if (!rpc) {\r\n    throw Error(`Unsupported chainId: ${chainId}`)\r\n  }\r\n\r\n  return new ethers.providers.JsonRpcProvider(rpc, chainId)\r\n}\r\n\r\nconst provider = getProvider(BSC)\r\n\r\nexport async function getLatestReliableBlock() {\r\n  const number = await getLatestReliableBlockNumber() - 3\r\n  return await provider.getBlock(number)\r\n}\r\n\r\nexport async function getLatestReliableBlockNumber() {\r\n    return (await provider.getBlockNumber()) - 3\r\n}\r\n\r\nexport function getTransaction(hash) {\r\n  return callWithRetry(provider.getTransaction.bind(provider), [hash])\r\n}\r\n\r\nexport function getTransactions(hashes) {\r\n  return Promise.all(hashes.map(getTransaction))\r\n}\r\n\r\nexport function getBlock(blockNumber) {\r\n  return callWithRetry(provider.getBlock.bind(provider), [blockNumber])\r\n}\r\n\r\nexport function getBlocks(numbers) {\r\n  return Promise.all(numbers.map(getBlock))\r\n}\r\n\r\nexport function findNearest(arr, needle, getter = el => el) {\r\n\tlet prevEl\r\n\tfor (const el of arr) {\r\n\t\tif (getter(el) > needle) {\r\n\t\t\tif (prevEl && getter(el) - needle > needle - getter(prevEl)) {\r\n\t\t\t\treturn prevEl\r\n\t\t\t} else {\r\n\t\t\t\treturn el\r\n\t\t\t}\r\n\t\t}\r\n\t\tprevEl = el\r\n\t}\r\n\treturn prevEl\r\n}\r\n\r\nasync function callWithRetry(func, args, maxTries = 10) {\r\n  let i = 0\r\n  while (true) {\r\n    try {\r\n      return await func(...args)\r\n    } catch (ex) {\r\n      i++\r\n      if (i == maxTries) {\r\n        throw ex\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport async function queryProviderLogs({ fromBlock, toBlock, address, backwards }) {\r\n  logger.info(`query logs fromBlock=%s toBlock=%s blocks length=%s backwards=%s`,\r\n  \tfromBlock,\r\n  \ttoBlock,\r\n  \ttoBlock - fromBlock,\r\n  \tbackwards\r\n  )\r\n  const allResult = []\r\n  const MAX = 1000\r\n\r\n  let chunkFromBlock\r\n  let chunkToBlock\r\n\r\n  if (backwards) {\r\n  \tchunkToBlock = toBlock\r\n  \tchunkFromBlock = Math.max(fromBlock, toBlock - MAX)\r\n  } else {\r\n\t  chunkFromBlock = fromBlock\r\n\t  chunkToBlock = Math.min(toBlock, fromBlock + MAX)\r\n  }\r\n\r\n  let i = 0\r\n  while (true) {\r\n    logger.info(`requesting ${i} chunk ${chunkFromBlock}-${chunkToBlock}...`)\r\n    let result = await callWithRetry(provider.getLogs.bind(provider), [{\r\n      fromBlock: chunkFromBlock,\r\n      toBlock: chunkToBlock,\r\n      address\r\n    }])\r\n    if (backwards) {\r\n    \tresult = result.reverse()\r\n    }\r\n    allResult.push(...result)\r\n    i++\r\n\r\n    if (!backwards && chunkToBlock === toBlock) {\r\n      logger.info('done')\r\n      break\r\n    }\r\n    if (backwards && chunkFromBlock === fromBlock) {\r\n      logger.info('done')\r\n      break\r\n    }\r\n\r\n    if (backwards) {\r\n\t    chunkToBlock = chunkFromBlock - 1\r\n\t    chunkFromBlock = Math.max(fromBlock, chunkFromBlock - MAX)\r\n    } else {\r\n\t    chunkFromBlock = chunkToBlock + 1\r\n\t    chunkToBlock = Math.min(toBlock, chunkToBlock + MAX)\r\n    }\r\n  }\r\n\r\n  return allResult\r\n}\r\n\r\nexport function LogRecord(row) {\r\n  return {\r\n    ...row,\r\n    args: JSON.parse(row.args).map(el => {\r\n      if (el && el.type === 'BigNumber') {\r\n        return BigNumber.from(el.hex)\r\n      }\r\n      return el\r\n    })\r\n  }\r\n}\r\n\r\nexport function UsdgSupplyRecord(row) {\r\n  return {\r\n    ...row,\r\n    supply: BigNumber.from(JSON.parse(row.supply).hex)\r\n  }\r\n}\r\n","module.exports = require(\"recharts\");","module.exports = require(\"react\");","module.exports = require(\"react-icons/ri\");","module.exports = require(\"lodash\");","module.exports = require(\"ethers\");","export const BSC = 56\r\nexport const ARBITRUM = 42161\r\nexport const AVALANCHE = 43114\r\n\r\nexport const addresses = {\r\n    [BSC]: {\r\n        Vault: \"0xc73A8DcAc88498FD4b4B1b2AaA37b0a2614Ff67B\",\r\n        Router: \"0xD46B23D042E976F8666F554E928e0Dc7478a8E1f\",\r\n        USDG: \"0x85E76cbf4893c1fbcB34dCF1239A91CE2A4CF5a7\",\r\n        Stabilize: \"0x82C4841728fBd5e08A77A95cA3192BcE1F645Ee9\",\r\n        WardenSwapRouter: \"0x7A1Decf6c24232060F4D76A33a317157549C2093\",\r\n        OneInchRouter: \"0x11111112542D85B3EF69AE05771c2dCCff4fAa26\",\r\n        DodoexRouter: \"0x8F8Dd7DB1bDA5eD3da8C9daf3bfa471c12d58486\",\r\n        MetamaskRouter: \"0x1a1ec25DC08e98e5E93F1104B5e5cdD298707d31\"\r\n    },\r\n\r\n    [ARBITRUM]: {\r\n        GMX: '0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a',\r\n        BTC: '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f',\r\n        ETH: '0x82af49447d8a07e3bd95bd0d56f35241523fbab1',\r\n        LINK: '0xf97f4df75117a78c1a5a0dbb814af92458539fb4',\r\n        UNI: '0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0',\r\n        DAI: '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1',\r\n        RewardReader: '0x8BFb8e82Ee4569aee78D03235ff465Bd436D40E0',\r\n        GLP: '0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258',\r\n        GlpManager: '0x321F653eED006AD1C29D174e17d96351BDe22649'\r\n    },\r\n\r\n    [AVALANCHE]: {\r\n        GMX: '0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a',\r\n        AVAX: '0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7',\r\n        ETH: '0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab',\r\n        BTC: '0x50b7545627a5162f82a992c33b87adc75187b218',\r\n        RewardReader: '0x04Fc11Bd28763872d143637a7c768bD96E44c1b6',\r\n        GLP: '0x01234181085565ed162a948b6a5e88758CD7c7b8',\r\n        GlpManager: '0xe1ae4d4b06A5Fe1fc288f6B4CD72f9F8323B107F'\r\n    }\r\n}\r\n\r\nexport function getAddress(chainId, key) {\r\n    if (!(chainId) in addresses) {\r\n        throw new Error(`Unknown chain ${chainId}`)\r\n    }\r\n    if (!(key in addresses[chainId])) {\r\n        throw new Error(`Unknown address key ${key}`)\r\n    }\r\n    return addresses[chainId][key]\r\n}\r\n","module.exports = require(\"classnames\");","module.exports = require(\"react-router-dom\");","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","module.exports = require(\"moment\");","function createHttpError(code, message) {\r\n  const error = new Error(message)\r\n  error.code = code\r\n  return error\r\n}\r\n\r\nfunction sleep(ms) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, ms)\r\n  })\r\n}\r\n\r\nfunction toReadable(ts) {\r\n  return (new Date(ts * 1000).toISOString()).replace('T', ' ').replace('.000Z', '')\r\n}\r\n\r\nmodule.exports = {\r\n    sleep,\r\n    toReadable,\r\n    createHttpError\r\n}\r\n","module.exports = require(\"@apollo/client\");","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","module.exports = require(\"cross-fetch\");","module.exports = require(\"strftime\");","import { gql } from '@apollo/client'\r\n\r\nimport { getLogger } from './helpers'\r\nimport TtlCache from './ttl-cache'\r\nimport { addresses, ARBITRUM, AVALANCHE } from './addresses'\r\nimport { toReadable, sleep } from './utils'\r\nimport { getPricesClient } from './graph'\r\nimport { isEqual } from 'lodash'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\nconst logger = getLogger('prices')\r\nconst ttlCache = new TtlCache(60, 1000)\r\n\r\nconst LOAD_NEW_PRICES_LOOP_INTERVAL = IS_PRODUCTION ? 60000 : 5000\r\nconst LOAD_OLD_PRICES_LOOP_INTERVAL = IS_PRODUCTION ? 15000 : 5000\r\nconst PERIOD_TO_SECONDS = {\r\n  '5m': 60 * 5,\r\n  '15m': 60 * 15,\r\n  '1h': 60 * 60,\r\n  '4h': 60 * 60 * 4,\r\n  '1d': 60 * 60 * 24,\r\n}\r\nconst VALID_PERIODS = new Set(Object.keys(PERIOD_TO_SECONDS))\r\n\r\n/*\r\n  {\r\n    [42161]: {\r\n      \"0x123123\": {\r\n        \"15m\": []\r\n      }\r\n    }\r\n  }\r\n*/\r\nconst cachedPrices = {\r\n  [ARBITRUM]: {},\r\n  [AVALANCHE]: {}\r\n}\r\nconst candleByPriceId = {}\r\n// both Arbitrum and Avalanche don't have older prices\r\nconst PRICE_START_TIMESTAMP = Math.floor(+new Date(2022, 0, 6) / 1000) // 6th of January 2022\r\nfunction putPricesIntoCache(prices, chainId, append) {\r\n  if (append === undefined) {\r\n    throw new Error('Explicit append is required')\r\n  }\r\n  const start = Date.now()\r\n  if (!prices || !chainId) {\r\n    throw new Error('Invalid arguments')\r\n  }\r\n  \r\n  let ret = true\r\n  const groupByTokenAndPeriod = prices.reduce((acc, price) => {\r\n    const token = price.token\r\n    if (!acc[token]) {\r\n      acc[token] = {}\r\n    }\r\n    if (!acc[token][price.period]) {\r\n      acc[token][price.period] = []\r\n    }\r\n    if (price.timestamp < PRICE_START_TIMESTAMP) {\r\n      ret = false\r\n      return acc;\r\n    }\r\n    acc[token][price.period].push(price)\r\n    return acc\r\n  }, {})\r\n\r\n  for (const token in groupByTokenAndPeriod) {\r\n    for (let [period, pricesForTokenAndPeriod] of Object.entries(groupByTokenAndPeriod[token])) {\r\n      if (pricesForTokenAndPeriod.length === 0) {\r\n        continue\r\n      }\r\n      putPricesForTokenAndPeriodIntoCache(pricesForTokenAndPeriod, chainId, token, period, append)\r\n    }\r\n  }\r\n  logger.info(\"Put %s prices into cache total chain %s took %sms hostname: %s\",\r\n    prices.length,\r\n    chainId,\r\n    Date.now() - start,\r\n    process.env.HOSTNAME\r\n  )\r\n  \r\n  return ret\r\n}\r\n  \r\nfunction priceToCandle(price) {\r\n  return {\r\n    t: price.timestamp,\r\n    o: Number((price.open / 1e30).toFixed(4)),\r\n    c: Number((price.close / 1e30).toFixed(4)),\r\n    h: Number((price.high / 1e30).toFixed(4)),\r\n    l: Number((price.low / 1e30).toFixed(4))\r\n  }\r\n}\r\n\r\nfunction putPricesForTokenAndPeriodIntoCache(prices, chainId, token, period, append) {\r\n  cachedPrices[chainId][token] = cachedPrices[chainId][token] || {}\r\n  cachedPrices[chainId][token][period] = cachedPrices[chainId][token][period] || []\r\n\r\n  const candles = cachedPrices[chainId][token][period]\r\n  if (append) {\r\n    prices.reverse()\r\n  }\r\n\r\n  for (const price of prices) {\r\n    const candle = priceToCandle(price)\r\n    if (candleByPriceId[price.id]) {\r\n      if (!isEqual(candleByPriceId[price.id], candle)) {\r\n        logger.info(\r\n          \"replace data for last stored candle token: %s period: %s close: %s->%s high: %s->%s low: %s->%s\",\r\n          token,\r\n          period,\r\n          candleByPriceId[price.id].c,\r\n          candle.c,\r\n          candleByPriceId[price.id].h,\r\n          candle.h,\r\n          candleByPriceId[price.id].l,\r\n          candle.l\r\n        )\r\n        candleByPriceId[price.id].c = candle.c\r\n        candleByPriceId[price.id].h = candle.h\r\n        candleByPriceId[price.id].l = candle.l\r\n      }\r\n    } else {\r\n      if (append) {\r\n        candles.push(candle)\r\n      } else {\r\n        candles.unshift(candle)\r\n      }\r\n      candleByPriceId[price.id] = candle\r\n    }\r\n  }\r\n  \r\n  if (!IS_PRODUCTION) {\r\n    let prev = null\r\n    cachedPrices[chainId][token][period].forEach(p => {\r\n      if (prev && p.t < prev.t) {\r\n        throw new Error(`Invalid order ${p.t} < ${prev.t} chainId ${chainId} token ${token} period ${period}`)\r\n      }\r\n      if (prev && p.t === prev.t) {\r\n        throw new Error(`Duplicated timestamp ${p.t} chainId ${chainId} token ${token} period ${period}`)\r\n      }\r\n      prev = p\r\n    })\r\n  }\r\n}\r\n\r\nfunction getPriceRange(prices, from, to, inbound = false) {\r\n  const indexFrom = binSearchPrice(prices, from, inbound)\r\n  const indexTo = binSearchPrice(prices, to, !inbound) + 1\r\n\r\n  return prices.slice(indexFrom, indexTo)\r\n}\r\n\r\nfunction binSearchPrice(prices, timestamp, gt = true) {\r\n  let left = 0\r\n  let right = prices.length - 1\r\n  let mid\r\n  while (left + 1 < right) {\r\n    mid = Math.floor((left + right) / 2)\r\n    if (prices[mid].t < timestamp) {\r\n      left = mid\r\n    } else {\r\n      right = mid\r\n    }\r\n  }\r\n  const ret = gt ? right : left\r\n  return ret\r\n}\r\n\r\nfunction getPricesLimit(limit, preferableChainId = ARBITRUM, symbol, period) {\r\n  const prices = getPrices(preferableChainId, symbol, period)\r\n  return prices.slice(Math.max(prices.length - limit, 0))\r\n}\r\n\r\nfunction getPricesFromTo(from, to, preferableChainId = ARBITRUM, symbol, period) {\r\n  const start = Date.now()\r\n  const cacheKey = `${from}:${to}:${preferableChainId}:${symbol}:${period}`\r\n  const fromCache = ttlCache.get(cacheKey)\r\n  if (fromCache) {\r\n    logger.debug('from cache')\r\n    return fromCache\r\n  }\r\n\r\n  const prices = getPriceRange(getPrices(preferableChainId, symbol, period), from, to)\r\n  ttlCache.set(cacheKey, prices)\r\n  logger.info('getPricesFromTo took %sms cacheKey %s', Date.now() - start, cacheKey)\r\n  return prices\r\n}\r\n\r\nfunction getPrices(preferableChainId = ARBITRUM, symbol, period) {\r\n  const tokenAddress = addresses[preferableChainId][symbol]?.toLowerCase()\r\n  if (!tokenAddress) {\r\n    return []\r\n  }\r\n  if (!cachedPrices[preferableChainId]) {\r\n    return []\r\n  }\r\n  if (!cachedPrices[preferableChainId][tokenAddress]) {\r\n    return []\r\n  }\r\n  if (!cachedPrices[preferableChainId][tokenAddress][period]) {\r\n    return []\r\n  }\r\n  \r\n  return cachedPrices[preferableChainId][tokenAddress][period]\r\n}\r\n\r\nlet latestUpdateTimestamp = Math.floor(Date.now() / 1000)\r\nconst CANDLE_PROPS = 'timestamp token period id open high low close'\r\n\r\nasync function loadNewPrices(chainId, period) {\r\n  const logger = getLogger(`prices.loadNewPrices ${chainId}/${period}`)\r\n  if (!chainId) {\r\n    throw new Error('requires chainId')\r\n  }\r\n  \r\n  const getQuery = () => `{\r\n    priceCandles(\r\n      first: 100\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"${period}\" }\r\n    ) { ${CANDLE_PROPS} }\r\n  }`\r\n\r\n  const graphClient = getPricesClient(chainId)\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    try {\r\n      const query = getQuery()\r\n      const start = Date.now()\r\n      logger.info(\"requesting prices for period %s\", period)\r\n      const { data } = await graphClient.query({ query: gql(query) })\r\n      logger.info(\"request done in %sms loaded %s prices\", Date.now() - start, data.priceCandles.length)\r\n      latestUpdateTimestamp = Math.floor(Date.now() / 1000)\r\n      const prices = data.priceCandles\r\n\r\n      if (prices.length === 0) {\r\n        logger.info(\"No prices returned\")\r\n      } else {\r\n        logger.info(\"prices: %s\", prices.length)\r\n        putPricesIntoCache(prices, chainId, true)\r\n      }\r\n    } catch (ex) {\r\n      logger.warn(\"loop failed\")\r\n      logger.warn(ex)\r\n    }\r\n    await sleep(LOAD_NEW_PRICES_LOOP_INTERVAL)\r\n  }\r\n}\r\n\r\nasync function loadOldPrices(chainId, period) {\r\n  const logger = getLogger(`prices.loadOldPrices ${chainId}/${period}`)\r\n  if (!chainId) {\r\n    throw new Error('requires chainId')\r\n  }\r\n\r\n  const getQueryPart = (before, skip) => `\r\n    priceCandles(\r\n      first: 1000\r\n      skip: ${skip}\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { timestamp_lte: ${before}, period: \"${period}\" }\r\n    ) { ${CANDLE_PROPS} }\r\n  `\r\n  const getQuery = before => {\r\n    if (period === \"1d\") {\r\n      return `{\r\n        p0: ${getQueryPart(before, 0)}\r\n      }`\r\n    }\r\n    return `{\r\n      p0: ${getQueryPart(before, 0)}\r\n      p1: ${getQueryPart(before, 1000)}\r\n      p2: ${getQueryPart(before, 2000)}\r\n      p3: ${getQueryPart(before, 3000)}\r\n      p4: ${getQueryPart(before, 4000)}\r\n      p5: ${getQueryPart(before, 5000)}\r\n    }`\r\n  }\r\n  const graphClient = getPricesClient(chainId)\r\n\r\n  let before = Math.floor(Date.now() / 1000)\r\n  const seenOldPrices = new Set()\r\n  // eslint-disable-next-line no-constant-condition\r\n  while (true) {\r\n    try {\r\n      const query = getQuery(before)\r\n      const start = Date.now()\r\n      logger.info(\"requesting prices before %s\", toReadable(before))\r\n      const { data } = await graphClient.query({ query: gql(query) })\r\n      logger.info(\"request done in %sms\", Date.now() - start)\r\n      if (!data || !data.p0) {\r\n        logger.info(\"No data returned. Break\")\r\n        break\r\n      }\r\n      const prices = []\r\n      for (let i = 0; i < 6; i++) {\r\n        const part = data[`p${i}`]\r\n        if (!part) {\r\n          break\r\n        }\r\n        for (const price of part) {\r\n          if (seenOldPrices.has(price.id)) {\r\n            continue\r\n          }\r\n          seenOldPrices.add(price.id)\r\n          prices.push(price)\r\n        }\r\n      }\r\n      if (prices.length === 0) {\r\n        logger.info(\"No unseen prices returned. Break\")\r\n        break\r\n      }\r\n      logger.info(\"prices: %s time range %s - %s\", prices.length, toReadable(prices[prices.length - 1].timestamp), toReadable(prices[0].timestamp))\r\n\r\n      if (!putPricesIntoCache(prices, chainId, false)) {\r\n        logger.info(\"putPricesIntoCache returned false. Stop\")\r\n        break\r\n      }\r\n      before = prices[prices.length - 1].timestamp\r\n      logger.info(\"New before: %s\", toReadable(before))\r\n      \r\n      await sleep(LOAD_OLD_PRICES_LOOP_INTERVAL)\r\n    } catch (ex) {\r\n      logger.warn(\"loop failed, sleep 15 seconds\")\r\n      logger.warn(ex)\r\n      await sleep(15000)\r\n    }\r\n  }\r\n}\r\n\r\nif (IS_PRODUCTION || process.env.ENABLE_PRICES) {\r\n  for (const period of Object.keys(PERIOD_TO_SECONDS)) {\r\n    loadNewPrices(ARBITRUM, period)\r\n    loadNewPrices(AVALANCHE, period)\r\n\r\n    loadOldPrices(ARBITRUM, period)\r\n    loadOldPrices(AVALANCHE, period)\r\n  }\r\n}\r\n\r\nfunction getLastUpdatedTimestamp() {\r\n  return latestUpdateTimestamp\r\n}\r\n\r\nmodule.exports = {\r\n  getPricesLimit,\r\n  getPricesFromTo,\r\n  getLastUpdatedTimestamp,\r\n  VALID_PERIODS\r\n}\r\n","module.exports = require(\"framer-motion\");","module.exports = require(\"react-icons/fa\");","module.exports = require(\"express\");","module.exports = require(\"chalk\");","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.6c6fdee7.eot\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.d785e2df.eot\";","module.exports = require(\"http\");","module.exports = require(\"react-dom/server\");","module.exports = require(\"console-log-level\");","module.exports = require(\"react-dropdown-select\");","module.exports = require(\"react-date-range\");","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.99b8a3eb.woff2\";","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.fc1b5057.woff\";","module.exports = __webpack_public_path__ + \"static/media/relative-book-pro.c52403f4.ttf\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.27c9225c.woff2\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.b64cc288.woff\";","module.exports = __webpack_public_path__ + \"static/media/relative-bold-pro.cb95c2b7.ttf\";","module.exports = __webpack_public_path__ + \"static/media/logo_GMX.ab1390cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_GMX_dark.393971bf.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo_GMX_light.ced2d040.svg\";","module.exports = require(\"react-icons/fi\");","import * as http from 'http'\r\n\r\nlet app = require('./server').default;\r\n\r\nif (module.hot) {\r\n  module.hot.accept('./server', function() {\r\n    console.log('🔁  HMR Reloading `./server`...');\r\n    try {\r\n      app = require('./server').default;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  });\r\n  console.info('✅  Server-side HMR Enabled!');\r\n}\r\n\r\nconst port = process.env.PORT || 3105;\r\nfunction cb(err, port) {\r\n  if (err) {\r\n    console.error(err);\r\n    return;\r\n  }\r\n  console.log(`> Started server on port ${port}`);\r\n}\r\n\r\nhttp.createServer(app).listen(port, err => cb(err, port))\r\n","import sizeof from 'object-sizeof'\r\n\r\nimport { getLogger } from './helpers'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\nclass TtlCache {\r\n  constructor(ttl = 60, maxKeys) {\r\n    this._cache = {}\r\n    this._ttl = ttl\r\n    this._maxKeys = maxKeys\r\n    this._logger = getLogger('routes.TtlCache')\r\n  }\r\n\r\n  get(key) {\r\n    this._logger.debug('get key %s', key)\r\n    return this._cache[key]\r\n  }\r\n\r\n  set(key, value) {\r\n    this._cache[key] = value\r\n\r\n    const keys = Object.keys(this._cache)\r\n    if (this._maxKeys && keys.length >= this._maxKeys) {\r\n      for (let i = 0; i <= keys.length - this._maxKeys; i++) {\r\n        this._logger.debug('delete key %s (max keys)', key)\r\n        delete this._cache[keys[i]]\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this._logger.debug('delete key %s (ttl)', key)\r\n      delete this._cache[key]\r\n    }, this._ttl * 1000)\r\n\r\n    if (!IS_PRODUCTION) {\r\n      console.time('sizeof call')\r\n      const size = sizeof(this._cache) / 1024 / 1024\r\n      console.timeEnd('sizeof call')\r\n      this._logger.debug('TtlCache cache size %s MB', size)\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = TtlCache","module.exports = require(\"object-sizeof\");","import fetch from 'cross-fetch';\r\nimport { ApolloClient, InMemoryCache, HttpLink } from '@apollo/client'\r\n\r\nimport { ARBITRUM, AVALANCHE } from './addresses'\r\n\r\nconst apolloOptions = {\r\n  query: {\r\n    fetchPolicy: 'no-cache'\r\n  },\r\n  watchQuery: {\r\n    fetchPolicy: 'no-cache'\r\n  }\r\n}\r\n// https://api.thegraph.com/subgraphs/name/fyk943749465/prices\r\nconst arbitrumPricesClient = new ApolloClient({\r\n  // link: new HttpLink({ uri: 'https://api.thegraph.com/subgraphs/name/gmx-io/gmx-arbitrum-prices', fetch }),\r\n  link: new HttpLink({ uri: 'https://api.thegraph.com/subgraphs/name/fyk943749465/prices', fetch }),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: apolloOptions\r\n})\r\n// https://api.thegraph.com/subgraphs/name/fyk943749465/avalanche-prices\r\nconst avalanchePricesClient = new ApolloClient({\r\n  // link: new HttpLink({ uri: 'https://api.thegraph.com/subgraphs/name/gmx-io/gmx-avalanche-prices', fetch }),\r\n  link: new HttpLink({ uri: 'https://api.thegraph.com/subgraphs/name/fyk943749465/avalanche-prices', fetch }),\r\n  cache: new InMemoryCache(),\r\n  defaultOptions: apolloOptions\r\n})\r\n\r\nfunction getPricesClient(chainId) {\r\n  if (chainId === ARBITRUM) {\r\n    return arbitrumPricesClient\r\n  } else if (chainId === AVALANCHE) {\r\n    return avalanchePricesClient\r\n  } else {\r\n    throw new Error(`Invalid chainId ${chainId}`)\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  getPricesClient\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".rdrCalendarWrapper {\\n  box-sizing: border-box;\\n  background: #ffffff;\\n  display: inline-flex;\\n  flex-direction: column;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.rdrDateDisplay{\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.rdrDateDisplayItem{\\n  flex: 1 1;\\n  width: 0;\\n  text-align: center;\\n  color: inherit;\\n}\\n\\n.rdrDateDisplayItem + .rdrDateDisplayItem{\\n    margin-left: 0.833em;\\n  }\\n\\n.rdrDateDisplayItem input{\\n    text-align: inherit\\n  }\\n\\n.rdrDateDisplayItem input:disabled{\\n      cursor: default;\\n    }\\n\\n.rdrDateDisplayItemActive{}\\n\\n.rdrMonthAndYearWrapper {\\n  box-sizing: inherit;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.rdrMonthAndYearPickers{\\n  flex: 1 1 auto;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.rdrMonthPicker{}\\n\\n.rdrYearPicker{}\\n\\n.rdrNextPrevButton {\\n  box-sizing: inherit;\\n  cursor: pointer;\\n  outline: none;\\n}\\n\\n.rdrPprevButton {}\\n\\n.rdrNextButton {}\\n\\n.rdrMonths{\\n  display: flex;\\n}\\n\\n.rdrMonthsVertical{\\n  flex-direction: column;\\n}\\n\\n.rdrMonthsHorizontal > div > div > div{\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.rdrMonth{\\n  width: 27.667em;\\n}\\n\\n.rdrWeekDays{\\n  display: flex;\\n}\\n\\n.rdrWeekDay {\\n  flex-basis: calc(100% / 7);\\n  box-sizing: inherit;\\n  text-align: center;\\n}\\n\\n.rdrDays{\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n\\n.rdrDateDisplayWrapper{}\\n\\n.rdrMonthName{}\\n\\n.rdrInfiniteMonths{\\n  overflow: auto;\\n}\\n\\n.rdrDateRangeWrapper{\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.rdrDateInput {\\n  position: relative;\\n}\\n\\n.rdrDateInput input {\\n    outline: none;\\n  }\\n\\n.rdrDateInput .rdrWarning {\\n    position: absolute;\\n    font-size: 1.6em;\\n    line-height: 1.6em;\\n    top: 0;\\n    right: .25em;\\n    color: #FF0000;\\n  }\\n\\n.rdrDay {\\n  box-sizing: inherit;\\n  width: calc(100% / 7);\\n  position: relative;\\n  font: inherit;\\n  cursor: pointer;\\n}\\n\\n.rdrDayNumber {\\n  display: block;\\n  position: relative;\\n}\\n\\n.rdrDayNumber span{\\n    color: #1d2429;\\n  }\\n\\n.rdrDayDisabled {\\n  cursor: not-allowed;\\n}\\n\\n@supports (-ms-ime-align: auto) {\\n  .rdrDay {\\n    flex-basis: 14.285% !important;\\n  }\\n}\\n\\n.rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge{\\n  pointer-events: none;\\n}\\n\\n.rdrInRange{}\\n\\n.rdrDayStartPreview, .rdrDayInPreview, .rdrDayEndPreview{\\n  pointer-events: none;\\n}\\n\\n.rdrDayHovered{}\\n\\n.rdrDayActive{}\\n\\n.rdrDateRangePickerWrapper{\\n  display: inline-flex;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.rdrDefinedRangesWrapper{}\\n\\n.rdrStaticRanges{\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.rdrStaticRange{\\n  font-size: inherit;\\n}\\n\\n.rdrStaticRangeLabel{}\\n\\n.rdrInputRanges{}\\n\\n.rdrInputRange{\\n  display: flex;\\n}\\n\\n.rdrInputRangeInput{}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/react-date-range/dist/styles.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,sBAAsB;EACtB,mBAAmB;EACnB,oBAAoB;EACpB,sBAAsB;EACtB,yBAAyB;KACtB,sBAAsB;MACrB,qBAAqB;UACjB,iBAAiB;AAC3B;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,SAAS;EACT,QAAQ;EACR,kBAAkB;EAClB,cAAc;AAChB;;AAEA;IACI,oBAAoB;EACtB;;AAEF;IACI;EACF;;AAEF;MACM,eAAe;IACjB;;AAEJ,0BAA0B;;AAE1B;EACE,mBAAmB;EACnB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA,gBAAgB;;AAEhB,eAAe;;AAEf;EACE,mBAAmB;EACnB,eAAe;EACf,aAAa;AACf;;AAEA,iBAAiB;;AAEjB,gBAAgB;;AAEhB;EACE,aAAa;AACf;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,0BAA0B;EAC1B,mBAAmB;EACnB,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,eAAe;AACjB;;AAEA,uBAAuB;;AAEvB,cAAc;;AAEd;EACE,cAAc;AAChB;;AAEA;EACE,yBAAyB;KACtB,sBAAsB;MACrB,qBAAqB;UACjB,iBAAiB;AAC3B;;AAEA;EACE,kBAAkB;AACpB;;AAEA;IACI,aAAa;EACf;;AAEF;IACI,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;IAClB,MAAM;IACN,YAAY;IACZ,cAAc;EAChB;;AAEF;EACE,mBAAmB;EACnB,qBAAqB;EACrB,kBAAkB;EAClB,aAAa;EACb,eAAe;AACjB;;AAEA;EACE,cAAc;EACd,kBAAkB;AACpB;;AAEA;IACI,cAAc;EAChB;;AAEF;EACE,mBAAmB;AACrB;;AAEA;EACE;IACE,8BAA8B;EAChC;AACF;;AAEA;EACE,oBAAoB;AACtB;;AAEA,YAAY;;AAEZ;EACE,oBAAoB;AACtB;;AAEA,eAAe;;AAEf,cAAc;;AAEd;EACE,oBAAoB;EACpB,yBAAyB;KACtB,sBAAsB;MACrB,qBAAqB;UACjB,iBAAiB;AAC3B;;AAEA,yBAAyB;;AAEzB;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,qBAAqB;;AAErB,gBAAgB;;AAEhB;EACE,aAAa;AACf;;AAEA,oBAAoB\",\"sourcesContent\":[\".rdrCalendarWrapper {\\n  box-sizing: border-box;\\n  background: #ffffff;\\n  display: inline-flex;\\n  flex-direction: column;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.rdrDateDisplay{\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.rdrDateDisplayItem{\\n  flex: 1 1;\\n  width: 0;\\n  text-align: center;\\n  color: inherit;\\n}\\n\\n.rdrDateDisplayItem + .rdrDateDisplayItem{\\n    margin-left: 0.833em;\\n  }\\n\\n.rdrDateDisplayItem input{\\n    text-align: inherit\\n  }\\n\\n.rdrDateDisplayItem input:disabled{\\n      cursor: default;\\n    }\\n\\n.rdrDateDisplayItemActive{}\\n\\n.rdrMonthAndYearWrapper {\\n  box-sizing: inherit;\\n  display: flex;\\n  justify-content: space-between;\\n}\\n\\n.rdrMonthAndYearPickers{\\n  flex: 1 1 auto;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.rdrMonthPicker{}\\n\\n.rdrYearPicker{}\\n\\n.rdrNextPrevButton {\\n  box-sizing: inherit;\\n  cursor: pointer;\\n  outline: none;\\n}\\n\\n.rdrPprevButton {}\\n\\n.rdrNextButton {}\\n\\n.rdrMonths{\\n  display: flex;\\n}\\n\\n.rdrMonthsVertical{\\n  flex-direction: column;\\n}\\n\\n.rdrMonthsHorizontal > div > div > div{\\n  display: flex;\\n  flex-direction: row;\\n}\\n\\n.rdrMonth{\\n  width: 27.667em;\\n}\\n\\n.rdrWeekDays{\\n  display: flex;\\n}\\n\\n.rdrWeekDay {\\n  flex-basis: calc(100% / 7);\\n  box-sizing: inherit;\\n  text-align: center;\\n}\\n\\n.rdrDays{\\n  display: flex;\\n  flex-wrap: wrap;\\n}\\n\\n.rdrDateDisplayWrapper{}\\n\\n.rdrMonthName{}\\n\\n.rdrInfiniteMonths{\\n  overflow: auto;\\n}\\n\\n.rdrDateRangeWrapper{\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.rdrDateInput {\\n  position: relative;\\n}\\n\\n.rdrDateInput input {\\n    outline: none;\\n  }\\n\\n.rdrDateInput .rdrWarning {\\n    position: absolute;\\n    font-size: 1.6em;\\n    line-height: 1.6em;\\n    top: 0;\\n    right: .25em;\\n    color: #FF0000;\\n  }\\n\\n.rdrDay {\\n  box-sizing: inherit;\\n  width: calc(100% / 7);\\n  position: relative;\\n  font: inherit;\\n  cursor: pointer;\\n}\\n\\n.rdrDayNumber {\\n  display: block;\\n  position: relative;\\n}\\n\\n.rdrDayNumber span{\\n    color: #1d2429;\\n  }\\n\\n.rdrDayDisabled {\\n  cursor: not-allowed;\\n}\\n\\n@supports (-ms-ime-align: auto) {\\n  .rdrDay {\\n    flex-basis: 14.285% !important;\\n  }\\n}\\n\\n.rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge{\\n  pointer-events: none;\\n}\\n\\n.rdrInRange{}\\n\\n.rdrDayStartPreview, .rdrDayInPreview, .rdrDayEndPreview{\\n  pointer-events: none;\\n}\\n\\n.rdrDayHovered{}\\n\\n.rdrDayActive{}\\n\\n.rdrDateRangePickerWrapper{\\n  display: inline-flex;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n}\\n\\n.rdrDefinedRangesWrapper{}\\n\\n.rdrStaticRanges{\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.rdrStaticRange{\\n  font-size: inherit;\\n}\\n\\n.rdrStaticRangeLabel{}\\n\\n.rdrInputRanges{}\\n\\n.rdrInputRange{\\n  display: flex;\\n}\\n\\n.rdrInputRangeInput{}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".rdrCalendarWrapper{\\n  color: #000000;\\n  font-size: 12px;\\n}\\n\\n.rdrDateDisplayWrapper{\\n  background-color: rgb(239, 242, 247);\\n}\\n\\n.rdrDateDisplay{\\n  margin: 0.833em;\\n}\\n\\n.rdrDateDisplayItem{\\n  border-radius: 4px;\\n  background-color: rgb(255, 255, 255);\\n  box-shadow: 0 1px 2px 0 rgba(35, 57, 66, 0.21);\\n  border: 1px solid transparent;\\n}\\n\\n.rdrDateDisplayItem input{\\n    cursor: pointer;\\n    height: 2.5em;\\n    line-height: 2.5em;\\n    border: 0px;\\n    background: transparent;\\n    width: 100%;\\n    color: #849095;\\n  }\\n\\n.rdrDateDisplayItemActive{\\n  border-color: currentColor;\\n}\\n\\n.rdrDateDisplayItemActive input{\\n    color: #7d888d\\n  }\\n\\n.rdrMonthAndYearWrapper {\\n  align-items: center;\\n  height: 60px;\\n  padding-top: 10px;\\n}\\n\\n.rdrMonthAndYearPickers{\\n  font-weight: 600;\\n}\\n\\n.rdrMonthAndYearPickers select{\\n    -moz-appearance: none;\\n         appearance: none;\\n    -webkit-appearance: none;\\n    border: 0;\\n    background: transparent;\\n    padding: 10px 30px 10px 10px;\\n    border-radius: 4px;\\n    outline: 0;\\n    color: #3e484f;\\n    background: url(\\\"data:image/svg+xml;utf8,<svg width='9px' height='6px' viewBox='0 0 9 6' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Artboard' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(-636.000000, -171.000000)' fill-opacity='0.368716033'><g id='input' transform='translate(172.000000, 37.000000)' fill='%230E242F' fill-rule='nonzero'><g id='Group-9' transform='translate(323.000000, 127.000000)'><path d='M142.280245,7.23952813 C141.987305,6.92353472 141.512432,6.92361662 141.219585,7.23971106 C140.926739,7.5558055 140.926815,8.06821394 141.219755,8.38420735 L145.498801,13 L149.780245,8.38162071 C150.073185,8.0656273 150.073261,7.55321886 149.780415,7.23712442 C149.487568,6.92102998 149.012695,6.92094808 148.719755,7.23694149 L145.498801,10.7113732 L142.280245,7.23952813 Z' id='arrow'></path></g></g></g></svg>\\\") no-repeat;\\n    background-position: right 8px center;\\n    cursor: pointer;\\n    text-align: center\\n  }\\n\\n.rdrMonthAndYearPickers select:hover{\\n      background-color: rgba(0,0,0,0.07);\\n    }\\n\\n.rdrMonthPicker, .rdrYearPicker{\\n  margin: 0 5px\\n}\\n\\n.rdrNextPrevButton {\\n  display: block;\\n  width: 24px;\\n  height: 24px;\\n  margin: 0 0.833em;\\n  padding: 0;\\n  border: 0;\\n  border-radius: 5px;\\n  background: #EFF2F7\\n}\\n\\n.rdrNextPrevButton:hover{\\n    background: #E1E7F0;\\n  }\\n\\n.rdrNextPrevButton i {\\n    display: block;\\n    width: 0;\\n    height: 0;\\n    padding: 0;\\n    text-align: center;\\n    border-style: solid;\\n    margin: auto;\\n    transform: translate(-3px, 0px);\\n  }\\n\\n.rdrPprevButton i {\\n    border-width: 4px 6px 4px 4px;\\n    border-color: transparent rgb(52, 73, 94) transparent transparent;\\n    transform: translate(-3px, 0px);\\n  }\\n\\n.rdrNextButton i {\\n    margin: 0 0 0 7px;\\n    border-width: 4px 4px 4px 6px;\\n    border-color: transparent transparent transparent rgb(52, 73, 94);\\n    transform: translate(3px, 0px);\\n  }\\n\\n.rdrWeekDays {\\n  padding: 0 0.833em;\\n}\\n\\n.rdrMonth{\\n  padding: 0 0.833em 1.666em 0.833em;\\n}\\n\\n.rdrMonth .rdrWeekDays {\\n    padding: 0;\\n  }\\n\\n.rdrMonths.rdrMonthsVertical .rdrMonth:first-child .rdrMonthName{\\n  display: none;\\n}\\n\\n.rdrWeekDay {\\n  font-weight: 400;\\n  line-height: 2.667em;\\n  color: rgb(132, 144, 149);\\n}\\n\\n.rdrDay {\\n  background: transparent;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  border: 0;\\n  padding: 0;\\n  line-height: 3.000em;\\n  height: 3.000em;\\n  text-align: center;\\n  color: #1d2429\\n}\\n\\n.rdrDay:focus {\\n    outline: 0;\\n  }\\n\\n.rdrDayNumber {\\n  outline: 0;\\n  font-weight: 300;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  top: 5px;\\n  bottom: 5px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.rdrDayToday .rdrDayNumber span{\\n  font-weight: 500\\n}\\n\\n.rdrDayToday .rdrDayNumber span:after{\\n    content: '';\\n    position: absolute;\\n    bottom: 4px;\\n    left: 50%;\\n    transform: translate(-50%, 0);\\n    width: 18px;\\n    height: 2px;\\n    border-radius: 2px;\\n    background: #3d91ff;\\n  }\\n\\n.rdrDayToday:not(.rdrDayPassive) .rdrInRange ~ .rdrDayNumber span:after,.rdrDayToday:not(.rdrDayPassive) .rdrStartEdge ~ .rdrDayNumber span:after,.rdrDayToday:not(.rdrDayPassive) .rdrEndEdge ~ .rdrDayNumber span:after,.rdrDayToday:not(.rdrDayPassive) .rdrSelected ~ .rdrDayNumber span:after{\\n      background: #fff;\\n    }\\n\\n.rdrDay:not(.rdrDayPassive) .rdrInRange ~ .rdrDayNumber span,.rdrDay:not(.rdrDayPassive) .rdrStartEdge ~ .rdrDayNumber span,.rdrDay:not(.rdrDayPassive) .rdrEndEdge ~ .rdrDayNumber span,.rdrDay:not(.rdrDayPassive) .rdrSelected ~ .rdrDayNumber span{\\n          color: rgba(255, 255, 255, 0.85);\\n        }\\n\\n.rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge{\\n  background: currentColor;\\n  position: absolute;\\n  top: 5px;\\n  left: 0;\\n  right: 0;\\n  bottom: 5px;\\n}\\n\\n.rdrSelected{\\n  left: 2px;\\n  right: 2px;\\n}\\n\\n.rdrInRange{}\\n\\n.rdrStartEdge{\\n  border-top-left-radius: 1.042em;\\n  border-bottom-left-radius: 1.042em;\\n  left: 2px;\\n}\\n\\n.rdrEndEdge{\\n  border-top-right-radius: 1.042em;\\n  border-bottom-right-radius: 1.042em;\\n  right: 2px;\\n}\\n\\n.rdrSelected{\\n  border-radius: 1.042em;\\n}\\n\\n.rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfWeek .rdrEndEdge{\\n    border-top-left-radius: 1.042em;\\n    border-bottom-left-radius: 1.042em;\\n    left: 2px;\\n  }\\n\\n.rdrDayEndOfMonth .rdrInRange,  .rdrDayEndOfMonth .rdrStartEdge,  .rdrDayEndOfWeek .rdrInRange,  .rdrDayEndOfWeek .rdrStartEdge{\\n    border-top-right-radius: 1.042em;\\n    border-bottom-right-radius: 1.042em;\\n    right: 2px;\\n  }\\n\\n.rdrDayStartOfMonth .rdrDayInPreview, .rdrDayStartOfMonth .rdrDayEndPreview, .rdrDayStartOfWeek .rdrDayInPreview, .rdrDayStartOfWeek .rdrDayEndPreview{\\n    border-top-left-radius: 1.333em;\\n    border-bottom-left-radius: 1.333em;\\n    border-left-width: 1px;\\n    left: 0px;\\n  }\\n\\n.rdrDayEndOfMonth .rdrDayInPreview, .rdrDayEndOfMonth .rdrDayStartPreview, .rdrDayEndOfWeek .rdrDayInPreview, .rdrDayEndOfWeek .rdrDayStartPreview{\\n   border-top-right-radius: 1.333em;\\n   border-bottom-right-radius: 1.333em;\\n   border-right-width: 1px;\\n   right: 0px;\\n }\\n\\n.rdrDayStartPreview, .rdrDayInPreview, .rdrDayEndPreview{\\n  background: rgba(255, 255, 255, 0.09);\\n  position: absolute;\\n  top: 3px;\\n  left: 0px;\\n  right: 0px;\\n  bottom: 3px;\\n  pointer-events: none;\\n  border: 0px solid currentColor;\\n  z-index: 1;\\n}\\n\\n.rdrDayStartPreview{\\n  border-top-width: 1px;\\n  border-left-width: 1px;\\n  border-bottom-width: 1px;\\n  border-top-left-radius: 1.333em;\\n  border-bottom-left-radius: 1.333em;\\n  left: 0px;\\n}\\n\\n.rdrDayInPreview{\\n  border-top-width: 1px;\\n  border-bottom-width: 1px;\\n}\\n\\n.rdrDayEndPreview{\\n  border-top-width: 1px;\\n  border-right-width: 1px;\\n  border-bottom-width: 1px;\\n  border-top-right-radius: 1.333em;\\n  border-bottom-right-radius: 1.333em;\\n  right: 2px;\\n  right: 0px;\\n}\\n\\n.rdrDefinedRangesWrapper{\\n  font-size: 12px;\\n  width: 226px;\\n  border-right: solid 1px #eff2f7;\\n  background: #fff;\\n}\\n\\n.rdrDefinedRangesWrapper .rdrStaticRangeSelected{\\n    color: currentColor;\\n    font-weight: 600;\\n  }\\n\\n.rdrStaticRange{\\n  border: 0;\\n  cursor: pointer;\\n  display: block;\\n  outline: 0;\\n  border-bottom: 1px solid #eff2f7;\\n  padding: 0;\\n  background: #fff\\n}\\n\\n.rdrStaticRange:hover .rdrStaticRangeLabel,.rdrStaticRange:focus .rdrStaticRangeLabel{\\n      background: #eff2f7;\\n    }\\n\\n.rdrStaticRangeLabel{\\n  display: block;\\n  outline: 0;\\n  line-height: 18px;\\n  padding: 10px 20px;\\n  text-align: left;\\n}\\n\\n.rdrInputRanges{\\n  padding: 10px 0;\\n}\\n\\n.rdrInputRange{\\n  align-items: center;\\n  padding: 5px 20px;\\n}\\n\\n.rdrInputRangeInput{\\n  width: 30px;\\n  height: 30px;\\n  line-height: 30px;\\n  border-radius: 4px;\\n  text-align: center;\\n  border: solid 1px rgb(222, 231, 235);\\n  margin-right: 10px;\\n  color: rgb(108, 118, 122)\\n}\\n\\n.rdrInputRangeInput:focus, .rdrInputRangeInput:hover{\\n    border-color: rgb(180, 191, 196);\\n    outline: 0;\\n    color: #333;\\n  }\\n\\n.rdrCalendarWrapper:not(.rdrDateRangeWrapper) .rdrDayHovered .rdrDayNumber:after{\\n  content: '';\\n  border: 1px solid currentColor;\\n  border-radius: 1.333em;\\n  position: absolute;\\n  top: -2px;\\n  bottom: -2px;\\n  left: 0px;\\n  right: 0px;\\n  background: transparent;\\n}\\n\\n.rdrDayPassive{\\n  pointer-events: none;\\n}\\n\\n.rdrDayPassive .rdrDayNumber span{\\n    color: #d5dce0;\\n  }\\n\\n.rdrDayPassive .rdrInRange, .rdrDayPassive .rdrStartEdge, .rdrDayPassive .rdrEndEdge, .rdrDayPassive .rdrSelected, .rdrDayPassive .rdrDayStartPreview, .rdrDayPassive .rdrDayInPreview, .rdrDayPassive .rdrDayEndPreview{\\n    display: none;\\n  }\\n\\n.rdrDayDisabled {\\n  background-color: rgb(248, 248, 248);\\n}\\n\\n.rdrDayDisabled .rdrDayNumber span{\\n    color: #aeb9bf;\\n  }\\n\\n.rdrDayDisabled .rdrInRange, .rdrDayDisabled .rdrStartEdge, .rdrDayDisabled .rdrEndEdge, .rdrDayDisabled .rdrSelected, .rdrDayDisabled .rdrDayStartPreview, .rdrDayDisabled .rdrDayInPreview, .rdrDayDisabled .rdrDayEndPreview{\\n    filter: grayscale(100%) opacity(60%);\\n  }\\n\\n.rdrMonthName{\\n  text-align: left;\\n  font-weight: 600;\\n  color: #849095;\\n  padding: 0.833em;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/react-date-range/dist/theme/default.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,oCAAoC;EACpC,8CAA8C;EAC9C,6BAA6B;AAC/B;;AAEA;IACI,eAAe;IACf,aAAa;IACb,kBAAkB;IAClB,WAAW;IACX,uBAAuB;IACvB,WAAW;IACX,cAAc;EAChB;;AAEF;EACE,0BAA0B;AAC5B;;AAEA;IACI;EACF;;AAEF;EACE,mBAAmB;EACnB,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,gBAAgB;AAClB;;AAEA;IACI,qBAAqB;SAChB,gBAAgB;IACrB,wBAAwB;IACxB,SAAS;IACT,uBAAuB;IACvB,4BAA4B;IAC5B,kBAAkB;IAClB,UAAU;IACV,cAAc;IACd,+5BAA+5B;IAC/5B,qCAAqC;IACrC,eAAe;IACf;EACF;;AAEF;MACM,kCAAkC;IACpC;;AAEJ;EACE;AACF;;AAEA;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,UAAU;EACV,SAAS;EACT,kBAAkB;EAClB;AACF;;AAEA;IACI,mBAAmB;EACrB;;AAEF;IACI,cAAc;IACd,QAAQ;IACR,SAAS;IACT,UAAU;IACV,kBAAkB;IAClB,mBAAmB;IACnB,YAAY;IACZ,+BAA+B;EACjC;;AAEF;IACI,6BAA6B;IAC7B,iEAAiE;IACjE,+BAA+B;EACjC;;AAEF;IACI,iBAAiB;IACjB,6BAA6B;IAC7B,iEAAiE;IACjE,8BAA8B;EAChC;;AAEF;EACE,kBAAkB;AACpB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;IACI,UAAU;EACZ;;AAEF;EACE,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,oBAAoB;EACpB,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;EACvB,yBAAyB;KACtB,sBAAsB;MACrB,qBAAqB;UACjB,iBAAiB;EACzB,SAAS;EACT,UAAU;EACV,oBAAoB;EACpB,eAAe;EACf,kBAAkB;EAClB;AACF;;AAEA;IACI,UAAU;EACZ;;AAEF;EACE,UAAU;EACV,gBAAgB;EAChB,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,MAAM;EACN,SAAS;EACT,QAAQ;EACR,WAAW;EACX,aAAa;EACb,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE;AACF;;AAEA;IACI,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,SAAS;IACT,6BAA6B;IAC7B,WAAW;IACX,WAAW;IACX,kBAAkB;IAClB,mBAAmB;EACrB;;AAEF;MACM,gBAAgB;IAClB;;AAEJ;UACU,gCAAgC;QAClC;;AAER;EACE,wBAAwB;EACxB,kBAAkB;EAClB,QAAQ;EACR,OAAO;EACP,QAAQ;EACR,WAAW;AACb;;AAEA;EACE,SAAS;EACT,UAAU;AACZ;;AAEA,YAAY;;AAEZ;EACE,+BAA+B;EAC/B,kCAAkC;EAClC,SAAS;AACX;;AAEA;EACE,gCAAgC;EAChC,mCAAmC;EACnC,UAAU;AACZ;;AAEA;EACE,sBAAsB;AACxB;;AAEA;IACI,+BAA+B;IAC/B,kCAAkC;IAClC,SAAS;EACX;;AAEF;IACI,gCAAgC;IAChC,mCAAmC;IACnC,UAAU;EACZ;;AAEF;IACI,+BAA+B;IAC/B,kCAAkC;IAClC,sBAAsB;IACtB,SAAS;EACX;;AAEF;GACG,gCAAgC;GAChC,mCAAmC;GACnC,uBAAuB;GACvB,UAAU;CACZ;;AAED;EACE,qCAAqC;EACrC,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,UAAU;EACV,WAAW;EACX,oBAAoB;EACpB,8BAA8B;EAC9B,UAAU;AACZ;;AAEA;EACE,qBAAqB;EACrB,sBAAsB;EACtB,wBAAwB;EACxB,+BAA+B;EAC/B,kCAAkC;EAClC,SAAS;AACX;;AAEA;EACE,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;EACE,qBAAqB;EACrB,uBAAuB;EACvB,wBAAwB;EACxB,gCAAgC;EAChC,mCAAmC;EACnC,UAAU;EACV,UAAU;AACZ;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,+BAA+B;EAC/B,gBAAgB;AAClB;;AAEA;IACI,mBAAmB;IACnB,gBAAgB;EAClB;;AAEF;EACE,SAAS;EACT,eAAe;EACf,cAAc;EACd,UAAU;EACV,gCAAgC;EAChC,UAAU;EACV;AACF;;AAEA;MACM,mBAAmB;IACrB;;AAEJ;EACE,cAAc;EACd,UAAU;EACV,iBAAiB;EACjB,kBAAkB;EAClB,gBAAgB;AAClB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,mBAAmB;EACnB,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,iBAAiB;EACjB,kBAAkB;EAClB,kBAAkB;EAClB,oCAAoC;EACpC,kBAAkB;EAClB;AACF;;AAEA;IACI,gCAAgC;IAChC,UAAU;IACV,WAAW;EACb;;AAEF;EACE,WAAW;EACX,8BAA8B;EAC9B,sBAAsB;EACtB,kBAAkB;EAClB,SAAS;EACT,YAAY;EACZ,SAAS;EACT,UAAU;EACV,uBAAuB;AACzB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;IACI,cAAc;EAChB;;AAEF;IACI,aAAa;EACf;;AAEF;EACE,oCAAoC;AACtC;;AAEA;IACI,cAAc;EAChB;;AAEF;IACI,oCAAoC;EACtC;;AAEF;EACE,gBAAgB;EAChB,gBAAgB;EAChB,cAAc;EACd,gBAAgB;AAClB\",\"sourcesContent\":[\".rdrCalendarWrapper{\\n  color: #000000;\\n  font-size: 12px;\\n}\\n\\n.rdrDateDisplayWrapper{\\n  background-color: rgb(239, 242, 247);\\n}\\n\\n.rdrDateDisplay{\\n  margin: 0.833em;\\n}\\n\\n.rdrDateDisplayItem{\\n  border-radius: 4px;\\n  background-color: rgb(255, 255, 255);\\n  box-shadow: 0 1px 2px 0 rgba(35, 57, 66, 0.21);\\n  border: 1px solid transparent;\\n}\\n\\n.rdrDateDisplayItem input{\\n    cursor: pointer;\\n    height: 2.5em;\\n    line-height: 2.5em;\\n    border: 0px;\\n    background: transparent;\\n    width: 100%;\\n    color: #849095;\\n  }\\n\\n.rdrDateDisplayItemActive{\\n  border-color: currentColor;\\n}\\n\\n.rdrDateDisplayItemActive input{\\n    color: #7d888d\\n  }\\n\\n.rdrMonthAndYearWrapper {\\n  align-items: center;\\n  height: 60px;\\n  padding-top: 10px;\\n}\\n\\n.rdrMonthAndYearPickers{\\n  font-weight: 600;\\n}\\n\\n.rdrMonthAndYearPickers select{\\n    -moz-appearance: none;\\n         appearance: none;\\n    -webkit-appearance: none;\\n    border: 0;\\n    background: transparent;\\n    padding: 10px 30px 10px 10px;\\n    border-radius: 4px;\\n    outline: 0;\\n    color: #3e484f;\\n    background: url(\\\"data:image/svg+xml;utf8,<svg width='9px' height='6px' viewBox='0 0 9 6' version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'><g id='Artboard' stroke='none' stroke-width='1' fill='none' fill-rule='evenodd' transform='translate(-636.000000, -171.000000)' fill-opacity='0.368716033'><g id='input' transform='translate(172.000000, 37.000000)' fill='%230E242F' fill-rule='nonzero'><g id='Group-9' transform='translate(323.000000, 127.000000)'><path d='M142.280245,7.23952813 C141.987305,6.92353472 141.512432,6.92361662 141.219585,7.23971106 C140.926739,7.5558055 140.926815,8.06821394 141.219755,8.38420735 L145.498801,13 L149.780245,8.38162071 C150.073185,8.0656273 150.073261,7.55321886 149.780415,7.23712442 C149.487568,6.92102998 149.012695,6.92094808 148.719755,7.23694149 L145.498801,10.7113732 L142.280245,7.23952813 Z' id='arrow'></path></g></g></g></svg>\\\") no-repeat;\\n    background-position: right 8px center;\\n    cursor: pointer;\\n    text-align: center\\n  }\\n\\n.rdrMonthAndYearPickers select:hover{\\n      background-color: rgba(0,0,0,0.07);\\n    }\\n\\n.rdrMonthPicker, .rdrYearPicker{\\n  margin: 0 5px\\n}\\n\\n.rdrNextPrevButton {\\n  display: block;\\n  width: 24px;\\n  height: 24px;\\n  margin: 0 0.833em;\\n  padding: 0;\\n  border: 0;\\n  border-radius: 5px;\\n  background: #EFF2F7\\n}\\n\\n.rdrNextPrevButton:hover{\\n    background: #E1E7F0;\\n  }\\n\\n.rdrNextPrevButton i {\\n    display: block;\\n    width: 0;\\n    height: 0;\\n    padding: 0;\\n    text-align: center;\\n    border-style: solid;\\n    margin: auto;\\n    transform: translate(-3px, 0px);\\n  }\\n\\n.rdrPprevButton i {\\n    border-width: 4px 6px 4px 4px;\\n    border-color: transparent rgb(52, 73, 94) transparent transparent;\\n    transform: translate(-3px, 0px);\\n  }\\n\\n.rdrNextButton i {\\n    margin: 0 0 0 7px;\\n    border-width: 4px 4px 4px 6px;\\n    border-color: transparent transparent transparent rgb(52, 73, 94);\\n    transform: translate(3px, 0px);\\n  }\\n\\n.rdrWeekDays {\\n  padding: 0 0.833em;\\n}\\n\\n.rdrMonth{\\n  padding: 0 0.833em 1.666em 0.833em;\\n}\\n\\n.rdrMonth .rdrWeekDays {\\n    padding: 0;\\n  }\\n\\n.rdrMonths.rdrMonthsVertical .rdrMonth:first-child .rdrMonthName{\\n  display: none;\\n}\\n\\n.rdrWeekDay {\\n  font-weight: 400;\\n  line-height: 2.667em;\\n  color: rgb(132, 144, 149);\\n}\\n\\n.rdrDay {\\n  background: transparent;\\n  -webkit-user-select: none;\\n     -moz-user-select: none;\\n      -ms-user-select: none;\\n          user-select: none;\\n  border: 0;\\n  padding: 0;\\n  line-height: 3.000em;\\n  height: 3.000em;\\n  text-align: center;\\n  color: #1d2429\\n}\\n\\n.rdrDay:focus {\\n    outline: 0;\\n  }\\n\\n.rdrDayNumber {\\n  outline: 0;\\n  font-weight: 300;\\n  position: absolute;\\n  left: 0;\\n  right: 0;\\n  top: 0;\\n  bottom: 0;\\n  top: 5px;\\n  bottom: 5px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n\\n.rdrDayToday .rdrDayNumber span{\\n  font-weight: 500\\n}\\n\\n.rdrDayToday .rdrDayNumber span:after{\\n    content: '';\\n    position: absolute;\\n    bottom: 4px;\\n    left: 50%;\\n    transform: translate(-50%, 0);\\n    width: 18px;\\n    height: 2px;\\n    border-radius: 2px;\\n    background: #3d91ff;\\n  }\\n\\n.rdrDayToday:not(.rdrDayPassive) .rdrInRange ~ .rdrDayNumber span:after,.rdrDayToday:not(.rdrDayPassive) .rdrStartEdge ~ .rdrDayNumber span:after,.rdrDayToday:not(.rdrDayPassive) .rdrEndEdge ~ .rdrDayNumber span:after,.rdrDayToday:not(.rdrDayPassive) .rdrSelected ~ .rdrDayNumber span:after{\\n      background: #fff;\\n    }\\n\\n.rdrDay:not(.rdrDayPassive) .rdrInRange ~ .rdrDayNumber span,.rdrDay:not(.rdrDayPassive) .rdrStartEdge ~ .rdrDayNumber span,.rdrDay:not(.rdrDayPassive) .rdrEndEdge ~ .rdrDayNumber span,.rdrDay:not(.rdrDayPassive) .rdrSelected ~ .rdrDayNumber span{\\n          color: rgba(255, 255, 255, 0.85);\\n        }\\n\\n.rdrSelected, .rdrInRange, .rdrStartEdge, .rdrEndEdge{\\n  background: currentColor;\\n  position: absolute;\\n  top: 5px;\\n  left: 0;\\n  right: 0;\\n  bottom: 5px;\\n}\\n\\n.rdrSelected{\\n  left: 2px;\\n  right: 2px;\\n}\\n\\n.rdrInRange{}\\n\\n.rdrStartEdge{\\n  border-top-left-radius: 1.042em;\\n  border-bottom-left-radius: 1.042em;\\n  left: 2px;\\n}\\n\\n.rdrEndEdge{\\n  border-top-right-radius: 1.042em;\\n  border-bottom-right-radius: 1.042em;\\n  right: 2px;\\n}\\n\\n.rdrSelected{\\n  border-radius: 1.042em;\\n}\\n\\n.rdrDayStartOfMonth .rdrInRange, .rdrDayStartOfMonth .rdrEndEdge, .rdrDayStartOfWeek .rdrInRange, .rdrDayStartOfWeek .rdrEndEdge{\\n    border-top-left-radius: 1.042em;\\n    border-bottom-left-radius: 1.042em;\\n    left: 2px;\\n  }\\n\\n.rdrDayEndOfMonth .rdrInRange,  .rdrDayEndOfMonth .rdrStartEdge,  .rdrDayEndOfWeek .rdrInRange,  .rdrDayEndOfWeek .rdrStartEdge{\\n    border-top-right-radius: 1.042em;\\n    border-bottom-right-radius: 1.042em;\\n    right: 2px;\\n  }\\n\\n.rdrDayStartOfMonth .rdrDayInPreview, .rdrDayStartOfMonth .rdrDayEndPreview, .rdrDayStartOfWeek .rdrDayInPreview, .rdrDayStartOfWeek .rdrDayEndPreview{\\n    border-top-left-radius: 1.333em;\\n    border-bottom-left-radius: 1.333em;\\n    border-left-width: 1px;\\n    left: 0px;\\n  }\\n\\n.rdrDayEndOfMonth .rdrDayInPreview, .rdrDayEndOfMonth .rdrDayStartPreview, .rdrDayEndOfWeek .rdrDayInPreview, .rdrDayEndOfWeek .rdrDayStartPreview{\\n   border-top-right-radius: 1.333em;\\n   border-bottom-right-radius: 1.333em;\\n   border-right-width: 1px;\\n   right: 0px;\\n }\\n\\n.rdrDayStartPreview, .rdrDayInPreview, .rdrDayEndPreview{\\n  background: rgba(255, 255, 255, 0.09);\\n  position: absolute;\\n  top: 3px;\\n  left: 0px;\\n  right: 0px;\\n  bottom: 3px;\\n  pointer-events: none;\\n  border: 0px solid currentColor;\\n  z-index: 1;\\n}\\n\\n.rdrDayStartPreview{\\n  border-top-width: 1px;\\n  border-left-width: 1px;\\n  border-bottom-width: 1px;\\n  border-top-left-radius: 1.333em;\\n  border-bottom-left-radius: 1.333em;\\n  left: 0px;\\n}\\n\\n.rdrDayInPreview{\\n  border-top-width: 1px;\\n  border-bottom-width: 1px;\\n}\\n\\n.rdrDayEndPreview{\\n  border-top-width: 1px;\\n  border-right-width: 1px;\\n  border-bottom-width: 1px;\\n  border-top-right-radius: 1.333em;\\n  border-bottom-right-radius: 1.333em;\\n  right: 2px;\\n  right: 0px;\\n}\\n\\n.rdrDefinedRangesWrapper{\\n  font-size: 12px;\\n  width: 226px;\\n  border-right: solid 1px #eff2f7;\\n  background: #fff;\\n}\\n\\n.rdrDefinedRangesWrapper .rdrStaticRangeSelected{\\n    color: currentColor;\\n    font-weight: 600;\\n  }\\n\\n.rdrStaticRange{\\n  border: 0;\\n  cursor: pointer;\\n  display: block;\\n  outline: 0;\\n  border-bottom: 1px solid #eff2f7;\\n  padding: 0;\\n  background: #fff\\n}\\n\\n.rdrStaticRange:hover .rdrStaticRangeLabel,.rdrStaticRange:focus .rdrStaticRangeLabel{\\n      background: #eff2f7;\\n    }\\n\\n.rdrStaticRangeLabel{\\n  display: block;\\n  outline: 0;\\n  line-height: 18px;\\n  padding: 10px 20px;\\n  text-align: left;\\n}\\n\\n.rdrInputRanges{\\n  padding: 10px 0;\\n}\\n\\n.rdrInputRange{\\n  align-items: center;\\n  padding: 5px 20px;\\n}\\n\\n.rdrInputRangeInput{\\n  width: 30px;\\n  height: 30px;\\n  line-height: 30px;\\n  border-radius: 4px;\\n  text-align: center;\\n  border: solid 1px rgb(222, 231, 235);\\n  margin-right: 10px;\\n  color: rgb(108, 118, 122)\\n}\\n\\n.rdrInputRangeInput:focus, .rdrInputRangeInput:hover{\\n    border-color: rgb(180, 191, 196);\\n    outline: 0;\\n    color: #333;\\n  }\\n\\n.rdrCalendarWrapper:not(.rdrDateRangeWrapper) .rdrDayHovered .rdrDayNumber:after{\\n  content: '';\\n  border: 1px solid currentColor;\\n  border-radius: 1.333em;\\n  position: absolute;\\n  top: -2px;\\n  bottom: -2px;\\n  left: 0px;\\n  right: 0px;\\n  background: transparent;\\n}\\n\\n.rdrDayPassive{\\n  pointer-events: none;\\n}\\n\\n.rdrDayPassive .rdrDayNumber span{\\n    color: #d5dce0;\\n  }\\n\\n.rdrDayPassive .rdrInRange, .rdrDayPassive .rdrStartEdge, .rdrDayPassive .rdrEndEdge, .rdrDayPassive .rdrSelected, .rdrDayPassive .rdrDayStartPreview, .rdrDayPassive .rdrDayInPreview, .rdrDayPassive .rdrDayEndPreview{\\n    display: none;\\n  }\\n\\n.rdrDayDisabled {\\n  background-color: rgb(248, 248, 248);\\n}\\n\\n.rdrDayDisabled .rdrDayNumber span{\\n    color: #aeb9bf;\\n  }\\n\\n.rdrDayDisabled .rdrInRange, .rdrDayDisabled .rdrStartEdge, .rdrDayDisabled .rdrEndEdge, .rdrDayDisabled .rdrSelected, .rdrDayDisabled .rdrDayStartPreview, .rdrDayDisabled .rdrDayInPreview, .rdrDayDisabled .rdrDayEndPreview{\\n    filter: grayscale(100%) opacity(60%);\\n  }\\n\\n.rdrMonthName{\\n  text-align: left;\\n  font-weight: 600;\\n  color: #849095;\\n  padding: 0.833em;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_GET_URL_IMPORT___ from \"../node_modules/css-loader/dist/runtime/getUrl.js\";\nimport ___CSS_LOADER_URL_IMPORT_0___ from \"./fonts/relative/relative-book-pro.eot\";\nimport ___CSS_LOADER_URL_IMPORT_1___ from \"./fonts/relative/relative-book-pro.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_2___ from \"./fonts/relative/relative-book-pro.woff\";\nimport ___CSS_LOADER_URL_IMPORT_3___ from \"./fonts/relative/relative-book-pro.ttf\";\nimport ___CSS_LOADER_URL_IMPORT_4___ from \"./fonts/relative/relative-bold-pro.eot\";\nimport ___CSS_LOADER_URL_IMPORT_5___ from \"./fonts/relative/relative-bold-pro.woff2\";\nimport ___CSS_LOADER_URL_IMPORT_6___ from \"./fonts/relative/relative-bold-pro.woff\";\nimport ___CSS_LOADER_URL_IMPORT_7___ from \"./fonts/relative/relative-bold-pro.ttf\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_1___);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_2___);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_3___);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___);\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_4___, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_5___);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_6___);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_7___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: normal;\\r\\n  font-weight: 400;\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \"); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('woff2'), /* Super Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format('woff'), /* Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \") format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: bold;\\r\\n  font-weight: 500;\\r\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \"); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \") format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \") format('woff2'), /* Super Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \") format('woff'), /* Modern Browsers */\\r\\n       url(\" + ___CSS_LOADER_URL_REPLACEMENT_9___ + \") format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-size: 0.9rem;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: RelativeMono, sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n.recharts-wrapper {\\r\\n  font-size: 0.8rem;\\r\\n  font-family: Monaco, Consolas, monospace;\\r\\n}\\r\\n\\r\\n.recharts-legend-item-text {\\r\\n  display: inline-block;\\r\\n  max-width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.App {\\r\\n  color: #000;\\r\\n  background: #f6f9ff;\\r\\n  line-height: 1.15;\\r\\n  padding: 1rem;\\r\\n  padding-top: 0;\\r\\n}\\r\\n\\r\\n.App.dark {\\r\\n  background: #101124;\\r\\n  color: #FFF;\\r\\n  line-height: 1.15;\\r\\n  box-sizing: border-box;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\\r\\nh3, h2 {\\r\\n  color: #444;\\r\\n  margin: 1rem 0 1.5rem;\\r\\n}\\r\\n\\r\\n.App.dark h3, .App.dark h2 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin: 1rem 0;\\r\\n  font-weight: normal;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 1.6rem;\\r\\n  font-weight: normal\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput + label,\\r\\nlabel + input {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.chart-subtitle, .stats {\\r\\n  margin: 1.5rem 0 1rem;\\r\\n}\\r\\n\\r\\n.chart-description {\\r\\n  margin: 1rem 0 0;\\r\\n  max-width: 600px;\\r\\n}\\r\\n\\r\\n.App.dark .chart-description {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.chart-description p:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.chart-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.chart-description ul {\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.chart-description li {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.chart-grid {\\r\\n  color: #16182E;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.chart-grid-subtitle {\\r\\n  grid-column-start: 1;\\r\\n  grid-column-end: 9;\\r\\n  margin-bottom: 0;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.total-stat-value {\\r\\n  font-size: 1.5rem;\\r\\n  overflow: hidden;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.total-stat-delta {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.125rem;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.total-stat-delta.plus {\\r\\n  color: #46E3AE;\\r\\n}\\r\\n.App.light .total-stat-delta.plus {\\r\\n  color: rgb(34 199 97);\\r\\n}\\r\\n.total-stat-delta.minus {\\r\\n  color: #727171;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell {\\r\\n  background: #16182E;\\r\\n  border: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell.stats {\\r\\n  border: 1px solid #FFFFFF14;\\r\\n}\\r\\n\\r\\n.chart-cell {\\r\\n  margin: 0;\\r\\n  border-radius: 4px;\\r\\n  border: 1px solid #e6e6f7;\\r\\n  background: white;\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  grid-column-start: span 5;\\r\\n}\\r\\n\\r\\n.chart-cell.stats {\\r\\n  min-height: 60px;\\r\\n  grid-column-start: span 2;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.chart-cell.experiment {\\r\\n  border-color: #fbb;\\r\\n}\\r\\n.chart-cell.experiment:after {\\r\\n  color: #f55;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n  position: absolute;\\r\\n  content: '(experimental)';\\r\\n}\\r\\n\\r\\n.chart-cell h3 {\\r\\n  margin-top: 0;\\r\\n  letter-spacing: 0px;\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.4375rem;\\r\\n}\\r\\n\\r\\n.chart-cell .csv-link {\\r\\n  cursor: pointer;\\r\\n  font-size: 0.9rem;\\r\\n  margin-left: 0.3rem;\\r\\n  opacity: 0.5;\\r\\n  display: inline-flex;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.chart-cell:hover .csv-link {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.chart-cell .csv-link:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.chart-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.chart-controls {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.chart-control-checkbox {\\r\\n  cursor: pointer;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  line-height: 8px;\\r\\n  padding: 8px 7px;\\r\\n  color: #666;\\r\\n  font-weight: bold;\\r\\n  background: #eee;\\r\\n  border-radius: 4px;\\r\\n  transition: background-color .1s, color .1s;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.chart-control-checkbox:hover {\\r\\n  color: #000;\\r\\n}\\r\\n\\r\\n.chart-control-checkbox.active {\\r\\n  background-color: #609ade;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.App.dark .chart-control-checkbox {\\r\\n  background: #333;\\r\\n  color: #aaa;\\r\\n}\\r\\n\\r\\n.App.dark .chart-control-checkbox:hover {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.App.dark .chart-control-checkbox.active {\\r\\n  background: #609ade;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.form input[type=\\\"date\\\"],\\r\\n.form input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #aaa;\\r\\n  border-radius: 3px;\\r\\n  appearance: none !important;\\r\\n  box-sizing: border-box;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n  border: none;\\r\\n  appearance: none !important;\\r\\n  color: #000;\\r\\n  border: 1px solid #84aefb;\\r\\n  box-sizing: border-box;\\r\\n  background: #9fc1ff;\\r\\n  cursor: pointer;\\r\\n  margin-left: 10px;\\r\\n  height: 28px;\\r\\n  border-radius: 3px;\\r\\n  padding: 3px 7px;\\r\\n}\\r\\n.form button:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@keyframes loader {\\r\\n  from {\\r\\n    transform: rotate(0);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  animation: loader 1.5s infinite;\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.chart-cell .loader {\\r\\n  position: absolute;\\r\\n  margin-left: -1.5em;\\r\\n  margin-top: -1.5em;\\r\\n  font-size: 0.7rem;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n\\r\\n.warning, .warning a {\\r\\n  color: #e46b00;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin: 0 -1rem 0;\\r\\n  height: 55px;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n  border-bottom: 1px solid #A0A3C4;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav {\\r\\n  background: #101124;\\r\\n  border-bottom: 1px solid #FFFFFF29;\\r\\n}\\r\\n\\r\\n.nav-logo {\\r\\n  width: 87px;\\r\\n  vertical-align: middle;\\r\\n  margin: 0px 0.5rem 0 0;\\r\\n  display: inline-flex;\\r\\n}\\r\\n\\r\\n.nav-logo img {\\r\\n  width: 87px;\\r\\n}\\r\\n\\r\\na, a:active, a:visited {\\r\\n  color: #16182E;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  letter-spacing: 0.47px;\\r\\n  color: #A0A3C4;\\r\\n  text-decoration: none;\\r\\n  padding: 0.5rem 1rem;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  font-size: 15px;\\r\\n  line-height: 1.125rem;\\r\\n  letter-spacing: 0.47px;\\r\\n}\\r\\n\\r\\n.nav-link:active, .nav-link:visited {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.nav-link.active {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark a, .App.dark a:active, .App.dark a:visited {\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:active, .App.dark .nav-link:visited {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link.active {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.nav-right {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.modeselect {\\r\\n  width: 30px;\\r\\n  height: 26px;\\r\\n  background: #16182E 0% 0% no-repeat padding-box;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  border-radius: 4px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect {\\r\\n  background: #FFFFFF 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n.modeselect svg {\\r\\n  fill: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect svg {\\r\\n  fill: #16182E;\\r\\n}\\r\\n\\r\\n.page-title {\\r\\n  font-size: 1.8125rem;\\r\\n  line-height: 2.3125rem;\\r\\n}\\r\\n\\r\\n.recharts-cartesian-axis-tick-value {\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-axis-tick-value {\\r\\n  fill: #A0A3C4;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-grid-horizontal line, .App.dark .recharts-cartesian-grid-vertical line {\\r\\n  stroke: #282a3e;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  padding: 5px 12px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li {\\r\\n  padding: 0px!important;\\r\\n  font-size: 12px!important;\\r\\n  line-height: 15px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li + li {\\r\\n  margin-top: 1px!important;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  background-color: #353651!important;\\r\\n  box-shadow: 0px 3px 6px #0000005C;\\r\\n  border: 1px solid #484B6E!important;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.App-header-drawer {\\r\\n  background: #101124 0% 0% no-repeat padding-box;\\r\\n  box-shadow: 8px 3px 6px #00000029;\\r\\n  opacity: 1;\\r\\n  backdrop-filter: blur(27px);\\r\\n  position: fixed;\\r\\n  z-index: 11;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  height: 100vh;\\r\\n  width: 304px;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a {\\r\\n  font-size: 14px;\\r\\n  line-height: 18px;\\r\\n  font-weight: normal;\\r\\n  letter-spacing: 0.1px;\\r\\n  color: #A0A3C4;\\r\\n  padding: 15px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a:hover,\\r\\n.App-header-drawer .App-header-link-container a:focus,\\r\\n.App-header-drawer .App-header-link-container a.active {\\r\\n  background: #303FD024;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-menu-icon {\\r\\n  color: white;\\r\\n  font-size: 1.3rem;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-main {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.App-header-links-header {\\r\\n  height: 62px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  z-index: 3;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon {\\r\\n  color: black;\\r\\n  font-size: 1.3rem;\\r\\n  cursor: pointer;\\r\\n  opacity: 0.7;\\r\\n  margin: 9px 10px;\\r\\n}\\r\\n\\r\\n.App.dark .App-header-menu-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 1000px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: span 2;\\r\\n    grid-column-end: auto;\\r\\n  }\\r\\n  .chart-cell.stats {\\r\\n    grid-column-start: span 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.content {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon-block {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.App-header-backdrop {\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper > div {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.react-dropdown-select-dropdown {\\r\\n  position: absolute;\\r\\n  top: 43px;\\r\\n  right: 0px;\\r\\n  left: unset!important;\\r\\n  border: 1px solid #ccc;\\r\\n  width: 348px;\\r\\n  padding: 0;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  background: #fff;\\r\\n  border-radius: 2px;\\r\\n  box-shadow: 0 0 10px 0 rgb(0 0 0 / 20%);\\r\\n  overflow: auto;\\r\\n  z-index: 9;\\r\\n  max-height: 475px!important;\\r\\n  width: 270px!important;\\r\\n}\\r\\n\\r\\n.App.dark .react-dropdown-select-dropdown {\\r\\n  background-color: #101124!important;\\r\\n  border: 1px solid #FFFFFF14!important;\\r\\n}\\r\\n\\r\\n.react-dropdown-select {\\r\\n  border: 1px solid #e6e6f7!important;\\r\\n  box-sizing: border-box;\\r\\n  position: relative;\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  border-radius: 2px;\\r\\n  padding: 2px 5px;\\r\\n  flex-direction: row;\\r\\n  direction: ltr;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n  min-height: 36px;\\r\\n  pointer-events: all;\\r\\n  max-width: fit-content;\\r\\n  min-width: 215px!important;\\r\\n  background-color: white;\\r\\n  padding-left: 1rem!important;\\r\\n  padding-right: 1rem!important;\\r\\n}\\r\\n\\r\\n.react-dropdown-select-dropdown-handle {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.App.dark .react-dropdown-select {\\r\\n  border: 1px solid #FFFFFF14!important;\\r\\n  background-color: #16182E;\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n.date-range-items {\\r\\n  overflow: auto;\\r\\n  min-height: 10px;\\r\\n  max-height: 200px;\\r\\n}\\r\\n\\r\\n.date-range-item {\\r\\n  display: flex;\\r\\n  margin: 0.5rem;\\r\\n  padding: 0.5rem;\\r\\n  align-items: baseline;\\r\\n}\\r\\n\\r\\n.date-range-item__label {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.date-range-item.selected .date-range-item__label,\\r\\n.date-range-item:hover .date-range-item__label {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-item__label {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-item.selected .date-range-item__label,\\r\\n.App.dark .date-range-item:hover .date-range-item__label {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.date-range-custom {\\r\\n  color: #000;\\r\\n  margin: 0.5rem;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.react-dropdown-select-content {\\r\\n  display: flex;\\r\\n  flex: 1;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.chart-cell.mobile {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrDay {\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  background: transparent;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrMonth {\\r\\n  width: 240px;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrMonthAndYearPickers select {\\r\\n  padding: 10px;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrMonthAndYearPickers select {\\r\\n  color: white;\\r\\n  background: #16182E;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrNextPrevButton {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrCalendarWrapper {\\r\\n  background-color: #EEE;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrCalendarWrapper {\\r\\n  background-color: #16182E;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrWeekDay {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrWeekDay {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrDayNumber span {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrDayNumber span {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrDayToday .rdrDayNumber span:after {\\r\\n  bottom: 1px;\\r\\n}\\r\\n\\r\\n.rdrDayPassive {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.page-title-section {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: flex-end;\\r\\n}\\r\\n\\r\\n.page-title-section h1 {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.page-description {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n@media (max-width: 1033px) {\\r\\n  .App-header-link-main img {\\r\\n    height: 1.3125rem;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media all and (max-width: 600px) {\\r\\n  .page-title-section {\\r\\n    display: flex;\\r\\n    justify-content: unset;\\r\\n    align-items: unset;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n  .page-title-section .form {\\r\\n    margin-top: 1rem;\\r\\n  }\\r\\n\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: unset!important;\\r\\n    grid-column-end: unset!important;\\r\\n  }\\r\\n\\r\\n  .chart-cell.mobile {\\r\\n    display: block;\\r\\n  }\\r\\n\\r\\n  .App-header-menu-icon-block {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n\\r\\n  .nav-left {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .nav-logo {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .nav-left .nav-link {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .react-dropdown-select {\\r\\n    max-width: 100%;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 450px) {\\r\\n  .App-header-menu-icon {\\r\\n    margin: 4px 5px!important;\\r\\n  }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/App.css\"],\"names\":[],\"mappings\":\"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\",\"sourcesContent\":[\"@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: normal;\\r\\n  font-weight: 400;\\r\\n  src: url('./fonts/relative/relative-book-pro.eot'); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url('./fonts/relative/relative-book-pro.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url('./fonts/relative/relative-book-pro.woff2') format('woff2'), /* Super Modern Browsers */\\r\\n       url('./fonts/relative/relative-book-pro.woff') format('woff'), /* Modern Browsers */\\r\\n       url('./fonts/relative/relative-book-pro.ttf') format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\n@font-face {\\r\\n  font-family: 'RelativeMono';\\r\\n  font-style: bold;\\r\\n  font-weight: 500;\\r\\n  src: url('./fonts/relative/relative-bold-pro.eot'); /* IE9 Compat Modes */\\r\\n  src: local(''),\\r\\n       url('./fonts/relative/relative-bold-pro.eot?#iefix') format('embedded-opentype'), /* IE6-IE8 */\\r\\n       url('./fonts/relative/relative-bold-pro.woff2') format('woff2'), /* Super Modern Browsers */\\r\\n       url('./fonts/relative/relative-bold-pro.woff') format('woff'), /* Modern Browsers */\\r\\n       url('./fonts/relative/relative-bold-pro.ttf') format('truetype'); /* Safari, Android, iOS */\\r\\n}\\r\\n\\r\\nbody {\\r\\n  font-size: 0.9rem;\\r\\n  margin: 0;\\r\\n  padding: 0;\\r\\n  font-family: RelativeMono, sans-serif;\\r\\n  -webkit-font-smoothing: antialiased;\\r\\n}\\r\\n\\r\\n.recharts-wrapper {\\r\\n  font-size: 0.8rem;\\r\\n  font-family: Monaco, Consolas, monospace;\\r\\n}\\r\\n\\r\\n.recharts-legend-item-text {\\r\\n  display: inline-block;\\r\\n  max-width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n.App {\\r\\n  color: #000;\\r\\n  background: #f6f9ff;\\r\\n  line-height: 1.15;\\r\\n  padding: 1rem;\\r\\n  padding-top: 0;\\r\\n}\\r\\n\\r\\n.App.dark {\\r\\n  background: #101124;\\r\\n  color: #FFF;\\r\\n  line-height: 1.15;\\r\\n  box-sizing: border-box;\\r\\n  min-height: 100vh;\\r\\n}\\r\\n\\r\\nh3, h2 {\\r\\n  color: #444;\\r\\n  margin: 1rem 0 1.5rem;\\r\\n}\\r\\n\\r\\n.App.dark h3, .App.dark h2 {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\nh3 {\\r\\n  margin: 1rem 0;\\r\\n  font-weight: normal;\\r\\n  font-size: 1.2rem;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  font-size: 1.6rem;\\r\\n  font-weight: normal\\r\\n}\\r\\n\\r\\nlabel {\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\ninput + label,\\r\\nlabel + input {\\r\\n  margin-left: 0.5rem;\\r\\n}\\r\\n\\r\\n.chart-subtitle, .stats {\\r\\n  margin: 1.5rem 0 1rem;\\r\\n}\\r\\n\\r\\n.chart-description {\\r\\n  margin: 1rem 0 0;\\r\\n  max-width: 600px;\\r\\n}\\r\\n\\r\\n.App.dark .chart-description {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.chart-description p:first-child {\\r\\n  margin-top: 0;\\r\\n}\\r\\n\\r\\n.chart-description p:last-child {\\r\\n  margin-bottom: 0;\\r\\n}\\r\\n\\r\\n.chart-description ul {\\r\\n  margin: 0;\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n.chart-description li {\\r\\n  margin-top: 5px;\\r\\n}\\r\\n\\r\\n.chart-grid {\\r\\n  color: #16182E;\\r\\n  display: grid;\\r\\n  grid-template-columns: repeat(10, 1fr);\\r\\n  gap: 1rem;\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.chart-grid-subtitle {\\r\\n  grid-column-start: 1;\\r\\n  grid-column-end: 9;\\r\\n  margin-bottom: 0;\\r\\n  margin-top: 2rem;\\r\\n}\\r\\n\\r\\n.total-stat-value {\\r\\n  font-size: 1.5rem;\\r\\n  overflow: hidden;\\r\\n  white-space: pre-wrap;\\r\\n}\\r\\n\\r\\n.total-stat-delta {\\r\\n  font-size: 0.875rem;\\r\\n  line-height: 1.125rem;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.total-stat-delta.plus {\\r\\n  color: #46E3AE;\\r\\n}\\r\\n.App.light .total-stat-delta.plus {\\r\\n  color: rgb(34 199 97);\\r\\n}\\r\\n.total-stat-delta.minus {\\r\\n  color: #727171;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell {\\r\\n  background: #16182E;\\r\\n  border: none;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .chart-cell.stats {\\r\\n  border: 1px solid #FFFFFF14;\\r\\n}\\r\\n\\r\\n.chart-cell {\\r\\n  margin: 0;\\r\\n  border-radius: 4px;\\r\\n  border: 1px solid #e6e6f7;\\r\\n  background: white;\\r\\n  position: relative;\\r\\n  padding: 1rem;\\r\\n  grid-column-start: span 5;\\r\\n}\\r\\n\\r\\n.chart-cell.stats {\\r\\n  min-height: 60px;\\r\\n  grid-column-start: span 2;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.chart-cell.experiment {\\r\\n  border-color: #fbb;\\r\\n}\\r\\n.chart-cell.experiment:after {\\r\\n  color: #f55;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n  position: absolute;\\r\\n  content: '(experimental)';\\r\\n}\\r\\n\\r\\n.chart-cell h3 {\\r\\n  margin-top: 0;\\r\\n  letter-spacing: 0px;\\r\\n  font-size: 1.125rem;\\r\\n  line-height: 1.4375rem;\\r\\n}\\r\\n\\r\\n.chart-cell .csv-link {\\r\\n  cursor: pointer;\\r\\n  font-size: 0.9rem;\\r\\n  margin-left: 0.3rem;\\r\\n  opacity: 0.5;\\r\\n  display: inline-flex;\\r\\n  vertical-align: middle;\\r\\n}\\r\\n.chart-cell:hover .csv-link {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n.chart-cell .csv-link:hover {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.chart-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.chart-controls {\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.chart-control-checkbox {\\r\\n  cursor: pointer;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  line-height: 8px;\\r\\n  padding: 8px 7px;\\r\\n  color: #666;\\r\\n  font-weight: bold;\\r\\n  background: #eee;\\r\\n  border-radius: 4px;\\r\\n  transition: background-color .1s, color .1s;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.chart-control-checkbox:hover {\\r\\n  color: #000;\\r\\n}\\r\\n\\r\\n.chart-control-checkbox.active {\\r\\n  background-color: #609ade;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.App.dark .chart-control-checkbox {\\r\\n  background: #333;\\r\\n  color: #aaa;\\r\\n}\\r\\n\\r\\n.App.dark .chart-control-checkbox:hover {\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.App.dark .chart-control-checkbox.active {\\r\\n  background: #609ade;\\r\\n  color: #fff;\\r\\n}\\r\\n\\r\\n.form input[type=\\\"date\\\"],\\r\\n.form input[type=\\\"text\\\"] {\\r\\n  border: 1px solid #aaa;\\r\\n  border-radius: 3px;\\r\\n  appearance: none !important;\\r\\n  box-sizing: border-box;\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.form button {\\r\\n  border: none;\\r\\n  appearance: none !important;\\r\\n  color: #000;\\r\\n  border: 1px solid #84aefb;\\r\\n  box-sizing: border-box;\\r\\n  background: #9fc1ff;\\r\\n  cursor: pointer;\\r\\n  margin-left: 10px;\\r\\n  height: 28px;\\r\\n  border-radius: 3px;\\r\\n  padding: 3px 7px;\\r\\n}\\r\\n.form button:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@keyframes loader {\\r\\n  from {\\r\\n    transform: rotate(0);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.loader {\\r\\n  animation: loader 1.5s infinite;\\r\\n  opacity: 0.3;\\r\\n}\\r\\n.chart-cell .loader {\\r\\n  position: absolute;\\r\\n  margin-left: -1.5em;\\r\\n  margin-top: -1.5em;\\r\\n  font-size: 0.7rem;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n\\r\\n.warning, .warning a {\\r\\n  color: #e46b00;\\r\\n}\\r\\n\\r\\n.nav {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: center;\\r\\n  margin: 0 -1rem 0;\\r\\n  height: 55px;\\r\\n  padding-left: 1rem;\\r\\n  padding-right: 1rem;\\r\\n  border-bottom: 1px solid #A0A3C4;\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav {\\r\\n  background: #101124;\\r\\n  border-bottom: 1px solid #FFFFFF29;\\r\\n}\\r\\n\\r\\n.nav-logo {\\r\\n  width: 87px;\\r\\n  vertical-align: middle;\\r\\n  margin: 0px 0.5rem 0 0;\\r\\n  display: inline-flex;\\r\\n}\\r\\n\\r\\n.nav-logo img {\\r\\n  width: 87px;\\r\\n}\\r\\n\\r\\na, a:active, a:visited {\\r\\n  color: #16182E;\\r\\n}\\r\\n\\r\\n.nav-link {\\r\\n  letter-spacing: 0.47px;\\r\\n  color: #A0A3C4;\\r\\n  text-decoration: none;\\r\\n  padding: 0.5rem 1rem;\\r\\n  display: inline-block;\\r\\n  vertical-align: middle;\\r\\n  font-size: 15px;\\r\\n  line-height: 1.125rem;\\r\\n  letter-spacing: 0.47px;\\r\\n}\\r\\n\\r\\n.nav-link:active, .nav-link:visited {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.nav-link.active {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark a, .App.dark a:active, .App.dark a:visited {\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:active, .App.dark .nav-link:visited {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link.active {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App.dark .nav-link:hover {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.nav-link:hover {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.nav-right {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.modeselect {\\r\\n  width: 30px;\\r\\n  height: 26px;\\r\\n  background: #16182E 0% 0% no-repeat padding-box;\\r\\n  border: 1px solid #FFFFFF0F;\\r\\n  border-radius: 4px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect {\\r\\n  background: #FFFFFF 0% 0% no-repeat padding-box;\\r\\n}\\r\\n\\r\\n.modeselect svg {\\r\\n  fill: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .modeselect svg {\\r\\n  fill: #16182E;\\r\\n}\\r\\n\\r\\n.page-title {\\r\\n  font-size: 1.8125rem;\\r\\n  line-height: 2.3125rem;\\r\\n}\\r\\n\\r\\n.recharts-cartesian-axis-tick-value {\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-axis-tick-value {\\r\\n  fill: #A0A3C4;\\r\\n  font-size: 0.75rem;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-cartesian-grid-horizontal line, .App.dark .recharts-cartesian-grid-vertical line {\\r\\n  stroke: #282a3e;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  padding: 5px 12px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li {\\r\\n  padding: 0px!important;\\r\\n  font-size: 12px!important;\\r\\n  line-height: 15px!important;\\r\\n}\\r\\n\\r\\n.recharts-tooltip-wrapper ul.recharts-tooltip-item-list li + li {\\r\\n  margin-top: 1px!important;\\r\\n}\\r\\n\\r\\n.App.dark .recharts-tooltip-wrapper .recharts-default-tooltip {\\r\\n  background-color: #353651!important;\\r\\n  box-shadow: 0px 3px 6px #0000005C;\\r\\n  border: 1px solid #484B6E!important;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n\\r\\n.App-header-drawer {\\r\\n  background: #101124 0% 0% no-repeat padding-box;\\r\\n  box-shadow: 8px 3px 6px #00000029;\\r\\n  opacity: 1;\\r\\n  backdrop-filter: blur(27px);\\r\\n  position: fixed;\\r\\n  z-index: 11;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n  top: 0;\\r\\n  height: 100vh;\\r\\n  width: 304px;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a {\\r\\n  font-size: 14px;\\r\\n  line-height: 18px;\\r\\n  font-weight: normal;\\r\\n  letter-spacing: 0.1px;\\r\\n  color: #A0A3C4;\\r\\n  padding: 15px 16px;\\r\\n  text-decoration: none;\\r\\n  display: block;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-container a:hover,\\r\\n.App-header-drawer .App-header-link-container a:focus,\\r\\n.App-header-drawer .App-header-link-container a.active {\\r\\n  background: #303FD024;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-menu-icon {\\r\\n  color: white;\\r\\n  font-size: 1.3rem;\\r\\n}\\r\\n\\r\\n.App-header-drawer .App-header-link-main {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n}\\r\\n\\r\\n.App-header-links-header {\\r\\n  height: 62px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  z-index: 3;\\r\\n  padding-right: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon {\\r\\n  color: black;\\r\\n  font-size: 1.3rem;\\r\\n  cursor: pointer;\\r\\n  opacity: 0.7;\\r\\n  margin: 9px 10px;\\r\\n}\\r\\n\\r\\n.App.dark .App-header-menu-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon:hover {\\r\\n  opacity: 0.9;\\r\\n}\\r\\n\\r\\n@media all and (max-width: 1000px) {\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: repeat(2, 1fr);\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: span 2;\\r\\n    grid-column-end: auto;\\r\\n  }\\r\\n  .chart-cell.stats {\\r\\n    grid-column-start: span 1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.content {\\r\\n  margin-top: 1rem;\\r\\n}\\r\\n\\r\\n.App-header-menu-icon-block {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.App-header-backdrop {\\r\\n  position: fixed;\\r\\n  z-index: 10;\\r\\n  top: 0;\\r\\n  bottom: 0;\\r\\n  left: 0;\\r\\n  right: 0;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper > div {\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n}\\r\\n\\r\\n.react-dropdown-select-dropdown {\\r\\n  position: absolute;\\r\\n  top: 43px;\\r\\n  right: 0px;\\r\\n  left: unset!important;\\r\\n  border: 1px solid #ccc;\\r\\n  width: 348px;\\r\\n  padding: 0;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  background: #fff;\\r\\n  border-radius: 2px;\\r\\n  box-shadow: 0 0 10px 0 rgb(0 0 0 / 20%);\\r\\n  overflow: auto;\\r\\n  z-index: 9;\\r\\n  max-height: 475px!important;\\r\\n  width: 270px!important;\\r\\n}\\r\\n\\r\\n.App.dark .react-dropdown-select-dropdown {\\r\\n  background-color: #101124!important;\\r\\n  border: 1px solid #FFFFFF14!important;\\r\\n}\\r\\n\\r\\n.react-dropdown-select {\\r\\n  border: 1px solid #e6e6f7!important;\\r\\n  box-sizing: border-box;\\r\\n  position: relative;\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  border-radius: 2px;\\r\\n  padding: 2px 5px;\\r\\n  flex-direction: row;\\r\\n  direction: ltr;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n  min-height: 36px;\\r\\n  pointer-events: all;\\r\\n  max-width: fit-content;\\r\\n  min-width: 215px!important;\\r\\n  background-color: white;\\r\\n  padding-left: 1rem!important;\\r\\n  padding-right: 1rem!important;\\r\\n}\\r\\n\\r\\n.react-dropdown-select-dropdown-handle {\\r\\n  position: absolute;\\r\\n  width: 100%;\\r\\n  height: 100%;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  opacity: 0;\\r\\n}\\r\\n\\r\\n.App.dark .react-dropdown-select {\\r\\n  border: 1px solid #FFFFFF14!important;\\r\\n  background-color: #16182E;\\r\\n  width: 200px;\\r\\n}\\r\\n\\r\\n.date-range-items {\\r\\n  overflow: auto;\\r\\n  min-height: 10px;\\r\\n  max-height: 200px;\\r\\n}\\r\\n\\r\\n.date-range-item {\\r\\n  display: flex;\\r\\n  margin: 0.5rem;\\r\\n  padding: 0.5rem;\\r\\n  align-items: baseline;\\r\\n}\\r\\n\\r\\n.date-range-item__label {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.date-range-item.selected .date-range-item__label,\\r\\n.date-range-item:hover .date-range-item__label {\\r\\n  color: #444;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-item__label {\\r\\n  color: #A0A3C4;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-item.selected .date-range-item__label,\\r\\n.App.dark .date-range-item:hover .date-range-item__label {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.date-range-custom {\\r\\n  color: #000;\\r\\n  margin: 0.5rem;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.react-dropdown-select-content {\\r\\n  display: flex;\\r\\n  flex: 1;\\r\\n  flex-wrap: wrap;\\r\\n}\\r\\n\\r\\n.chart-cell.mobile {\\r\\n  display: none;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrDay {\\r\\n  padding: 0;\\r\\n  margin: 0;\\r\\n  background: transparent;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrMonth {\\r\\n  width: 240px;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrMonthAndYearPickers select {\\r\\n  padding: 10px;\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrMonthAndYearPickers select {\\r\\n  color: white;\\r\\n  background: #16182E;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrNextPrevButton {\\r\\n  padding: 0;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrCalendarWrapper {\\r\\n  background-color: #EEE;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrCalendarWrapper {\\r\\n  background-color: #16182E;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrWeekDay {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrWeekDay {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrDayNumber span {\\r\\n  color: black;\\r\\n}\\r\\n\\r\\n.App.dark .date-range-selector-wrapper .rdrDayNumber span {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.date-range-selector-wrapper .rdrDayToday .rdrDayNumber span:after {\\r\\n  bottom: 1px;\\r\\n}\\r\\n\\r\\n.rdrDayPassive {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.page-title-section {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  align-items: flex-end;\\r\\n}\\r\\n\\r\\n.page-title-section h1 {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n.page-description {\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n@media (max-width: 1033px) {\\r\\n  .App-header-link-main img {\\r\\n    height: 1.3125rem;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media all and (max-width: 600px) {\\r\\n  .page-title-section {\\r\\n    display: flex;\\r\\n    justify-content: unset;\\r\\n    align-items: unset;\\r\\n    flex-direction: column;\\r\\n  }\\r\\n\\r\\n  .page-title-section .form {\\r\\n    margin-top: 1rem;\\r\\n  }\\r\\n\\r\\n  .chart-grid {\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .chart-cell {\\r\\n    grid-column-start: unset!important;\\r\\n    grid-column-end: unset!important;\\r\\n  }\\r\\n\\r\\n  .chart-cell.mobile {\\r\\n    display: block;\\r\\n  }\\r\\n\\r\\n  .App-header-menu-icon-block {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n\\r\\n  .nav-left {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n  }\\r\\n\\r\\n  .nav-logo {\\r\\n    display: flex;\\r\\n  }\\r\\n\\r\\n  .nav-left .nav-link {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .react-dropdown-select {\\r\\n    max-width: 100%;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 450px) {\\r\\n  .App-header-menu-icon {\\r\\n    margin: 4px 5px!important;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","module.exports = require(\"cors\");","import { useCallback } from 'react'\r\nimport { RiDownload2Fill } from 'react-icons/ri'\r\nimport strftime from 'strftime'\r\n\r\nfunction formatTimestamp(timestamp) {\r\n  return strftime('%Y-%m-%d', new Date(timestamp * 1000))\r\n}\r\n\r\nfunction getCsvUrl(data, fields) {\r\n  const csvHeader = 'Date,' + fields.map(field => field.name || field.key).join(',')\r\n  const csvBody = data.map(item => {\r\n    return formatTimestamp(item.timestamp) + ',' + fields.map(field => item[field.key]).join(',')\r\n  }).join('\\n')\r\n  const csv = csvHeader + '\\n' + csvBody\r\n  return `data:application/octet-stream,${encodeURIComponent(csv)}`\r\n}\r\n\r\nexport default function CsvLink({ data, fields, name = 'GMX stats' }) {\r\n  const onClick = useCallback((evt) => {\r\n    evt.preventDefault()\r\n\r\n    const csvUrl = getCsvUrl(data, fields)\r\n    const start = formatTimestamp(data[0].timestamp)\r\n    const end = formatTimestamp(data[data.length - 1].timestamp)\r\n    const fileName = `${name}_${start}_${end}.csv`\r\n\r\n    const aElement = document.createElement('a')\r\n    aElement.href = csvUrl\r\n    aElement.download = fileName\r\n    document.body.appendChild(aElement)\r\n    aElement.click()\r\n    document.body.removeChild(aElement)\r\n  }, [data, fields, name])\r\n\r\n  if (!data || data.length === 0 || !fields) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <a title=\"Download CSV\" className=\"csv-link\" onClick={onClick}>\r\n      <RiDownload2Fill size=\"1em\" />\r\n    </a>\r\n  )\r\n}","import { RiLoader5Fill } from 'react-icons/ri'\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport CsvLink from './CsvLink'\r\n\r\nChartWrapper.propTypes = {\r\n  title: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n  data: PropTypes.arrayOf(PropTypes.any),\r\n  csvFields: PropTypes.arrayOf(PropTypes.objectOf({key: PropTypes.string, name: PropTypes.string})),\r\n  controls: PropTypes.objectOf({\r\n    convertToPercents: PropTypes.func\r\n  }),\r\n  viewState: PropTypes.objectOf({\r\n    isPercentsView: PropTypes.bool,\r\n  }),\r\n  togglePercentView: PropTypes.func,\r\n}\r\n\r\nexport default function ChartWrapper(props) {\r\n  const {\r\n    title,\r\n    loading,\r\n    csvFields,\r\n    data,\r\n    controls,\r\n    viewState = {},\r\n    togglePercentView\r\n  } = props\r\n\r\n  return (\r\n   <>\r\n    <div className='chart-header'>\r\n      <h3>\r\n        {title}\r\n        <CsvLink\r\n          fields={csvFields}\r\n          name={title}\r\n          data={data}\r\n        />\r\n      </h3>\r\n      {controls && (\r\n        <div className='chart-controls'>\r\n          {controls.convertToPercents && \r\n            <div \r\n                className={cx({'chart-control-checkbox': true, active: viewState.isPercentsView})}\r\n                onClick={togglePercentView}\r\n            >\r\n                %\r\n            </div>\r\n          }\r\n        </div>\r\n      )}\r\n      </div>\r\n      {loading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n      {props.children}\r\n    </>\r\n  )\r\n}","import { useMemo, useState } from \"react\"\r\nimport { tooltipFormatter, tooltipFormatterPercent, yaxisFormatter, yaxisFormatterPercent } from \"../helpers\";\r\n\r\nexport function useChartViewState({\r\n    controls,\r\n    data,\r\n}) {\r\n    const [viewState, setViewState] = useState({\r\n        isPercentsView: false,\r\n    });\r\n\r\n    const formattedData = useMemo(() => {\r\n        if (!data) {\r\n            return undefined;\r\n        }\r\n\r\n        if (viewState.isPercentsView && controls.convertToPercents) {\r\n            return controls.convertToPercents(data)\r\n        }\r\n      \r\n        return data;\r\n\r\n    }, [\r\n        data,\r\n        viewState.isPercentsView,\r\n        controls.converToPercents\r\n     ]);\r\n\r\n     const togglePercentView = () => {\r\n        setViewState(old => ({...old, isPercentsView: !old.isPercentsView}))\r\n     };\r\n\r\n     return {\r\n        viewState,\r\n        togglePercentView,\r\n        formattedData,\r\n\r\n        itemsUnit: viewState.isPercentsView \r\n            ? '%' \r\n            : undefined,\r\n\r\n        yaxisTickFormatter: viewState.isPercentsView \r\n            ? yaxisFormatterPercent \r\n            : yaxisFormatter,\r\n\r\n        tooltipFormatter: viewState.isPercentsView\r\n            ? tooltipFormatterPercent\r\n            : tooltipFormatter\r\n     }\r\n}\r\n","import {\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Line\r\n} from 'recharts';\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nimport {\r\n  COLORS, \r\n  convertToPercents,\r\n  tooltipFormatter,\r\n  tooltipLabelFormatter,\r\n  yaxisFormatter,\r\n} from '../helpers'\r\nimport { useChartViewState } from '../hooks/useChartViewState';\r\n\r\nconst convertToPercentsHandler = (data) =>\r\n  convertToPercents(data, {ignoreKeys: ['cumulative', 'movingAverageAll'], totalKey: 'all'})\r\n\r\nexport default function VolumeChart(props) {\r\n  const {\r\n    data,\r\n    loading,\r\n    chartHeight,\r\n    yaxisWidth,\r\n  } = props\r\n\r\n  const csvFields = [\r\n    {key: 'swap', name: 'Swap'},\r\n    {key: 'margin', name: 'Margin trading'},\r\n    {key: 'mint', name: 'Mint GLP'},\r\n    {key: 'burn', name: 'Burn GLP'},\r\n    {key: 'liquidation', name: 'Liquidation'},\r\n    {key: 'cumulative', name: 'Cumulative'}\r\n  ];\r\n\r\n  const controls = {\r\n    convertToPercents: convertToPercentsHandler,\r\n  }\r\n\r\n  const {\r\n    viewState,\r\n    togglePercentView,\r\n    formattedData,\r\n    ...viewSettings\r\n  } = useChartViewState({controls, data});\r\n\r\n  return (\r\n    <ChartWrapper \r\n      title=\"Volume\"\r\n      loading={loading}\r\n      csvFields={csvFields}\r\n      data={formattedData}\r\n      controls={controls}\r\n      viewState={viewState}\r\n      togglePercentView={togglePercentView}\r\n    >\r\n      <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n        <ComposedChart data={formattedData} syncId=\"syncA\">\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n          <YAxis \r\n            dataKey=\"all\"\r\n            interval=\"preserveStartEnd\"\r\n            tickCount={viewState.isPercentsView ? undefined : 7} \r\n            tickFormatter={viewSettings.yaxisTickFormatter}\r\n            width={yaxisWidth} \r\n          />\r\n\r\n          <YAxis dataKey=\"cumulative\" orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisFormatter} width={yaxisWidth} />\r\n\r\n          <Tooltip\r\n            formatter={tooltipFormatter}\r\n            labelFormatter={tooltipLabelFormatter}\r\n            contentStyle={{ textAlign: 'left' }}\r\n          />\r\n\r\n          <Legend />\r\n\r\n          <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"swap\" stackId=\"a\" name=\"Swap\" fill={COLORS[0]} />\r\n          <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"mint\" stackId=\"a\" name=\"Mint GLP\" fill={COLORS[1]} />\r\n          <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"burn\" stackId=\"a\" name=\"Burn GLP\" fill={COLORS[2]} />\r\n          <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" fill={COLORS[3]} />\r\n          <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" fill={COLORS[4]} />\r\n          <Line isAnimationActive={false} type=\"monotone\" dot={false} strokeWidth={3} stroke={COLORS[12]} dataKey=\"cumulative\" yAxisId=\"right\" name=\"Cumulative\" />\r\n\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n    </ChartWrapper>\r\n  )\r\n}","import {\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ComposedChart,\r\n  Line,\r\n  ResponsiveContainer\r\n} from 'recharts';\r\n\r\nimport ChartWrapper from './ChartWrapper'\r\n\r\nimport {\r\n  COLORS, \r\n  convertToPercents,\r\n  tooltipFormatter,\r\n  tooltipLabelFormatter,\r\n  yaxisFormatter,\r\n} from '../helpers'\r\nimport { useChartViewState } from '../hooks/useChartViewState';\r\n\r\nconst convertToPercentsHandler = (data) =>\r\n  convertToPercents(data, {ignoreKeys: ['cumulative', 'movingAverageAll'], totalKey: 'all'})\r\n\r\nexport default function FeesChart(props) {\r\n  const {\r\n    data,\r\n    loading,\r\n    chartHeight,\r\n    yaxisWidth,\r\n  } = props\r\n\r\n  const csvFields = [\r\n    {key: 'swap', name: 'Swap'},\r\n    {key: 'margin', name: 'Margin trading'},\r\n    {key: 'mint', name: 'Mint GLP'},\r\n    {key: 'burn', name: 'Burn GLP'},\r\n    {key: 'liquidation', name: 'Liquidation'},\r\n    {key: 'cumulative', name: 'Cumulative'}\r\n  ]\r\n\r\n  const controls = {\r\n    convertToPercents: convertToPercentsHandler,\r\n  }\r\n\r\n  const {\r\n    viewState,\r\n    togglePercentView,\r\n    formattedData,\r\n    ...viewSettings\r\n  } = useChartViewState({controls, data});\r\n\r\n  return (\r\n      <ChartWrapper \r\n        title=\"Fees\"\r\n        loading={loading}\r\n        csvFields={csvFields}\r\n        data={formattedData}\r\n        controls={controls}\r\n        viewState={viewState}\r\n        togglePercentView={togglePercentView}\r\n      >\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <ComposedChart data={formattedData} syncId=\"syncA\">\r\n            <CartesianGrid strokeDasharray=\"10 10\" />\r\n            <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n\r\n            <YAxis \r\n              dataKey=\"all\"\r\n              interval=\"preserveStartEnd\"\r\n              tickCount={viewState.isPercentsView ? undefined : 7} \r\n              tickFormatter={viewSettings.yaxisTickFormatter}\r\n              width={yaxisWidth} \r\n            />\r\n\r\n            <YAxis dataKey=\"cumulative\" orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisFormatter} width={yaxisWidth} />\r\n\r\n            <Tooltip\r\n              formatter={tooltipFormatter}\r\n              labelFormatter={tooltipLabelFormatter}\r\n              contentStyle={{ textAlign: 'left' }}\r\n            />\r\n\r\n            <Legend />\r\n            <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"swap\" stackId=\"a\" name=\"Swap\" fill={COLORS[0]} />\r\n            <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"mint\" stackId=\"a\" name=\"Mint GLP\" fill={COLORS[1]} />\r\n            <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"burn\" stackId=\"a\" name=\"Burn GLP\" fill={COLORS[2]} />\r\n            <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" fill={COLORS[3]} />\r\n            <Bar unit={viewSettings.itemsUnit} isAnimationActive={false} type=\"monotone\" dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" fill={COLORS[4]} />\r\n            <Line isAnimationActive={false} type=\"monotone\" strokeWidth={3} dot={false} stroke={COLORS[12]} dataKey=\"cumulative\" yAxisId=\"right\" name=\"Cumulative\" />\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n        <div className=\"chart-description\">\r\n          Collected fees. USD value is calculated with token price at the moment of swap, trade, minting or redeeming GLP\r\n        </div>\r\n      </ChartWrapper>\r\n  )\r\n}","import React, {useMemo} from 'react';\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n} from 'recharts';\r\n\r\nimport {\r\n  tooltipLabelFormatter as tooltipLabelFormatter_,\r\n  tooltipFormatter as tooltipFormatter_,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS,\r\n} from '../helpers'\r\nimport { useChartViewState } from '../hooks/useChartViewState';\r\n\r\nimport ChartWrapper from './ChartWrapper';\r\n\r\nexport default function GenericChart(props) {\r\n  const {\r\n    loading,\r\n    title,\r\n    data,\r\n    description,\r\n    height = CHART_HEIGHT,\r\n    yaxisWidth = YAXIS_WIDTH,\r\n    yaxisDataKey = 'all',\r\n    yaxisScale,\r\n    truncateYThreshold,\r\n    yaxisTickFormatter,\r\n    yaxisDomain = [0, 'auto'],\r\n    xaxisDataKey = 'timestamp',\r\n    xaxisTickFormatter = tooltipLabelFormatter_,\r\n    tooltipFormatter = tooltipFormatter_,\r\n    tooltipLabelFormatter = tooltipLabelFormatter_,\r\n    items,\r\n    type = 'Bar',\r\n    syncId,\r\n    children,\r\n    rightYaxisDataKey,\r\n    controls = {},\r\n  } = props\r\n\r\n  const {\r\n    viewState,\r\n    togglePercentView,\r\n    formattedData,\r\n    yaxisTickFormatter: defaultYaxisTickFormatter,\r\n    itemsUnit: defaultItemUnit,\r\n  } = useChartViewState({controls, data});\r\n\r\n  let ChartComponent\r\n\r\n  if (type === 'Line') {\r\n    ChartComponent = LineChart\r\n  } else if (type === 'Bar') {\r\n    ChartComponent = BarChart\r\n  } else if (type === 'Area') {\r\n    ChartComponent = AreaChart\r\n  } else {\r\n    ChartComponent = ComposedChart\r\n  }\r\n\r\n  const truncatedYDomain = useMemo(() => {\r\n    if ((typeof truncateYThreshold !== 'number') || !data) {\r\n      return null;\r\n    }\r\n\r\n    if (Math.max(...data.map(item => item[yaxisDataKey])) > truncateYThreshold) {\r\n      // Bug in recharts: dataMax number values applies via function syntax only\r\n      // eslint-disable-next-line no-unused-vars\r\n      return [yaxisDomain[0], _ => truncateYThreshold]\r\n    }\r\n\r\n    return null\r\n  }, [data, truncateYThreshold, yaxisDomain?.join('-')]);\r\n\r\n  const htmlItems = (items || []).map((item, i) => {\r\n    const props = {\r\n      type: \"monotone\",\r\n      dataKey: item.key,\r\n      stackId: \"a\",\r\n      name: item.name || item.key,\r\n      fill: item.color || COLORS[i % COLORS.length],\r\n      stroke: item.color || COLORS[i % COLORS.length],\r\n      dot: item.dot || false,\r\n      key: 'item-' + i,\r\n      unit: item.unit || defaultItemUnit,\r\n      strokeWidth: item.strokeWidth,\r\n      yAxisId: item.yAxisId\r\n    }\r\n\r\n    if (item.type === 'Line' || type === 'Line') {\r\n      return <Line {...props} isAnimationActive={false} />\r\n    }\r\n\r\n    if (type === 'Area') {\r\n      return <Area {...props} isAnimationActive={false} />\r\n    }\r\n\r\n    return <Bar {...props} isAnimationActive={false} />\r\n  })\r\n\r\n  const csvFields = items.map(item => ({ key: item.key, name: item.name }))\r\n\r\n  return (\r\n    <ChartWrapper \r\n      title={title}\r\n      loading={loading}\r\n      data={formattedData}\r\n      csvFields={csvFields}\r\n      viewState={viewState}\r\n      controls={controls}\r\n      togglePercentView={togglePercentView}\r\n    >\r\n        <ResponsiveContainer width=\"100%\" height={height}>\r\n          {React.createElement(ChartComponent, { data: formattedData, syncId }, [\r\n            <CartesianGrid strokeDasharray=\"10 10\" key=\"a\" />,\r\n            <XAxis dataKey={xaxisDataKey} tickFormatter={xaxisTickFormatter} minTickGap={30} key=\"b\" />,\r\n            <YAxis \r\n              scale={yaxisScale}\r\n              domain={truncatedYDomain || yaxisDomain}\r\n              dataKey={yaxisDataKey}\r\n              tickFormatter={yaxisTickFormatter || defaultYaxisTickFormatter}\r\n              key=\"c\"\r\n            />,\r\n            (\r\n              rightYaxisDataKey ?\r\n                <YAxis dataKey={rightYaxisDataKey} tickFormatter={yaxisTickFormatter} orientation=\"right\" yAxisId=\"right\" key=\"c2\" />\r\n                : null\r\n            ),\r\n            <Tooltip\r\n              formatter={tooltipFormatter}\r\n              labelFormatter={tooltipLabelFormatter}\r\n              contentStyle={{ textAlign: 'left' }}\r\n              key=\"d\"\r\n            />,\r\n            <Legend key=\"e\" />,\r\n            ...htmlItems,\r\n            children\r\n          ])}\r\n        </ResponsiveContainer>\r\n      {description && (\r\n        <div className=\"chart-description\">\r\n          {description}\r\n        </div>\r\n      )}\r\n    </ChartWrapper>\r\n  )\r\n}\r\n","import { useState, useEffect, useRef } from 'react'\r\nimport Select from 'react-dropdown-select'\r\nimport moment from 'moment'\r\nimport { DateRange } from 'react-date-range';\r\nimport 'react-date-range/dist/styles.css'; // main css file\r\nimport 'react-date-range/dist/theme/default.css'; // theme css file\r\n\r\nconst ALL_TIME_ID = 4;\r\n\r\nexport default function DateRangeSelect({ options, startDate, endDate, onChange }) {\r\n  const [selectedDateRangeOption, setSelectedDateRangeOption] = useState()\r\n  const [rangeState, setRangeState] = useState([\r\n    {\r\n      startDate: null,\r\n      endDate: null,\r\n      key: 'selection'\r\n    }\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    setRangeState([\r\n      {\r\n        startDate: startDate,\r\n        endDate: endDate,\r\n        key: 'selection'\r\n      }\r\n    ])\r\n  }, [startDate, endDate])\r\n\r\n  const onSelectItem = (option) => {\r\n    if (option.id == ALL_TIME_ID) {\r\n      onChange([null, null])\r\n    }\r\n    const end = new Date()\r\n    const start = moment().subtract(option.id, 'month').toDate()\r\n    setSelectedDateRangeOption(option.id)\r\n    if (option.id == ALL_TIME_ID) {\r\n      onChange([null, null])\r\n    } else {\r\n      onChange([start, end])\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    let selected = false\r\n    for (const option of options) {\r\n      if (option.isDefault) {\r\n        selected = true\r\n        onSelectItem(option)\r\n        break\r\n      }\r\n    }\r\n    if (!selected) {\r\n      onSelectItem(options[0])\r\n    }\r\n  }, [])\r\n\r\n  const onDateRangeChange = (item) => {\r\n    setRangeState([item.selection])\r\n    if (item.selection.startDate == item.selection.endDate) {\r\n      return\r\n    }\r\n    onChange([item.selection.startDate, item.selection.endDate])\r\n  }\r\n\r\n  const customContentRenderer = ({ props, state }) => {\r\n    const start = startDate && startDate.toISOString().slice(0, 10)\r\n    const end = endDate && endDate.toISOString().slice(0, 10)\r\n    return (<div style={{ cursor: 'pointer' }}>\r\n      { startDate && endDate && `${start} ~ ${end}`}\r\n      { (!startDate || !endDate) && 'All time' }\r\n    </div>)\r\n  };\r\n\r\n  const customDropdownRenderer = ({ props, state, methods }) => {\r\n    const regexp = new RegExp(state.search, 'i');\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"date-range-items\">\r\n          {props.options\r\n            .filter((item) => regexp.test(item[props.searchBy] || item[props.labelField]))\r\n            .map((option, index) => {\r\n              if (!props.keepSelectedInList && methods.isSelected(option)) {\r\n                return null;\r\n              }\r\n\r\n              return (\r\n                <div\r\n                  disabled={option.disabled}\r\n                  key={index}\r\n                  onClick={option.disabled ? null : () => onSelectItem(option)}\r\n                  className={option.id === selectedDateRangeOption ? 'date-range-item selected' : 'date-range-item'}\r\n                >\r\n                  <div className=\"date-range-item__label\">{option[props.labelField]}</div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n        <div className=\"date-range-custom\" color={props.color}>\r\n          <DateRange\r\n            editableDateInputs={true}\r\n            onChange={onDateRangeChange}\r\n            moveRangeOnFirstSelection={false}\r\n            ranges={rangeState}\r\n            showDateDisplay={false}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"date-range-selector-wrapper\">\r\n      <Select\r\n        placeholder=\"Select\"\r\n        multi\r\n        contentRenderer={customContentRenderer}\r\n        dropdownRenderer={customDropdownRenderer}\r\n        labelField=\"label\"\r\n        options={options}\r\n        closeOnSelect={true}\r\n        closeOnScroll={true}\r\n        values={[selectedDateRangeOption]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { useMemo, useState, useEffect } from 'react'\r\nimport { ApolloClient, InMemoryCache, gql, HttpLink } from '@apollo/client'\r\nimport { chain, sumBy, sortBy, maxBy, minBy } from 'lodash'\r\nimport fetch from 'cross-fetch';\r\nimport * as ethers from 'ethers'\r\n\r\nimport { fillPeriods } from './helpers'\r\nimport { addresses, getAddress, ARBITRUM, AVALANCHE } from './addresses'\r\n\r\nconst BigNumber = ethers.BigNumber\r\nconst formatUnits = ethers.utils.formatUnits\r\nconst { JsonRpcProvider } = ethers.providers\r\n\r\nimport RewardReader from '../abis/RewardReader.json'\r\nimport GlpManager from '../abis/GlpManager.json'\r\nimport Token from '../abis/v1/Token.json'\r\n\r\nconst providers = {\r\n  arbitrum: new JsonRpcProvider('https://arb1.arbitrum.io/rpc'),\r\n  avalanche: new JsonRpcProvider('https://api.avax.network/ext/bc/C/rpc')\r\n}\r\n\r\nfunction getProvider(chainName) {\r\n  if (!(chainName in providers)) {\r\n    throw new Error(`Unknown chain ${chainName}`)\r\n  }\r\n  return providers[chainName]\r\n}\r\n\r\nfunction getChainId(chainName) {\r\n  const chainId = {\r\n    arbitrum: ARBITRUM,\r\n    avalanche: AVALANCHE\r\n  }[chainName]\r\n  if (!chainId) {\r\n    throw new Error(`Unknown chain ${chainName}`)\r\n  }\r\n  return chainId\r\n}\r\n\r\nconst NOW_TS = parseInt(Date.now() / 1000)\r\nconst FIRST_DATE_TS = parseInt(+(new Date(2021, 7, 31)) / 1000)\r\n\r\nfunction fillNa(arr) {\r\n  const prevValues = {}\r\n  let keys\r\n  if (arr.length > 0) {\r\n    keys = Object.keys(arr[0])\r\n    delete keys.timestamp\r\n    delete keys.id\r\n  }\r\n\r\n  for (const el of arr) {\r\n    for (const key of keys) {\r\n      if (!el[key]) {\r\n        if (prevValues[key]) {\r\n          el[key] = prevValues[key]\r\n        }\r\n      } else {\r\n        prevValues[key] = el[key]\r\n      }\r\n    }\r\n  }\r\n  return arr\r\n}\r\n\r\nexport async function queryEarnData(chainName, account) {\r\n  const provider = getProvider(chainName)\r\n  const chainId = getChainId(chainName)\r\n  const rewardReader = new ethers.Contract(getAddress(chainId, 'RewardReader'), RewardReader.abi, provider)\r\n  const glpContract = new ethers.Contract(getAddress(chainId, 'GLP'), Token.abi, provider)\r\n  const glpManager = new ethers.Contract(getAddress(chainId, 'GlpManager'), GlpManager.abi, provider)\r\n\r\n  let depositTokens\r\n  let rewardTrackersForDepositBalances\r\n  let rewardTrackersForStakingInfo\r\n\r\n  if (chainId === ARBITRUM) {\r\n    depositTokens = ['0xfc5A1A6EB076a2C7aD06eD22C90d7E710E35ad0a', '0xf42Ae1D54fd613C9bb14810b0588FaAa09a426cA', '0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x4d268a7d4C16ceB5a606c173Bd974984343fea13', '0x35247165119B69A40edD5304969560D0ef486921', '0x4277f8F2c384827B5273592FF7CeBd9f2C1ac258']\r\n    rewardTrackersForDepositBalances = ['0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x4d268a7d4C16ceB5a606c173Bd974984343fea13', '0xd2D1162512F927a7e282Ef43a362659E4F2a728F', '0xd2D1162512F927a7e282Ef43a362659E4F2a728F', '0x4e971a87900b931fF39d1Aad67697F49835400b6']\r\n    rewardTrackersForStakingInfo = ['0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x4d268a7d4C16ceB5a606c173Bd974984343fea13', '0xd2D1162512F927a7e282Ef43a362659E4F2a728F', '0x1aDDD80E6039594eE970E5872D247bf0414C8903', '0x4e971a87900b931fF39d1Aad67697F49835400b6']\r\n  } else {\r\n    depositTokens = ['0x62edc0692BD897D2295872a9FFCac5425011c661', '0xFf1489227BbAAC61a9209A08929E4c2a526DdD17', '0x2bD10f8E93B3669b6d42E74eEedC65dd1B0a1342', '0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x8087a341D32D445d9aC8aCc9c14F5781E04A26d2', '0x01234181085565ed162a948b6a5e88758CD7c7b8']\r\n    rewardTrackersForDepositBalances = ['0x2bD10f8E93B3669b6d42E74eEedC65dd1B0a1342', '0x2bD10f8E93B3669b6d42E74eEedC65dd1B0a1342', '0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x4d268a7d4C16ceB5a606c173Bd974984343fea13', '0x4d268a7d4C16ceB5a606c173Bd974984343fea13', '0xd2D1162512F927a7e282Ef43a362659E4F2a728F']\r\n    rewardTrackersForStakingInfo = ['0x2bD10f8E93B3669b6d42E74eEedC65dd1B0a1342', '0x908C4D94D34924765f1eDc22A1DD098397c59dD4', '0x4d268a7d4C16ceB5a606c173Bd974984343fea13', '0x9e295B5B976a184B14aD8cd72413aD846C299660', '0xd2D1162512F927a7e282Ef43a362659E4F2a728F']\r\n  }\r\n\r\n  const [\r\n    balances,\r\n    stakingInfo,\r\n    glpTotalSupply,\r\n    glpAum,\r\n    gmxPrice\r\n  ] = await Promise.all([\r\n    rewardReader.getDepositBalances(account, depositTokens, rewardTrackersForDepositBalances),\r\n    rewardReader.getStakingInfo(account, rewardTrackersForStakingInfo).then(info => {\r\n      return rewardTrackersForStakingInfo.map((_, i) => {\r\n        return info.slice(i * 5, (i + 1) * 5)\r\n      })\r\n    }),\r\n    glpContract.totalSupply(),\r\n    glpManager.getAumInUsdg(true),\r\n    fetch('https://api.coingecko.com/api/v3/simple/price?ids=gmx&vs_currencies=usd').then(async res => {\r\n      const j = await res.json()\r\n      return j['gmx']['usd']\r\n    })\r\n  ])\r\n\r\n  const glpPrice = (glpAum / 1e18) / (glpTotalSupply / 1e18)\r\n  const now = new Date()\r\n\r\n  return {\r\n    GLP: {\r\n      stakedGLP: balances[5] / 1e18,\r\n      pendingETH: stakingInfo[4][0] / 1e18,\r\n      pendingEsGMX: stakingInfo[3][0] / 1e18,\r\n      glpPrice\r\n    },\r\n    GMX: {\r\n      stakedGMX: balances[0] / 1e18,\r\n      stakedEsGMX: balances[1] / 1e18,\r\n      pendingETH: stakingInfo[2][0] / 1e18,\r\n      pendingEsGMX: stakingInfo[0][0] / 1e18,\r\n      gmxPrice\r\n    },\r\n    timestamp: parseInt(now / 1000),\r\n    datetime: now.toISOString()\r\n  }\r\n}\r\n\r\nexport const tokenDecimals = {\r\n  \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\": 18, // WETH\r\n  \"0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f\": 8, // BTC\r\n  \"0xff970a61a04b1ca14834a43f5de4533ebddb5cc8\": 6, // USDC\r\n  \"0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0\": 18, // UNI\r\n  \"0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9\": 6, // USDT\r\n  \"0xf97f4df75117a78c1a5a0dbb814af92458539fb4\": 18, // LINK\r\n  \"0xfea7a6a0b346362bf88a9e4a88416b77a57d6c2a\": 18, // MIM\r\n  \"0x17fc002b466eec40dae837fc4be5c67993ddbd6f\": 18, // FRAX\r\n  \"0xda10009cbd5d07dd0cecc66161fc93d7c9000da1\": 18, // DAI\r\n}\r\n\r\nexport const tokenSymbols = {\r\n  // Arbitrum\r\n  '0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f': 'BTC',\r\n  '0x82af49447d8a07e3bd95bd0d56f35241523fbab1': 'ETH',\r\n  '0xf97f4df75117a78c1a5a0dbb814af92458539fb4': 'LINK',\r\n  '0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0': 'UNI',\r\n  '0xff970a61a04b1ca14834a43f5de4533ebddb5cc8': 'USDC',\r\n  '0xfd086bc7cd5c481dcc9c85ebe478a1c0b69fcbb9': 'USDT',\r\n  '0xfea7a6a0b346362bf88a9e4a88416b77a57d6c2a': 'MIM',\r\n  '0x17fc002b466eec40dae837fc4be5c67993ddbd6f': 'FRAX',\r\n  '0xda10009cbd5d07dd0cecc66161fc93d7c9000da1': 'DAI',\r\n\r\n  // Avalanche\r\n  '0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7': 'AVAX',\r\n  '0x49d5c2bdffac6ce2bfdb6640f4f80f226bc10bab': 'WETH.e',\r\n  '0x50b7545627a5162f82a992c33b87adc75187b218': 'WBTC.e',\r\n  '0x130966628846bfd36ff31a822705796e8cb8c18d': 'MIM',\r\n  '0xa7d7079b0fead91f3e65f86e8915cb59c1a4c664': 'USDC.e',\r\n  '0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e': 'USDC'\r\n}\r\n\r\nfunction getTokenDecimals(token) {\r\n  return tokenDecimals[token] || 18\r\n}\r\n\r\nconst knownSwapSources = {\r\n  arbitrum: {\r\n    '0xabbc5f99639c9b6bcb58544ddf04efa6802f4064': 'GMX Router', // Router\r\n    '0x09f77e8a13de9a35a7231028187e9fd5db8a2acb': 'GMX OrderBook', // Orderbook\r\n    '0x98a00666cfcb2ba5a405415c2bf6547c63bf5491': 'GMX PositionManager A', // PositionManager old\r\n    '0x87a4088bd721f83b6c2e5102e2fa47022cb1c831': 'GMX PositionManager B', // PositionManager\r\n    '0x75e42e6f01baf1d6022bea862a28774a9f8a4a0c': 'GMX PositionManager C', // PositionManager 12 oct 2022\r\n    '0xb87a436b93ffe9d75c5cfa7bacfff96430b09868': 'GMX PositionRouter C', // PositionRouter 12 oct 2022\r\n    '0x7257ac5d0a0aac04aa7ba2ac0a6eb742e332c3fb': 'GMX OrderExecutor', // OrderExecutor\r\n    '0x1a0ad27350cccd6f7f168e052100b4960efdb774': 'GMX FastPriceFeed A', // FastPriceFeed\r\n    '0x11d62807dae812a0f1571243460bf94325f43bb7': 'GMX PositionExecutor', // Position Executor\r\n    '0x3b6067d4caa8a14c63fdbe6318f27a0bbc9f9237': 'Dodo',\r\n    '0x11111112542d85b3ef69ae05771c2dccff4faa26': '1inch',\r\n    '0x6352a56caadc4f1e25cd6c75970fa768a3304e64': 'OpenOcean', // OpenOceanExchangeProxy\r\n    '0x4775af8fef4809fe10bf05867d2b038a4b5b2146': 'Gelato',\r\n    '0x5a9fd7c39a6c488e715437d7b1f3c823d5596ed1': 'LiFiDiamond',\r\n    '0x1d838be5d58cc131ae4a23359bc6ad2dddb8b75a': 'Vovo', // Vovo BTC UP USDC (vbuUSDC)\r\n    '0xc4bed5eeeccbe84780c44c5472e800d3a5053454': 'Vovo', // Vovo ETH UP USDC (veuUSDC)\r\n    '0xe40beb54ba00838abe076f6448b27528dd45e4f0': 'Vovo', // Vovo BTC UP USDC (vbuUSDC)\r\n    '0x9ba57a1d3f6c61ff500f598f16b97007eb02e346': 'Vovo', // Vovo ETH UP USDC (veuUSDC)\r\n    '0xfa82f1ba00b0697227e2ad6c668abb4c50ca0b1f': 'JonesDAO',\r\n    '0x226cb17a52709034e2ec6abe0d2f0a9ebcec1059': 'WardenSwap',\r\n    '0x1111111254fb6c44bac0bed2854e76f90643097d': '1inch',\r\n    '0x6d7a3177f3500bea64914642a49d0b5c0a7dae6d': 'deBridge',\r\n    '0xc30141b657f4216252dc59af2e7cdb9d8792e1b0': 'socket.tech',\r\n    '0xdd94018f54e565dbfc939f7c44a16e163faab331': 'Odos Router'\r\n  },\r\n  avalanche: {\r\n    '0x4296e307f108b2f583ff2f7b7270ee7831574ae5': 'GMX OrderBook',\r\n    '0x5f719c2f1095f7b9fc68a68e35b51194f4b6abe8': 'GMX Router',\r\n    '0x7d9d108445f7e59a67da7c16a2ceb08c85b76a35': 'GMX FastPriceFeed', // FastPriceFeed\r\n    '0xf2ec2e52c3b5f8b8bd5a3f93945d05628a233216': 'GMX PositionManager', // PositionManager\r\n    '0xa21b83e579f4315951ba658654c371520bdcb866': 'GMX PositionManager C',\r\n    '0xfff6d276bc37c61a23f06410dce4a400f66420f8': 'GMX PositionRouter C',\r\n    '0xc4729e56b831d74bbc18797e0e17a295fa77488c': 'Yak',\r\n    '0x409e377a7affb1fd3369cfc24880ad58895d1dd9': 'Dodo',\r\n    '0x6352a56caadc4f1e25cd6c75970fa768a3304e64': 'OpenOcean',\r\n    '0x7c5c4af1618220c090a6863175de47afb20fa9df': 'Gelato',\r\n    '0x1111111254fb6c44bac0bed2854e76f90643097d': '1inch',\r\n    '0xdef171fe48cf0115b1d80b88dc8eab59176fee57': 'ParaSwap',\r\n    '0x2ecf2a2e74b19aab2a62312167aff4b78e93b6c5': 'ParaSwap',\r\n    '0xdef1c0ded9bec7f1a1670819833240f027b25eff': '0x',\r\n    '0xe547cadbe081749e5b3dc53cb792dfaea2d02fd2': 'GMX PositionExecutor' // Position Executor\r\n  }\r\n}\r\n\r\nconst defaultFetcher = url => fetch(url).then(res => res.json())\r\nexport function useRequest(url, defaultValue, fetcher = defaultFetcher) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const [data, setData] = useState(defaultValue)\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setLoading(true)\r\n      const data = await fetcher(url)\r\n      setData(data)\r\n    } catch (ex) {\r\n      console.error(ex)\r\n      setError(ex)\r\n    }\r\n    setLoading(false)\r\n  }, [url])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useCoingeckoPrices(symbol, { from = FIRST_DATE_TS } = {}) {\r\n  // token ids https://api.coingecko.com/api/v3/coins\r\n  const _symbol = {\r\n    BTC: 'bitcoin',\r\n    ETH: 'ethereum',\r\n    LINK: 'chainlink',\r\n    UNI: 'uniswap',\r\n    AVAX: 'avalanche-2'\r\n  }[symbol]\r\n\r\n  const now = Date.now() / 1000\r\n  const days = Math.ceil(now / 86400) - Math.ceil(from / 86400) - 1\r\n\r\n  const url = `https://api.coingecko.com/api/v3/coins/${_symbol}/market_chart?vs_currency=usd&days=${days}&interval=daily`\r\n\r\n  const [res, loading, error] = useRequest(url)\r\n\r\n  const data = useMemo(() => {\r\n    if (!res || res.length === 0) {\r\n      return null\r\n    }\r\n\r\n    const ret = res.prices.map(item => {\r\n      // -1 is for shifting to previous day\r\n      // because CG uses first price of the day, but for GLP we store last price of the day\r\n      const timestamp = item[0] - 1\r\n      const groupTs = parseInt(timestamp / 1000 / 86400) * 86400\r\n      return {\r\n        timestamp: groupTs,\r\n        value: item[1]\r\n      }\r\n    })\r\n    return ret\r\n  }, [res])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nfunction getImpermanentLoss(change) {\r\n  return 2 * Math.sqrt(change) / (1 + change) - 1\r\n}\r\n\r\nfunction getChainSubgraph(chainName) {\r\n   // return chainName === \"arbitrum\" ? \"gmx-io/gmx-stats\" : \"gmx-io/gmx-avalanche-stats\"\r\n    // 由于arbitrum 上的stats 子图我自己部署的时候，总是索引失败，所以先用gmx的，但是我的 avalanche链上的stats是可以成功索引的\r\n    // https://api.thegraph.com/subgraphs/name/fyk943749465/avalanche-stats\r\n   return chainName === \"arbitrum\" ? \"gmx-io/gmx-stats\" : \"fyk943749465/avalanche-stats\"\r\n}\r\n\r\nexport function useGraph(querySource, { subgraph = null, subgraphUrl = null, chainName = \"arbitrum\" } = {}) {\r\n  const query = gql(querySource)\r\n\r\n  if (!subgraphUrl) {\r\n    if (!subgraph) {\r\n      subgraph = getChainSubgraph(chainName)\r\n    }\r\n    subgraphUrl = `https://api.thegraph.com/subgraphs/name/${subgraph}`;\r\n  }\r\n\r\n  const client = new ApolloClient({\r\n    link: new HttpLink({ uri: subgraphUrl, fetch }),\r\n    cache: new InMemoryCache()\r\n  })\r\n  const [data, setData] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n  }, [querySource, setLoading])\r\n\r\n  useEffect(() => {\r\n    client.query({query}).then(res => {\r\n      setData(res.data)\r\n      setLoading(false)\r\n    }).catch(ex => {\r\n      console.warn('Subgraph request failed error: %s subgraphUrl: %s', ex.message, subgraphUrl)\r\n      setError(ex)\r\n      setLoading(false)\r\n    })\r\n  }, [querySource, setData, setError, setLoading])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useLastBlock(chainName = \"arbitrum\") {\r\n  const [data, setData] = useState()\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n  useEffect(() => {\r\n    providers[chainName].getBlock()\r\n      .then(setData)\r\n      .catch(setError)\r\n      .finally(() => setLoading(false))\r\n  }, [])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useLastSubgraphBlock(chainName = \"arbitrum\") {\r\n  const [data, loading, error] = useGraph(`{\r\n    _meta {\r\n      block {\r\n        number\r\n      }\r\n    }\r\n  }`, { chainName })\r\n  const [block, setBlock] = useState(null)\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      return\r\n    }\r\n\r\n    providers[chainName].getBlock(data._meta.block.number).then(block => {\r\n      setBlock(block)\r\n    })\r\n  }, [data, setBlock])\r\n\r\n  return [block, loading, error]\r\n}\r\n\r\nexport function useTradersData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const [closedPositionsData, loading, error] = useGraph(`{\r\n    tradingStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      timestamp\r\n      profit\r\n      loss\r\n      profitCumulative\r\n      lossCumulative\r\n      longOpenInterest\r\n      shortOpenInterest\r\n    }\r\n  }`, { chainName })\r\n  const [feesData] = useFeesData({ from, to, chainName })\r\n  const marginFeesByTs = useMemo(() => {\r\n    if (!feesData) {\r\n      return {}\r\n    }\r\n\r\n    let feesCumulative = 0\r\n    return feesData.reduce((memo, { timestamp, margin: fees}) => {\r\n      feesCumulative += fees\r\n      memo[timestamp] = {\r\n        fees,\r\n        feesCumulative\r\n      }\r\n      return memo\r\n    }, {})\r\n  }, [feesData])\r\n\r\n  let ret = null\r\n  let currentPnlCumulative = 0;\r\n  let currentProfitCumulative = 0;\r\n  let currentLossCumulative = 0;\r\n  const data = closedPositionsData ? sortBy(closedPositionsData.tradingStats, i => i.timestamp).map(dataItem => {\r\n    const longOpenInterest = dataItem.longOpenInterest / 1e30\r\n    const shortOpenInterest = dataItem.shortOpenInterest / 1e30\r\n    const openInterest = longOpenInterest + shortOpenInterest\r\n\r\n    // const fees = (marginFeesByTs[dataItem.timestamp]?.fees || 0)\r\n    // const feesCumulative = (marginFeesByTs[dataItem.timestamp]?.feesCumulative || 0)\r\n\r\n    const profit = dataItem.profit / 1e30\r\n    const loss = dataItem.loss / 1e30\r\n    const profitCumulative = dataItem.profitCumulative / 1e30\r\n    const lossCumulative = dataItem.lossCumulative / 1e30\r\n    const pnlCumulative = profitCumulative - lossCumulative\r\n    const pnl = profit - loss\r\n    currentProfitCumulative += profit\r\n    currentLossCumulative -= loss\r\n    currentPnlCumulative += pnl\r\n    return {\r\n      longOpenInterest,\r\n      shortOpenInterest,\r\n      openInterest,\r\n      profit,\r\n      loss: -loss,\r\n      profitCumulative,\r\n      lossCumulative: -lossCumulative,\r\n      pnl,\r\n      pnlCumulative,\r\n      timestamp: dataItem.timestamp,\r\n      currentPnlCumulative,\r\n      currentLossCumulative,\r\n      currentProfitCumulative\r\n    }\r\n  }) : null\r\n\r\n  if (data) {\r\n    const maxProfit = maxBy(data, item => item.profit).profit\r\n    const maxLoss = minBy(data, item => item.loss).loss\r\n    const maxProfitLoss = Math.max(maxProfit, -maxLoss)\r\n\r\n    const maxPnl = maxBy(data, item => item.pnl).pnl\r\n    const minPnl = minBy(data, item => item.pnl).pnl\r\n    const maxCurrentCumulativePnl = maxBy(data, item => item.currentPnlCumulative).currentPnlCumulative\r\n    const minCurrentCumulativePnl = minBy(data, item => item.currentPnlCumulative).currentPnlCumulative\r\n\r\n    const currentProfitCumulative = data[data.length - 1].currentProfitCumulative\r\n    const currentLossCumulative = data[data.length - 1].currentLossCumulative\r\n    const stats = {\r\n      maxProfit,\r\n      maxLoss,\r\n      maxProfitLoss,\r\n      currentProfitCumulative,\r\n      currentLossCumulative,\r\n      maxCurrentCumulativeProfitLoss: Math.max(currentProfitCumulative, -currentLossCumulative),\r\n\r\n      maxAbsPnl: Math.max(\r\n        Math.abs(maxPnl),\r\n        Math.abs(minPnl),\r\n      ),\r\n      maxAbsCumulativePnl: Math.max(\r\n        Math.abs(maxCurrentCumulativePnl),\r\n        Math.abs(minCurrentCumulativePnl)\r\n      ),\r\n      \r\n    }\r\n\r\n    ret = {\r\n      data,\r\n      stats\r\n    }\r\n  }\r\n\r\n  return [ret, loading]\r\n}\r\n\r\nfunction getSwapSourcesFragment(skip = 0, from, to) {\r\n  return `\r\n    hourlyVolumeBySources(\r\n      first: 1000\r\n      skip: ${skip}\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      timestamp\r\n      source\r\n      swap\r\n    }\r\n  `\r\n}\r\nexport function useSwapSources({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const query = `{\r\n    a: ${getSwapSourcesFragment(0, from, to)}\r\n    b: ${getSwapSourcesFragment(1000, from, to)}\r\n    c: ${getSwapSourcesFragment(2000, from, to)}\r\n    d: ${getSwapSourcesFragment(3000, from, to)}\r\n    e: ${getSwapSourcesFragment(4000, from, to)}\r\n  }`\r\n  const [graphData, loading, error] = useGraph(query, { chainName })\r\n\r\n  let data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null\r\n    }\r\n\r\n    const {a, b, c, d, e} = graphData\r\n    const all = [...a, ...b, ...c, ...d, ...e]\r\n\r\n    const totalVolumeBySource = a.reduce((acc, item) => {\r\n      const source = knownSwapSources[chainName][item.source] || item.source\r\n      if (!acc[source]) {\r\n        acc[source] = 0\r\n      }\r\n      acc[source] += item.swap / 1e30\r\n      return acc\r\n    }, {})\r\n    const topVolumeSources = new Set(\r\n      Object.entries(totalVolumeBySource).sort((a, b) => b[1] - a[1]).map(item => item[0]).slice(0, 30)\r\n    )\r\n\r\n    let ret = chain(all)\r\n      .groupBy(item => parseInt(item.timestamp / 86400) * 86400)\r\n      .map((values, timestamp) => {\r\n        let all = 0\r\n        const retItem = {\r\n          timestamp: Number(timestamp),\r\n          ...values.reduce((memo, item) => {\r\n            let source = knownSwapSources[chainName][item.source] || item.source\r\n            if (!topVolumeSources.has(source)) {\r\n              source = 'Other'\r\n            }\r\n            if (item.swap != 0) {\r\n              const volume = item.swap / 1e30\r\n              memo[source] = memo[source] || 0\r\n              memo[source] += volume\r\n              all += volume\r\n            }\r\n            return memo\r\n          }, {})\r\n        }\r\n\r\n        retItem.all = all\r\n\r\n        return retItem\r\n      })\r\n      .sortBy(item => item.timestamp)\r\n      .value()\r\n\r\n    return ret\r\n  }, [graphData])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useTotalVolumeFromServer() {\r\n  // 要考虑这个url 怎么去替换掉\r\n  const [data, loading] = useRequest('https://gmx-server-mainnet.uw.r.appspot.com/total_volume')\r\n\r\n  return useMemo(() => {\r\n    if (!data) {\r\n      return [data, loading]\r\n    }\r\n\r\n    const total = data.reduce((memo, item) => {\r\n      return memo + parseInt(item.data.volume) / 1e30\r\n    }, 0)\r\n    return [total, loading]\r\n  }, [data, loading])\r\n}\r\n\r\nfunction getServerHostname(chainName) {\r\n  if (chainName == \"avalanche\") {\r\n    return 'gmx-avax-server.uc.r.appspot.com'\r\n  }\r\n  return 'gmx-server-mainnet.uw.r.appspot.com'\r\n}\r\n\r\nexport function useVolumeDataRequest(url, defaultValue, from, to, fetcher = defaultFetcher) {\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState()\r\n  const [data, setData] = useState(defaultValue)\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      setLoading(true)\r\n      const data = await fetcher(url)\r\n      setData(data)\r\n    } catch (ex) {\r\n      console.error(ex)\r\n      setError(ex)\r\n    }\r\n    setLoading(false)\r\n  }, [url, from, to])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useVolumeDataFromServer({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const PROPS = 'margin liquidation swap mint burn'.split(' ')\r\n  const [data, loading] = useVolumeDataRequest(`https://${getServerHostname(chainName)}/daily_volume`, null, from, to, async url => {\r\n    let after\r\n    const ret = []\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      const res = await (await fetch(url + (after ? `?after=${after}` : ''))).json()\r\n      if (res.length === 0) return ret\r\n      for (const item of res) {\r\n        if (item.data.timestamp < from) {\r\n          return ret\r\n        }\r\n        ret.push(item)\r\n      }\r\n      after = res[res.length - 1].id\r\n    }\r\n  })\r\n\r\n  const ret = useMemo(() => {\r\n    if (!data) {\r\n      return null\r\n    }\r\n\r\n    const tmp = data.reduce((memo, item) => {\r\n      const timestamp = item.data.timestamp\r\n      if (timestamp < from || timestamp > to) {\r\n        return memo\r\n      }\r\n\r\n      let type\r\n      if (item.data.action === 'Swap') {\r\n        type = 'swap'\r\n      } else if (item.data.action === 'SellUSDG') {\r\n        type = 'burn'\r\n      } else if (item.data.action === 'BuyUSDG') {\r\n        type = 'mint'\r\n      } else if (item.data.action.includes('LiquidatePosition')) {\r\n        type = 'liquidation'\r\n      } else {\r\n        type = 'margin'\r\n      }\r\n      const volume = Number(item.data.volume) / 1e30\r\n      memo[timestamp] = memo[timestamp] || {}\r\n      memo[timestamp][type] = memo[timestamp][type] || 0\r\n      memo[timestamp][type] += volume\r\n      return memo\r\n    }, {})\r\n\r\n    let cumulative = 0\r\n    const cumulativeByTs = {}\r\n    return Object.keys(tmp).sort().map(timestamp => {\r\n      const item = tmp[timestamp]\r\n      let all = 0\r\n\r\n      let movingAverageAll\r\n      const movingAverageTs = timestamp - MOVING_AVERAGE_PERIOD\r\n      if (movingAverageTs in cumulativeByTs) {\r\n        movingAverageAll = (cumulative - cumulativeByTs[movingAverageTs]) / MOVING_AVERAGE_DAYS\r\n      }\r\n\r\n      PROPS.forEach(prop => {\r\n        if (item[prop]) all += item[prop]\r\n      })\r\n      cumulative += all\r\n      cumulativeByTs[timestamp] = cumulative\r\n      return {\r\n        timestamp,\r\n        all,\r\n        cumulative,\r\n        movingAverageAll,\r\n        ...item\r\n      }\r\n    })\r\n  }, [data, from, to])\r\n\r\n  return [ret, loading]\r\n}\r\n\r\nexport function useUsersData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const query = `{\r\n    userStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      uniqueCount\r\n      uniqueSwapCount\r\n      uniqueMarginCount\r\n      uniqueMintBurnCount\r\n      uniqueCountCumulative\r\n      uniqueSwapCountCumulative\r\n      uniqueMarginCountCumulative\r\n      uniqueMintBurnCountCumulative\r\n      actionCount\r\n      actionSwapCount\r\n      actionMarginCount\r\n      actionMintBurnCount\r\n      timestamp\r\n    }\r\n  }`\r\n  const [graphData, loading, error] = useGraph(query, { chainName })\r\n\r\n  const prevUniqueCountCumulative = {}\r\n  let cumulativeNewUserCount = 0;\r\n  const data = graphData ? sortBy(graphData.userStats, 'timestamp').map(item => {\r\n    const newCountData = ['', 'Swap', 'Margin', 'MintBurn'].reduce((memo, type) => {\r\n      memo[`new${type}Count`] = prevUniqueCountCumulative[type]\r\n        ? item[`unique${type}CountCumulative`] - prevUniqueCountCumulative[type]\r\n        : item[`unique${type}Count`]\r\n      prevUniqueCountCumulative[type] = item[`unique${type}CountCumulative`]\r\n      return memo\r\n    }, {})\r\n    cumulativeNewUserCount += newCountData.newCount;\r\n    const oldCount = item.uniqueCount - newCountData.newCount\r\n    const oldPercent = (oldCount / item.uniqueCount * 100).toFixed(1)\r\n    return {\r\n      all: item.uniqueCount,\r\n      uniqueSum: item.uniqueSwapCount + item.uniqueMarginCount + item.uniqueMintBurnCount,\r\n      oldCount,\r\n      oldPercent,\r\n      cumulativeNewUserCount,\r\n      ...newCountData,\r\n      ...item\r\n    }\r\n  }) : null\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useFundingRateData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const query = `{\r\n    fundingRates(\r\n      first: 1000,\r\n      orderBy: timestamp,\r\n      orderDirection: desc,\r\n      where: { period: \"daily\", id_gte: ${from}, id_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      id,\r\n      token,\r\n      timestamp,\r\n      startFundingRate,\r\n      startTimestamp,\r\n      endFundingRate,\r\n      endTimestamp\r\n    }\r\n  }`\r\n  const [graphData, loading, error] = useGraph(query, { chainName })\r\n\r\n\r\n  const data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null\r\n    }\r\n\r\n    const groups = graphData.fundingRates.reduce((memo, item) => {\r\n      const symbol = tokenSymbols[item.token]\r\n      if (symbol === 'MIM') {\r\n        return memo\r\n      }\r\n      memo[item.timestamp] = memo[item.timestamp] || {\r\n        timestamp: item.timestamp\r\n      }\r\n      const group = memo[item.timestamp]\r\n      const timeDelta = parseInt((item.endTimestamp - item.startTimestamp) / 3600) * 3600\r\n\r\n      let fundingRate = 0\r\n      if (item.endFundingRate && item.startFundingRate) {\r\n        const fundingDelta = item.endFundingRate - item.startFundingRate\r\n        const divisor = timeDelta / 86400\r\n        fundingRate = fundingDelta / divisor / 10000 * 365\r\n      }\r\n      group[symbol] = fundingRate\r\n      return memo\r\n    }, {})\r\n    \r\n    return fillNa(sortBy(Object.values(groups), 'timestamp'))\r\n  }, [graphData])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nconst MOVING_AVERAGE_DAYS = 7\r\nconst MOVING_AVERAGE_PERIOD = 86400 * MOVING_AVERAGE_DAYS\r\n\r\nexport function useVolumeData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n\tconst PROPS = 'margin liquidation swap mint burn'.split(' ')\r\n  const timestampProp = chainName === \"arbitrum\" ? \"id\" : \"timestamp\"\r\n  const query = `{\r\n    volumeStats(\r\n      first: 1000,\r\n      orderBy: ${timestampProp},\r\n      orderDirection: desc\r\n      where: { period: daily, ${timestampProp}_gte: ${from}, ${timestampProp}_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      ${timestampProp}\r\n      ${PROPS.join('\\n')}\r\n    }\r\n  }`\r\n  const [graphData, loading, error] = useGraph(query, { chainName })\r\n\r\n  const data = useMemo(() => {\r\n    if (!graphData) {\r\n      return null\r\n    }\r\n\r\n    let ret =  sortBy(graphData.volumeStats, timestampProp).map(item => {\r\n      const ret = { timestamp: item[timestampProp] };\r\n      let all = 0;\r\n      PROPS.forEach(prop => {\r\n        ret[prop] = item[prop] / 1e30\r\n        all += ret[prop]\r\n      })\r\n      ret.all = all\r\n      return ret\r\n    })\r\n\r\n    let cumulative = 0\r\n    const cumulativeByTs = {}\r\n    return ret.map(item => {\r\n      cumulative += item.all\r\n\r\n      let movingAverageAll\r\n      const movingAverageTs = item.timestamp - MOVING_AVERAGE_PERIOD\r\n      if (movingAverageTs in cumulativeByTs) {\r\n        movingAverageAll = (cumulative - cumulativeByTs[movingAverageTs]) / MOVING_AVERAGE_DAYS\r\n      }\r\n\r\n      return {\r\n        movingAverageAll,\r\n        cumulative,\r\n        ...item\r\n      }\r\n    })\r\n  }, [graphData])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useFeesData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const PROPS = 'margin liquidation swap mint burn'.split(' ')\r\n  const feesQuery = `{\r\n    feeStats(\r\n      first: 1000\r\n      orderBy: id\r\n      orderDirection: desc\r\n      where: { period: daily, id_gte: ${from}, id_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      id\r\n      margin\r\n      marginAndLiquidation\r\n      swap\r\n      mint\r\n      burn\r\n      ${chainName === \"avalanche\" ? \"timestamp\" : \"\"}\r\n    }\r\n  }`\r\n  let [feesData, loading, error] = useGraph(feesQuery, {\r\n    chainName\r\n  })\r\n\r\n  const feesChartData = useMemo(() => {\r\n    if (!feesData) {\r\n      return null\r\n    }\r\n\r\n    let chartData = sortBy(feesData.feeStats, 'id').map(item => {\r\n      const ret = { timestamp: item.timestamp || item.id };\r\n\r\n      PROPS.forEach(prop => {\r\n        if (item[prop]) {\r\n          ret[prop] = item[prop] / 1e30\r\n        }\r\n      })\r\n\r\n      ret.liquidation = item.marginAndLiquidation / 1e30 - item.margin / 1e30\r\n      ret.all = PROPS.reduce((memo, prop) => memo + ret[prop], 0)\r\n      return ret\r\n    })\r\n\r\n    let cumulative = 0\r\n    const cumulativeByTs = {}\r\n    return chain(chartData)\r\n      .groupBy(item => item.timestamp)\r\n      .map((values, timestamp) => {\r\n        const all = sumBy(values, 'all')\r\n        cumulative += all\r\n\r\n        let movingAverageAll\r\n        const movingAverageTs = timestamp - MOVING_AVERAGE_PERIOD\r\n        if (movingAverageTs in cumulativeByTs) {\r\n          movingAverageAll = (cumulative - cumulativeByTs[movingAverageTs]) / MOVING_AVERAGE_DAYS\r\n        }\r\n\r\n        const ret = {\r\n          timestamp: Number(timestamp),\r\n          all,\r\n          cumulative,\r\n          movingAverageAll\r\n        }\r\n        PROPS.forEach(prop => {\r\n           ret[prop] = sumBy(values, prop)\r\n        })\r\n        cumulativeByTs[timestamp] = cumulative\r\n        return ret\r\n      })\r\n      .value()\r\n      .filter(item => item.timestamp >= from)\r\n  }, [feesData])\r\n\r\n  return [feesChartData, loading, error]\r\n}\r\n\r\nexport function useAumPerformanceData({ from = FIRST_DATE_TS, to = NOW_TS, groupPeriod }) {\r\n  const [feesData, feesLoading] = useFeesData({ from, to, groupPeriod })\r\n  const [glpData, glpLoading] = useGlpData({ from, to, groupPeriod })\r\n  const [volumeData, volumeLoading] = useVolumeData({ from, to, groupPeriod })\r\n\r\n  const dailyCoef = 86400 / groupPeriod\r\n\r\n  const data = useMemo(() => {\r\n    if (!feesData || !glpData || !volumeData) {\r\n      return null\r\n    }\r\n\r\n    const ret = feesData.map((feeItem, i) => {\r\n      const glpItem = glpData[i]\r\n      const volumeItem = volumeData[i]\r\n      let apr = (feeItem?.all && glpItem?.aum) ? feeItem.all /  glpItem.aum * 100 * 365 * dailyCoef : null\r\n      if (apr > 10000) {\r\n        apr = null\r\n      }\r\n      let usage = (volumeItem?.all && glpItem?.aum) ? volumeItem.all / glpItem.aum * 100 * dailyCoef : null\r\n      if (usage > 10000) {\r\n        usage = null\r\n      }\r\n\r\n      return {\r\n        timestamp: feeItem.timestamp,\r\n        apr,\r\n        usage\r\n      }\r\n    })\r\n    const averageApr = ret.reduce((memo, item) => item.apr + memo, 0) / ret.length\r\n    ret.forEach(item => item.averageApr = averageApr)\r\n    const averageUsage = ret.reduce((memo, item) => item.usage + memo, 0) / ret.length\r\n    ret.forEach(item => item.averageUsage = averageUsage)\r\n    return ret\r\n  }, [feesData, glpData, volumeData])\r\n\r\n  return [data, feesLoading || glpLoading || volumeLoading]\r\n}\r\n\r\nexport function useGlpData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const timestampProp = chainName === 'arbitrum' ? 'id' : 'timestamp'\r\n  const query = `{\r\n    glpStats(\r\n      first: 1000\r\n      orderBy: ${timestampProp}\r\n      orderDirection: desc\r\n      where: {\r\n        period: daily\r\n        ${timestampProp}_gte: ${from}\r\n        ${timestampProp}_lte: ${to}\r\n      }\r\n      subgraphError: allow\r\n    ) {\r\n      ${timestampProp}\r\n      aumInUsdg\r\n      glpSupply\r\n      distributedUsd\r\n      distributedEth\r\n    }\r\n  }`\r\n  let [data, loading, error] = useGraph(query, { chainName })\r\n\r\n  let cumulativeDistributedUsdPerGlp = 0\r\n  let cumulativeDistributedEthPerGlp = 0\r\n  const glpChartData = useMemo(() => {\r\n    if (!data) {\r\n      return null\r\n    }\r\n\r\n    let prevGlpSupply\r\n    let prevAum\r\n\r\n    let ret = sortBy(data.glpStats, item => item[timestampProp]).filter(item => item[timestampProp] % 86400 === 0).reduce((memo, item) => {\r\n      const last = memo[memo.length - 1]\r\n\r\n      const aum = Number(item.aumInUsdg) / 1e18\r\n      const glpSupply = Number(item.glpSupply) / 1e18\r\n\r\n      const distributedUsd = Number(item.distributedUsd) / 1e30\r\n      const distributedUsdPerGlp = (distributedUsd / glpSupply) || 0\r\n      cumulativeDistributedUsdPerGlp += distributedUsdPerGlp\r\n\r\n      const distributedEth = Number(item.distributedEth) / 1e18\r\n      const distributedEthPerGlp = (distributedEth / glpSupply) || 0\r\n      cumulativeDistributedEthPerGlp += distributedEthPerGlp\r\n\r\n      const glpPrice = aum / glpSupply\r\n      const timestamp = parseInt(item[timestampProp])\r\n\r\n      const newItem = {\r\n        timestamp,\r\n        aum,\r\n        glpSupply,\r\n        glpPrice,\r\n        cumulativeDistributedEthPerGlp,\r\n        cumulativeDistributedUsdPerGlp,\r\n        distributedUsdPerGlp,\r\n        distributedEthPerGlp\r\n      }\r\n\r\n      if (last && last.timestamp === timestamp) {\r\n        memo[memo.length - 1] = newItem\r\n      } else {\r\n        memo.push(newItem)\r\n      }\r\n\r\n      return memo\r\n    }, []).map(item => {\r\n      let { glpSupply, aum } = item\r\n      if (!glpSupply) {\r\n        glpSupply = prevGlpSupply\r\n      }\r\n      if (!aum) {\r\n        aum = prevAum\r\n      }\r\n      item.glpSupplyChange = prevGlpSupply ? (glpSupply - prevGlpSupply) / prevGlpSupply * 100 : 0\r\n      if (item.glpSupplyChange > 1000) {\r\n        item.glpSupplyChange = 0\r\n      }\r\n      item.aumChange = prevAum ? (aum - prevAum) / prevAum * 100 : 0\r\n      if (item.aumChange > 1000) {\r\n        item.aumChange = 0\r\n      }\r\n      prevGlpSupply = glpSupply\r\n      prevAum = aum\r\n      return item\r\n    })\r\n\r\n    ret = fillNa(ret)\r\n    return ret\r\n  }, [data])\r\n  \r\n  return [glpChartData, loading, error]\r\n}\r\n\r\nexport function useGlpPerformanceData(glpData, feesData, { from = FIRST_DATE_TS, chainName = \"arbitrum\" } = {}) {\r\n  const [btcPrices] = useCoingeckoPrices('BTC', { from })\r\n  const [ethPrices] = useCoingeckoPrices('ETH', { from })\r\n  const [avaxPrices] = useCoingeckoPrices('AVAX', { from })\r\n\r\n  const glpPerformanceChartData = useMemo(() => {\r\n    if (!btcPrices || !ethPrices || !avaxPrices || !glpData || !feesData) {\r\n      return null\r\n    }\r\n\r\n    const glpDataById = glpData.reduce((memo, item) => {\r\n      memo[item.timestamp] = item\r\n      return memo\r\n    }, {})\r\n\r\n    const feesDataById = feesData.reduce((memo, item) => {\r\n      memo[item.timestamp] = item\r\n      return memo\r\n    })\r\n\r\n    let BTC_WEIGHT = 0\r\n    let ETH_WEIGHT = 0\r\n    let AVAX_WEIGHT = 0\r\n\r\n    if (chainName === \"avalanche\") {\r\n      BTC_WEIGHT = 0.166\r\n      ETH_WEIGHT = 0.166\r\n      AVAX_WEIGHT = 0.166\r\n    } else {\r\n      BTC_WEIGHT = 0.25\r\n      ETH_WEIGHT = 0.25\r\n    }\r\n\r\n    const STABLE_WEIGHT = 1 - BTC_WEIGHT - ETH_WEIGHT - AVAX_WEIGHT\r\n    const GLP_START_PRICE = glpDataById[btcPrices[0].timestamp]?.glpPrice || 1.19\r\n\r\n    const btcFirstPrice = btcPrices[0]?.value\r\n    const ethFirstPrice = ethPrices[0]?.value\r\n    const avaxFirstPrice = avaxPrices[0]?.value\r\n\r\n    let indexBtcCount = GLP_START_PRICE * BTC_WEIGHT / btcFirstPrice\r\n    let indexEthCount = GLP_START_PRICE * ETH_WEIGHT / ethFirstPrice\r\n    let indexAvaxCount = GLP_START_PRICE * AVAX_WEIGHT / avaxFirstPrice\r\n    let indexStableCount = GLP_START_PRICE * STABLE_WEIGHT\r\n\r\n    const lpBtcCount = GLP_START_PRICE * 0.5 / btcFirstPrice\r\n    const lpEthCount = GLP_START_PRICE * 0.5 / ethFirstPrice\r\n    const lpAvaxCount = GLP_START_PRICE * 0.5 / avaxFirstPrice\r\n\r\n    const ret = []\r\n    let cumulativeFeesPerGlp = 0\r\n    let lastGlpItem\r\n    let lastFeesItem\r\n\r\n    let prevEthPrice = 3400\r\n    let prevAvaxPrice = 1000\r\n    for (let i = 0; i < btcPrices.length; i++) {\r\n      const btcPrice = btcPrices[i].value\r\n      const ethPrice = ethPrices[i]?.value || prevEthPrice\r\n      const avaxPrice = avaxPrices[i]?.value || prevAvaxPrice\r\n      prevAvaxPrice = avaxPrice\r\n      prevEthPrice = ethPrice\r\n\r\n      const timestampGroup = parseInt(btcPrices[i].timestamp / 86400) * 86400\r\n      const glpItem = glpDataById[timestampGroup] || lastGlpItem\r\n      lastGlpItem = glpItem\r\n\r\n      const glpPrice = glpItem?.glpPrice\r\n      const glpSupply = glpItem?.glpSupply\r\n      \r\n      const feesItem = feesDataById[timestampGroup] || lastFeesItem\r\n      lastFeesItem = feesItem\r\n\r\n      const dailyFees = feesItem?.all\r\n\r\n      const syntheticPrice = (\r\n        indexBtcCount * btcPrice\r\n        + indexEthCount * ethPrice\r\n        + indexAvaxCount * avaxPrice\r\n        + indexStableCount\r\n      )\r\n\r\n      // rebalance each day. can rebalance each X days\r\n      if (i % 1 == 0) {\r\n        indexBtcCount = syntheticPrice * BTC_WEIGHT / btcPrice\r\n        indexEthCount = syntheticPrice * ETH_WEIGHT / ethPrice\r\n        indexAvaxCount = syntheticPrice * AVAX_WEIGHT / avaxPrice\r\n        indexStableCount = syntheticPrice * STABLE_WEIGHT\r\n      }\r\n\r\n      const lpBtcPrice = (lpBtcCount * btcPrice + GLP_START_PRICE / 2) * (1 + getImpermanentLoss(btcPrice / btcFirstPrice))\r\n      const lpEthPrice = (lpEthCount * ethPrice + GLP_START_PRICE / 2) * (1 + getImpermanentLoss(ethPrice / ethFirstPrice))\r\n      const lpAvaxPrice = (lpAvaxCount * avaxPrice + GLP_START_PRICE / 2) * (1 + getImpermanentLoss(avaxPrice / avaxFirstPrice))\r\n\r\n      if (dailyFees && glpSupply) {\r\n        const INCREASED_GLP_REWARDS_TIMESTAMP = 1635714000\r\n        const GLP_REWARDS_SHARE = timestampGroup >= INCREASED_GLP_REWARDS_TIMESTAMP ? 0.7 : 0.5\r\n        const collectedFeesPerGlp = dailyFees / glpSupply * GLP_REWARDS_SHARE\r\n        cumulativeFeesPerGlp += collectedFeesPerGlp\r\n      }\r\n\r\n      let glpPlusFees = glpPrice\r\n      if (glpPrice && glpSupply && cumulativeFeesPerGlp) {\r\n        glpPlusFees = glpPrice + cumulativeFeesPerGlp\r\n      }\r\n\r\n      let glpApr\r\n      let glpPlusDistributedUsd\r\n      let glpPlusDistributedEth\r\n      if (glpItem) {\r\n        if (glpItem.cumulativeDistributedUsdPerGlp) {\r\n          glpPlusDistributedUsd = glpPrice + glpItem.cumulativeDistributedUsdPerGlp\r\n          // glpApr = glpItem.distributedUsdPerGlp / glpPrice * 365 * 100 // incorrect?\r\n        }\r\n        if (glpItem.cumulativeDistributedEthPerGlp) {\r\n          glpPlusDistributedEth = glpPrice + glpItem.cumulativeDistributedEthPerGlp * ethPrice\r\n        }\r\n      }\r\n\r\n      ret.push({\r\n        timestamp: btcPrices[i].timestamp,\r\n        syntheticPrice,\r\n        lpBtcPrice,\r\n        lpEthPrice,\r\n        lpAvaxPrice,\r\n        glpPrice,\r\n        btcPrice,\r\n        ethPrice,\r\n        glpPlusFees,\r\n        glpPlusDistributedUsd,\r\n        glpPlusDistributedEth,\r\n\r\n        indexBtcCount,\r\n        indexEthCount,\r\n        indexAvaxCount,\r\n        indexStableCount,\r\n\r\n        BTC_WEIGHT,\r\n        ETH_WEIGHT,\r\n        AVAX_WEIGHT,\r\n        STABLE_WEIGHT,\r\n\r\n        performanceLpEth: (glpPrice / lpEthPrice * 100).toFixed(2),\r\n        performanceLpEthCollectedFees: (glpPlusFees / lpEthPrice * 100).toFixed(2),\r\n        performanceLpEthDistributedUsd: (glpPlusDistributedUsd / lpEthPrice * 100).toFixed(2),\r\n        performanceLpEthDistributedEth: (glpPlusDistributedEth / lpEthPrice * 100).toFixed(2),\r\n\r\n        performanceLpBtcCollectedFees: (glpPlusFees / lpBtcPrice * 100).toFixed(2),\r\n\r\n        performanceLpAvaxCollectedFees: (glpPlusFees / lpAvaxPrice * 100).toFixed(2),\r\n\r\n        performanceSynthetic: (glpPrice / syntheticPrice * 100).toFixed(2),\r\n        performanceSyntheticCollectedFees: (glpPlusFees / syntheticPrice * 100).toFixed(2),\r\n        performanceSyntheticDistributedUsd: (glpPlusDistributedUsd / syntheticPrice * 100).toFixed(2),\r\n        performanceSyntheticDistributedEth: (glpPlusDistributedEth / syntheticPrice * 100).toFixed(2),\r\n\r\n        glpApr\r\n      })\r\n    }\r\n\r\n    return ret\r\n  }, [btcPrices, ethPrices, glpData, feesData])\r\n\r\n  return [glpPerformanceChartData]\r\n}\r\n\r\nexport function useTokenStats({ \r\n  from = FIRST_DATE_TS,\r\n  to = NOW_TS,\r\n  period = 'daily',\r\n  chainName = \"arbitrum\" \r\n} = {}) {\r\n\r\n  const getTokenStatsFragment = ({skip = 0} = {}) => `\r\n    tokenStats(\r\n      first: 1000,\r\n      skip: ${skip},\r\n      orderBy: timestamp,\r\n      orderDirection: desc,\r\n      where: { period: ${period}, timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      poolAmountUsd\r\n      timestamp\r\n      token\r\n    }\r\n  `\r\n\r\n  // Request more than 1000 records to retrieve maximum stats for period\r\n  const query = `{\r\n    a: ${getTokenStatsFragment()}\r\n    b: ${getTokenStatsFragment({skip: 1000})},\r\n    c: ${getTokenStatsFragment({skip: 2000})},\r\n    d: ${getTokenStatsFragment({skip: 3000})},\r\n    e: ${getTokenStatsFragment({skip: 4000})},\r\n    f: ${getTokenStatsFragment({skip: 5000})},\r\n  }`\r\n\r\n  const [graphData, loading, error] = useGraph(query, { chainName })\r\n\r\n  const data = useMemo(() => {\r\n    if (loading || !graphData) {\r\n      return null;\r\n    }\r\n\r\n    const fullData = Object.values(graphData).reduce((memo, records) => {\r\n      memo.push(...records);\r\n      return memo;\r\n    }, []);\r\n\r\n    const retrievedTokens = new Set();\r\n\r\n    const timestampGroups = fullData.reduce((memo, item) => {\r\n      const {timestamp, token, ...stats} = item;\r\n\r\n      const symbol = tokenSymbols[token] || token;\r\n\r\n      retrievedTokens.add(symbol);\r\n\r\n      memo[timestamp] = memo[timestamp || 0] || {};\r\n\r\n      memo[timestamp][symbol] = {\r\n        poolAmountUsd: parseInt(stats.poolAmountUsd) / 1e30,\r\n      };\r\n\r\n      return memo;\r\n    }, {});\r\n\r\n    const poolAmountUsdRecords = [];\r\n\r\n    Object.entries(timestampGroups).forEach(([timestamp, dataItem]) => {\r\n        const poolAmountUsdRecord = Object.entries(dataItem).reduce((memo, [token, stats]) => {\r\n            memo.all += stats.poolAmountUsd;\r\n            memo[token] = stats.poolAmountUsd;\r\n            memo.timestamp = timestamp;\r\n\r\n            return memo;\r\n        }, {all: 0});\r\n\r\n        poolAmountUsdRecords.push(poolAmountUsdRecord);\r\n    })\r\n\r\n    return {\r\n      poolAmountUsd: poolAmountUsdRecords,\r\n      tokenSymbols: Array.from(retrievedTokens),\r\n    };\r\n  }, [graphData, loading])\r\n\r\n  return [data, loading, error]\r\n}\r\n\r\nexport function useReferralsData({ from = FIRST_DATE_TS, to = NOW_TS, chainName = \"arbitrum\" } = {}) {\r\n  const query = `{\r\n    globalStats(\r\n      first: 1000\r\n      orderBy: timestamp\r\n      orderDirection: desc\r\n      where: { period: \"daily\", timestamp_gte: ${from}, timestamp_lte: ${to} }\r\n      subgraphError: allow\r\n    ) {\r\n      volume\r\n      volumeCumulative\r\n      totalRebateUsd\r\n      totalRebateUsdCumulative\r\n      discountUsd\r\n      discountUsdCumulative\r\n      referrersCount\r\n      referrersCountCumulative\r\n      referralCodesCount\r\n      referralCodesCountCumulative\r\n      referralsCount\r\n      referralsCountCumulative\r\n      timestamp\r\n    }\r\n  }`\r\n  // const subgraph = chainName === \"arbitrum\"\r\n  //   ? \"gmx-io/gmx-arbitrum-referrals\"\r\n  //   : \"gmx-io/gmx-avalanche-referrals\"\r\n  // https://api.thegraph.com/subgraphs/name/fyk943749465/avalanche-referrals\r\n  // https://api.thegraph.com/subgraphs/name/fyk943749465/referrals\r\n  const subgraph = chainName === \"arbitrum\" ? \"fyk943749465/referrals\" : \"fyk943749465/avalanche-referrals\"\r\n  const [graphData, loading, error] = useGraph(query, { subgraph })\r\n\r\n  const data = graphData ? sortBy(graphData.globalStats, 'timestamp').map(item => {\r\n    const totalRebateUsd = item.totalRebateUsd / 1e30\r\n    const discountUsd = item.discountUsd / 1e30\r\n    return {\r\n      ...item,\r\n      volume: item.volume / 1e30,\r\n      volumeCumulative: item.volumeCumulative / 1e30,\r\n      totalRebateUsd,\r\n      totalRebateUsdCumulative: item.totalRebateUsdCumulative / 1e30,\r\n      discountUsd,\r\n      referrerRebateUsd: totalRebateUsd - discountUsd,\r\n      discountUsdCumulative: item.discountUsdCumulative / 1e30,\r\n      referralCodesCount: parseInt(item.referralCodesCount),\r\n      referralCodesCountCumulative: parseInt(item.referralCodesCountCumulative),\r\n      referrersCount: parseInt(item.referrersCount),\r\n      referrersCountCumulative: parseInt(item.referrersCountCumulative),\r\n      referralsCount: parseInt(item.referralsCount),\r\n      referralsCountCumulative: parseInt(item.referralsCountCumulative),\r\n    }\r\n  }) : null\r\n\r\n  return [data, loading, error]\r\n}\r\n","import React from 'react'\r\nimport { useTokenStats } from '../../dataProvider';\r\nimport { \r\n    COINCOLORS, convertToPercents,\r\n } from '../../helpers';\r\nimport GenericChart from '../GenericChart';\r\n\r\nconst convertToPercentsHandler = (data) =>\r\n  convertToPercents(data, {totalKey: 'all', ignoreKeys: []})\r\n\r\n\r\nfunction getTokenColor(index) {\r\n    return COINCOLORS[index % COINCOLORS.length];\r\n}\r\n\r\nexport default function PoolAmountChart({\r\n    from,\r\n    to,\r\n    chainName,\r\n    syncId,\r\n}) {\r\n    const [tokenStatsData, tokenStatsLoading] = useTokenStats({from, to, chainName});\r\n\r\n    const chartLegendItems = (tokenStatsData && tokenStatsData.tokenSymbols)\r\n        ? tokenStatsData.tokenSymbols.map((token, i) => ({\r\n            key: token,\r\n            color: getTokenColor(i),\r\n            fillOpacity: 0.5\r\n        }))\r\n        : [];\r\n\r\n    return (\r\n        <GenericChart\r\n            syncId={syncId}\r\n            loading={tokenStatsLoading}\r\n            title=\"Pool Composition\"\r\n            data={tokenStatsData ? tokenStatsData.poolAmountUsd : null}\r\n            controls={{\r\n                convertToPercents: convertToPercentsHandler,\r\n            }}\r\n            yaxisDataKey=\"all\"\r\n            items={chartLegendItems}\r\n            type=\"Area\"\r\n        />\r\n    )\r\n}","import React from 'react'\r\nimport { \r\n    Area,\r\n    Bar,\r\n    CartesianGrid,\r\n    ComposedChart,\r\n    Legend,\r\n    ResponsiveContainer,\r\n    Tooltip,\r\n    XAxis,\r\n    YAxis\r\n} from 'recharts';\r\nimport { \r\n    tooltipFormatter,\r\n    tooltipLabelFormatter,\r\n    yaxisFormatter,\r\n } from '../../helpers';\r\nimport { useChartViewState } from '../../hooks/useChartViewState';\r\nimport ChartWrapper from '../ChartWrapper';\r\n\r\nconst convertToPercentsHandler = (data) => {\r\n    return data.map(item => {\r\n        const total = item.profit + Math.abs(item.loss);\r\n\r\n        const resultItem = {\r\n            ...item,\r\n            profit: (item.profit / total) * 100,\r\n            loss: (Math.abs(item.loss) / total) * 100,\r\n            all: 100,\r\n        };\r\n\r\n        return resultItem;\r\n    })\r\n};\r\n\r\n\r\nexport default function TradersProfitLossChart({\r\n    syncId,\r\n    tradersData,\r\n    loading,\r\n    yaxisWidth,\r\n    chartHeight,\r\n}) {\r\n    const controls = {\r\n        convertToPercents: convertToPercentsHandler,\r\n    }\r\n\r\n    const {\r\n        viewState,\r\n        togglePercentView,\r\n        formattedData,\r\n        ...viewSettings\r\n    } = useChartViewState({controls, data: tradersData?.data});\r\n\r\n    return (\r\n        <ChartWrapper\r\n            title=\"Traders Profit vs. Loss\"\r\n            loading={loading}\r\n            data={formattedData}\r\n            csvFields={[{ key: 'profit' }, { key: 'loss' }, { key: 'profitCumulative' }, { key: 'lossCumulative' }]}\r\n            controls={controls}\r\n            togglePercentView={togglePercentView}\r\n            viewState={viewState}\r\n      >\r\n        <ResponsiveContainer width=\"100%\" height={chartHeight}>\r\n          <ComposedChart data={formattedData} barGap={0} syncId={syncId}>\r\n            <CartesianGrid strokeDasharray=\"10 10\" />\r\n            <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n            {viewState.isPercentsView\r\n                ? <YAxis dataKey=\"all\" tickFormatter={viewSettings.yaxisTickFormatter} width={yaxisWidth} />\r\n                : (\r\n                    <YAxis \r\n                        domain={[-tradersData?.stats.maxProfitLoss * 1.05, tradersData?.stats.maxProfitLoss * 1.05]}\r\n                        tickFormatter={viewSettings.yaxisTickFormatter}\r\n                        width={yaxisWidth}\r\n                    />\r\n                )\r\n            }\r\n            <YAxis domain={[-tradersData?.stats.maxProfitLoss * 1.05, tradersData?.stats.maxProfitLoss * 1.05]} tickFormatter={viewSettings.yaxisTickFormatter} width={yaxisWidth} />\r\n            <YAxis domain={[-tradersData?.stats.maxCurrentCumulativeProfitLoss * 1.1, tradersData?.stats.maxCurrentCumulativeProfitLoss * 1.1]} orientation=\"right\" yAxisId=\"right\" tickFormatter={yaxisFormatter} width={yaxisWidth} />\r\n            <Tooltip\r\n              formatter={tooltipFormatter}\r\n              labelFormatter={tooltipLabelFormatter}\r\n              contentStyle={{ textAlign: 'left' }}\r\n            />\r\n            <Legend />\r\n            {!viewState.isPercentsView && (\r\n                <>\r\n                    <Area yAxisId=\"right\" type=\"monotone\" stroke={0} fill=\"#f93333\" fillOpacity=\"0.4\" dataKey=\"currentLossCumulative\" name=\"Cumulative Loss\" isAnimationActive={false} />\r\n                    <Area yAxisId=\"right\" type=\"monotone\" stroke={0} fill=\"#22c761\" fillOpacity=\"0.4\" dataKey=\"currentProfitCumulative\" name=\"Cumulative Profit\" isAnimationActive={false} />\r\n                </>\r\n            )}\r\n            {viewState.isPercentsView\r\n                ? (\r\n                    <>\r\n                        <Bar unit={viewSettings.itemsUnit} type=\"monotone\" stackId=\"b\" fill=\"#f93333\" dot={true} dataKey=\"loss\" name=\"Loss\" isAnimationActive={false} />\r\n                        <Bar unit={viewSettings.itemsUnit} type=\"monotone\" stackId=\"b\" fill=\"#22c761\" dot={true} dataKey=\"profit\" name=\"Profit\" isAnimationActive={false} />\r\n                    </>\r\n                  )\r\n                : (\r\n                    <>\r\n                        <Bar type=\"monotone\" fill=\"#f93333\" dot={true} dataKey=\"loss\" name=\"Loss\" isAnimationActive={false} />\r\n                        <Bar type=\"monotone\" fill=\"#22c761\" dot={true} dataKey=\"profit\" name=\"Profit\" isAnimationActive={false} />\r\n                    </>\r\n                  )\r\n            }\r\n          </ComposedChart>\r\n        </ResponsiveContainer>\r\n        <div className=\"chart-description\">\r\n          <p>Considers settled (closed) positions</p>\r\n          <p>Fees are not factored into PnL</p>\r\n        </div>\r\n      </ChartWrapper>\r\n    )\r\n}","import React, { useEffect, useState, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport moment from 'moment'\r\nimport { RiLoader5Fill } from 'react-icons/ri'\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatter,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  formatNumber,\r\n  tsToIsoDate,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS,\r\n  GREEN,\r\n  RED,\r\n  convertToPercents\r\n} from '../helpers'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n  Cell,\r\n  PieChart,\r\n  Pie\r\n} from 'recharts';\r\n\r\nimport ChartWrapper from '../components/ChartWrapper'\r\nimport VolumeChart from '../components/VolumeChart'\r\nimport FeesChart from '../components/FeesChart'\r\nimport GenericChart from '../components/GenericChart'\r\nimport DateRangeSelect from '../components/DateRangeSelect'\r\n\r\nimport {\r\n  useVolumeData,\r\n  useTotalVolumeFromServer,\r\n  useVolumeDataFromServer,\r\n  useFeesData,\r\n  useGlpData,\r\n  useAumPerformanceData,\r\n  useCoingeckoPrices,\r\n  useGlpPerformanceData,\r\n  useTradersData,\r\n  useSwapSources,\r\n  useFundingRateData,\r\n  useUsersData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock\r\n} from '../dataProvider'\r\nimport PoolAmountChart from '../components/PoolAmountChart';\r\nimport TradersProfitLossChart from '../components/TradersProfitLossChart';\r\n\r\nconst NOW = Math.floor(Date.now() / 1000)\r\n\r\nfunction Arbitrum(props) {\r\n  const DEFAULT_GROUP_PERIOD = 86400\r\n  const [groupPeriod] = useState(DEFAULT_GROUP_PERIOD)\r\n\r\n  const [dataRange, setDataRange] = useState({ fromValue: moment().subtract(2, 'month').toDate(), toValue: null })\r\n\r\n  const { mode } = props\r\n\r\n  const from = dataRange.fromValue ? Math.floor(+new Date(dataRange.fromValue) / 1000) : undefined\r\n  const to = dataRange.toValue ? Math.floor(+new Date(dataRange.toValue) / 1000) : NOW\r\n\r\n  const params = { from, to, groupPeriod }\r\n\r\n  const [fundingRateData, fundingRateLoading] = useFundingRateData(params)\r\n\r\n  const [volumeData, volumeLoading] = useVolumeDataFromServer(params)\r\n  const [totalVolume] = useTotalVolumeFromServer()\r\n  const totalVolumeDelta = useMemo(() => {\r\n    if (!volumeData || !volumeData.length) {\r\n      return null\r\n    }\r\n    return volumeData[volumeData.length - 1].all\r\n  }, [volumeData])\r\n\r\n  const [feesData, feesLoading] = useFeesData(params)\r\n  const [totalFeesData, totalFeesLoading] = useFeesData({})\r\n  const [totalFees, totalFeesDelta] = useMemo(() => {\r\n    if (!totalFeesData) {\r\n      return []\r\n    }\r\n    const total = totalFeesData[totalFeesData.length - 1]?.cumulative\r\n    const delta = total - totalFeesData[totalFeesData.length - 2]?.cumulative\r\n    return [total, delta]\r\n  }, [totalFeesData])\r\n\r\n  const [glpData, glpLoading] = useGlpData(params)\r\n  const [totalAum, totalAumDelta] = useMemo(() => {\r\n    if (!glpData) {\r\n      return []\r\n    }\r\n    const total = glpData[glpData.length - 1]?.aum\r\n    const delta = total - glpData[glpData.length - 2]?.aum\r\n    return [total, delta]\r\n  }, [glpData])\r\n\r\n  const [aumPerformanceData, aumPerformanceLoading] = useAumPerformanceData(params)\r\n  const [glpPerformanceData, glpPerformanceLoading] = useGlpPerformanceData(glpData, feesData, params)\r\n\r\n  const [tradersData, tradersLoading] = useTradersData(params)\r\n  const [openInterest, openInterestDelta] = useMemo(() => {\r\n    if (!tradersData) {\r\n      return []\r\n    }\r\n    const total = tradersData.data[tradersData.data.length - 1]?.openInterest\r\n    const delta = total - tradersData.data[tradersData.data.length - 2]?.openInterest\r\n    return [total, delta]\r\n  }, [tradersData])\r\n  const [swapSources, swapSourcesLoading] = useSwapSources(params)\r\n  const swapSourcesKeys = Object.keys((swapSources || []).reduce((memo, el) => {\r\n    Object.keys(el).forEach(key => {\r\n      if (key === 'all' || key === 'timestamp') return\r\n      memo[key] = true\r\n    })\r\n    return memo\r\n  }, {}))\r\n\r\n  const [usersData, usersLoading] = useUsersData(params)\r\n  const [totalUsers, totalUsersDelta] = useMemo(() => {\r\n    if (!usersData) {\r\n      return [null, null]\r\n    }\r\n    const total = usersData[usersData.length - 1]?.uniqueCountCumulative\r\n    const prevTotal = usersData[usersData.length - 2]?.uniqueCountCumulative\r\n    const delta = total && prevTotal ? total - prevTotal : null\r\n    return [\r\n      total,\r\n      delta\r\n    ]\r\n  }, [usersData])\r\n\r\n  const [lastSubgraphBlock, , lastSubgraphBlockError] = useLastSubgraphBlock()\r\n  const [lastBlock] = useLastBlock()\r\n\r\n  const isObsolete = lastSubgraphBlock && lastBlock && lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600\r\n\r\n  const [isExperiment, setIsExperiment] = useState(false)\r\n  useEffect(() => {\r\n    setIsExperiment(window.localStorage.getItem('experiment'))\r\n  }, [setIsExperiment])\r\n\r\n  const onDateRangeChange = (dates) => {\r\n    const [start, end] = dates;\r\n    setDataRange({ fromValue: start, toValue: end })\r\n  };\r\n\r\n  const dateRangeOptions = [{\r\n    label: \"Last Month\",\r\n    id: 1\r\n  }, {\r\n    label: \"Last 2 Months\",\r\n    id: 2,\r\n    isDefault: true\r\n  }, {\r\n    label: \"Last 3 Months\",\r\n    id: 3,\r\n  }, {\r\n    label: \"All time\",\r\n    id: 4\r\n  }]\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"page-title-section\">\r\n        <div className=\"page-title-block\">\r\n          <h1>Analytics / Arbitrum</h1>\r\n          {lastSubgraphBlock && lastBlock &&\r\n            <p className={cx('page-description', { warning: isObsolete })}>\r\n              {isObsolete && \"Data is obsolete. \"}\r\n              Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n              &nbsp;at block <a rel=\"noreferrer\" target=\"_blank\" href={`https://arbiscan.io/block/${lastSubgraphBlock.number}`}>{lastSubgraphBlock.number}</a>\r\n            </p>\r\n          }\r\n          {\r\n            lastSubgraphBlockError &&\r\n            <p className=\"page-description warning\">\r\n              Subgraph data is temporarily unavailable.\r\n            </p>\r\n          }\r\n        </div>\r\n        <div className=\"form\">\r\n          <DateRangeSelect options={dateRangeOptions} startDate={dataRange.fromValue} endDate={dataRange.toValue} onChange={onDateRangeChange} />\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {totalVolume ? <>\r\n            <div className=\"total-stat-label\">Total Volume</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalVolume, { currency: true })}\r\n              {totalVolumeDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(totalVolumeDelta, { currency: true, compact: true })}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalFees ? <>\r\n            <div className=\"total-stat-label\">Total Fees</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalFees, { currency: true })}\r\n              <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(totalFeesDelta, { currency: true, compact: true })}</span>\r\n            </div>\r\n          </> : (feesLoading ? <RiLoader5Fill size=\"3em\" className=\"loader\" /> : null)}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalAum ? <>\r\n            <div className=\"total-stat-label\">GLP Pool</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalAum, { currency: true })}\r\n              <span className={cx(\"total-stat-delta\", (totalAumDelta > 0 ? 'plus' : 'minus'))} title=\"Change since previous day\">{totalAumDelta > 0 ? '+' : ''}{formatNumber(totalAumDelta, { currency: true, compact: true })}</span>\r\n            </div>\r\n          </> : (glpLoading ? <RiLoader5Fill size=\"3em\" className=\"loader\" /> : null)}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalUsers ? <>\r\n            <div className=\"total-stat-label\">Total Users</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalUsers)}\r\n              <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(totalUsersDelta)}</span>\r\n            </div>\r\n          </> : (usersLoading ? <RiLoader5Fill size=\"3em\" className=\"loader\" /> : null)}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {openInterest ? <>\r\n            <div className=\"total-stat-label\">Open Interest</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(openInterest, { currency: true })}\r\n              <span className={cx(\"total-stat-delta\", (openInterestDelta > 0 ? 'plus' : 'minus'))} title=\"Change since previous day\">\r\n                {openInterestDelta > 0 ? '+' : ''}{formatNumber(openInterestDelta, { currency: true, compact: true })}\r\n              </span>\r\n            </div>\r\n          </> : (tradersLoading ? <RiLoader5Fill size=\"3em\" className=\"loader\" /> : null)}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <VolumeChart\r\n            data={volumeData}\r\n            loading={volumeLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            xaxisTickFormatter={tooltipLabelFormatter}\r\n            yaxisTickFormatter={yaxisFormatter}\r\n            tooltipLabelFormatter={tooltipLabelFormatter}\r\n            tooltipFormatter={tooltipFormatter}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <FeesChart\r\n            data={feesData}\r\n            loading={feesLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper title=\"AUM & Glp Supply\" loading={glpLoading} data={glpData} csvFields={[{ key: 'aum' }, { key: 'glpSupply' }]}>\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"glpSupply\" tickFormatter={yaxisFormatter} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line isAnimationActive={false} type=\"monotone\" strokeWidth={2} unit=\"$\" dot={false} dataKey=\"aum\" stackId=\"a\" name=\"AUM\" stroke={COLORS[0]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" strokeWidth={2} dot={false} dataKey=\"glpSupply\" stackId=\"a\" name=\"Glp Supply\" stroke={COLORS[1]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <PoolAmountChart \r\n            from={from}\r\n            to={to}\r\n            syncId=\"syncGlp\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Glp Performance\"\r\n            loading={glpLoading}\r\n            data={glpPerformanceData}\r\n            csvFields={[\r\n              {key: 'syntheticPrice'},\r\n              {key: 'glpPrice'},\r\n              {key: 'glpPlusFees'},\r\n              {key: 'lpBtcPrice'},\r\n              {key: 'lpEthPrice'},\r\n              {key: 'performanceSyntheticCollectedFees'},\r\n              {key: 'indexBtcCount'},\r\n              {key: 'indexEthCount'},\r\n              {key: 'indexAvaxCount'},\r\n              {key: 'indexStableCount'},\r\n              {key: 'BTC_WEIGHT'},\r\n              {key: 'ETH_WEIGHT'},\r\n              {key: 'AVAX_WEIGHT'},\r\n              {key: 'STABLE_WEIGHT'},\r\n            ]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpPerformanceData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"performanceSyntheticCollectedFees\" domain={[80, 180]} unit=\"%\" tickFormatter={yaxisFormatterNumber} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceLpBtcCollectedFees\" name=\"% LP BTC-USDC (w/ fees)\" stroke={COLORS[2]} />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceLpEthCollectedFees\" name=\"% LP ETH-USDC (w/ fees)\" stroke={COLORS[4]} />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceSyntheticCollectedFees\" name=\"% Index (w/ fees)\" stroke={COLORS[0]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{color: COLORS[0]}}>% of Index (with fees)</span> is Glp with fees / Index Price * 100. Index is a basket of 25% BTC, 25% ETH, 50% USDC rebalanced once&nbsp;a&nbsp;day\r\n                <br/>\r\n                <span style={{color: COLORS[4]}}>% of LP ETH-USDC (with fees)</span> is Glp Price with fees / LP ETH-USDC * 100<br/>\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Glp Price Comparison\"\r\n            loading={glpLoading}\r\n            data={glpPerformanceData}\r\n            csvFields={[\r\n              {key: 'syntheticPrice'},\r\n              {key: 'glpPrice'},\r\n              {key: 'glpPlusFees'},\r\n              {key: 'lpBtcPrice'},\r\n              {key: 'lpEthPrice'},\r\n              {key: 'performanceSyntheticCollectedFees'},\r\n              {key: 'indexBtcCount'},\r\n              {key: 'indexEthCount'},\r\n              {key: 'indexAvaxCount'},\r\n              {key: 'indexStableCount'},\r\n              {key: 'BTC_WEIGHT'},\r\n              {key: 'ETH_WEIGHT'},\r\n              {key: 'AVAX_WEIGHT'},\r\n              {key: 'STABLE_WEIGHT'},\r\n            ]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpPerformanceData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"glpPrice\" domain={[0.4, 1.7]} tickFormatter={yaxisFormatterNumber} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"syntheticPrice\" name=\"Index Price\" stroke={COLORS[2]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"glpPrice\" name=\"Glp Price\" stroke={COLORS[1]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={2} dot={false} dataKey=\"glpPlusFees\" name=\"Glp w/ fees\" stroke={COLORS[3]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"lpBtcPrice\" name=\"LP BTC-USDC\" stroke={COLORS[2]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"lpEthPrice\" name=\"LP ETH-USDC\" stroke={COLORS[4]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{color: COLORS[3]}}>Glp with fees</span> is based on GLP share of fees received and excluding esGMX rewards<br/>\r\n                <span style={{color: COLORS[2]}}>Index Price</span> is a basket of 25% BTC, 25% ETH, 50% USDC rebalanced once&nbsp;a&nbsp;day\r\n\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        {isExperiment && <div className=\"chart-cell experiment\">\r\n          <ChartWrapper title=\"Performance vs. Index\" loading={glpLoading}>\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpPerformanceData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"performanceSyntheticCollectedFees\" domain={[80, 120]} unit=\"%\" tickFormatter={yaxisFormatterNumber} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceSyntheticCollectedFees\" name=\"Collected Fees\" stroke={COLORS[0]} />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceSyntheticDistributedUsd\" name=\"Distributed Usd\" stroke={COLORS[1]} />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceSyntheticDistributedEth\" name=\"Distributed Eth\" stroke={COLORS[2]} />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceSynthetic\" name=\"No Fees\" stroke={COLORS[3]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartWrapper>\r\n        </div>}\r\n        {isExperiment && <div className=\"chart-cell experiment\">\r\n          <ChartWrapper title=\"Performance vs. ETH LP\" loading={glpLoading}>\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpPerformanceData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"performanceLpEthCollectedFees\" domain={[80, 120]} unit=\"%\" tickFormatter={yaxisFormatterNumber} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceLpEthCollectedFees\" name=\"Collected Fees\" stroke={COLORS[0]} />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceLpEthDistributedUsd\" name=\"Distributed Usd\" stroke={COLORS[1]} />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceLpEthDistributedEth\" name=\"Distributed Eth\" stroke={COLORS[2]} />\r\n                <Line isAnimationActive={false} dot={false} type=\"monotone\" unit=\"%\" strokeWidth={2} dataKey=\"performanceLpEth\" name=\"No Fees\" stroke={COLORS[3]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartWrapper>\r\n        </div>}\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Traders Net PnL\"\r\n            loading={tradersLoading}\r\n            data={tradersData?.data}\r\n            csvFields={[{ key: 'pnl', name: 'Net PnL' }, { key: 'pnlCumulative', name: 'Cumulative PnL' }]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <ComposedChart data={tradersData?.data} syncId=\"tradersId\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis\r\n                  domain={[-tradersData?.stats.maxAbsCumulativePnl * 1.05, tradersData?.stats.maxAbsCumulativePnl * 1.05]}\r\n                  orientation=\"right\"\r\n                  yAxisId=\"right\"\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                  tick={{ fill: COLORS[4] }}\r\n                />\r\n                <YAxis domain={[-tradersData?.stats.maxAbsPnl * 1.05, tradersData?.stats.maxAbsPnl * 1.05]} tickFormatter={yaxisFormatter} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatter}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Bar type=\"monotone\" fill={mode == \"dark\" ? \"#FFFFFF\" : \"#000000\"} dot={false} dataKey=\"pnl\" name=\"Net PnL\">\r\n                  {(tradersData?.data || []).map((item, i) => {\r\n                    return <Cell key={`cell-${i}`} fill={item.pnl > 0 ? '#22c761' : '#f93333'} />\r\n                  })}\r\n                </Bar>\r\n                <Line\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  stroke={COLORS[4]}\r\n                  dataKey=\"currentPnlCumulative\"\r\n                  name=\"Cumulative PnL\"\r\n                  yAxisId=\"right\"\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>Considers settled (closed) positions</p>\r\n              <p>Fees are not factored into PnL</p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <TradersProfitLossChart \r\n            syncId=\"tradersId\"\r\n            loading={tradersLoading}\r\n            tradersData={tradersData}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            chartHeight={CHART_HEIGHT}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              loading={tradersLoading}\r\n              title=\"Open Interest\"\r\n              data={tradersData?.data.map(item => ({ all: item.openInterest, ...item }))}\r\n              controls={{\r\n                convertToPercents: convertToPercents\r\n              }}\r\n              yaxisDataKey=\"all\"\r\n              items={[{ key: 'shortOpenInterest', name: 'Short', color: \"#f93333\" }, { key: 'longOpenInterest', name: 'Long', color: '#22c761' }]}\r\n              type=\"Bar\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              loading={fundingRateLoading}\r\n              title=\"Borrowing Rate Annualized\"\r\n              data={fundingRateData}\r\n              yaxisDataKey=\"ETH\"\r\n              yaxisTickFormatter={yaxisFormatterPercent}\r\n              tooltipFormatter={tooltipFormatterPercent}\r\n              items={[{ key: 'ETH' }, { key: 'BTC' }, { key: 'UNI' }, { key: 'LINK' }, { key: 'USDC' }, { key: 'USDT' }, { key: 'MIM' }, { key: 'FRAX', color: mode == \"dark\" ? \"#FFF\" : \"#000\" }, { key: 'DAI' }]}\r\n              type=\"Line\"\r\n              yaxisDomain={[0, 90 /* ~87% is a maximum yearly borrow rate */]}\r\n              isCoinChart={true}\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={aumPerformanceLoading}\r\n              title=\"AUM Performance Annualized\"\r\n              data={aumPerformanceData}\r\n              yaxisDataKey=\"apr\"\r\n              yaxisTickFormatter={yaxisFormatterPercent}\r\n              tooltipFormatter={tooltipFormatterPercent}\r\n              items={[{ key: 'apr', name: 'APR', color: COLORS[0] }]}\r\n              description=\"Formula = Daily Fees / GLP Pool * 365 days * 100\"\r\n              type=\"Composed\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncGlp\"\r\n            loading={aumPerformanceLoading}\r\n            title=\"AUM Daily Usage\"\r\n            data={aumPerformanceData}\r\n            yaxisDataKey=\"usage\"\r\n            yaxisTickFormatter={yaxisFormatterPercent}\r\n            tooltipFormatter={tooltipFormatterPercent}\r\n            items={[{ key: 'usage', name: 'Daily Usage', color: COLORS[4] }]}\r\n            description=\"Formula = Daily Volume / GLP Pool * 100\"\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncGlp\"\r\n            loading={usersLoading}\r\n            title=\"Unique Users\"\r\n            data={usersData}\r\n            truncateYThreshold={6500}\r\n            yaxisDataKey=\"uniqueSum\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: 'uniqueSwapCount', name: 'Swaps' },\r\n              { key: 'uniqueMarginCount', name: 'Margin trading' },\r\n              { key: 'uniqueMintBurnCount', name: 'Mint & Burn GLP' }\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncGlp\"\r\n            loading={usersLoading}\r\n            title=\"New Users\"\r\n            data={usersData?.map(item => ({ ...item, all: item.newCount }))}\r\n            truncateYThreshold={6000}\r\n            yaxisDataKey=\"newCount\"\r\n            rightYaxisDataKey=\"uniqueCountCumulative\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: 'newSwapCount', name: 'Swap' },\r\n              { key: 'newMarginCount', name: 'Margin trading' },\r\n              { key: 'newMintBurnCount', name: 'Mint & Burn' },\r\n              { key: 'cumulativeNewUserCount', name: 'Cumulative', type: 'Line', yAxisId: 'right', strokeWidth: 2, color: COLORS[4] }\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={usersLoading}\r\n              title=\"New vs. Existing Users\"\r\n              data={usersData?.map(item => ({ ...item, all: item.uniqueCount }))}\r\n              truncateYThreshold={7000}\r\n              yaxisDataKey=\"uniqueCount\"\r\n              rightYaxisDataKey=\"oldPercent\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'newCount', name: 'New'},\r\n                { key: 'oldCount', name: 'Existing'},\r\n                { key: 'oldPercent', name: 'Existing %', yAxisId: 'right', type: 'Line', strokeWidth: 2, color: COLORS[4], unit: '%' }\r\n              ]}\r\n              type=\"Composed\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncGlp\"\r\n            loading={usersLoading}\r\n            title=\"User Actions\"\r\n            data={(usersData || []).map(item => ({ ...item, all: item.actionCount }))}\r\n            truncateYThreshold={25000}\r\n            yaxisDataKey=\"actionCount\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[{ key: 'actionSwapCount', name: 'Swaps' }, { key: 'actionMarginCount', name: 'Margin trading' }, { key: 'actionMintBurnCount', name: 'Mint & Burn GLP' }]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={swapSourcesLoading}\r\n            title=\"Swap Sources\"\r\n            data={swapSources}\r\n            items={swapSourcesKeys.map(key => ({ key }))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Arbitrum;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport moment from 'moment'\r\nimport { RiLoader5Fill } from 'react-icons/ri'\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatter,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  formatNumber,\r\n  tsToIsoDate,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS,\r\n  GREEN,\r\n  RED\r\n} from '../helpers'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart,\r\n  Cell,\r\n  PieChart,\r\n  Pie\r\n} from 'recharts';\r\n\r\nimport ChartWrapper from '../components/ChartWrapper'\r\nimport VolumeChart from '../components/VolumeChart'\r\nimport FeesChart from '../components/FeesChart'\r\nimport GenericChart from '../components/GenericChart'\r\n\r\nimport {\r\n  useVolumeData,\r\n  useTotalVolumeFromServer,\r\n  useVolumeDataFromServer,\r\n  useFeesData,\r\n  useGlpData,\r\n  useAumPerformanceData,\r\n  useCoingeckoPrices,\r\n  useGlpPerformanceData,\r\n  useTradersData,\r\n  useSwapSources,\r\n  useFundingRateData,\r\n  useReferralsData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock\r\n} from '../dataProvider'\r\n\r\nconst { BigNumber } = ethers\r\nconst { formatUnits} = ethers.utils\r\nconst NOW = Math.floor(Date.now() / 1000)\r\n\r\nfunction Referrals(props) {\r\n  const DEFAULT_GROUP_PERIOD = 86400\r\n  const [groupPeriod, setGroupPeriod] = useState(DEFAULT_GROUP_PERIOD)\r\n\r\n  const [fromValue, setFromValue] = useState()\r\n  const [toValue, setToValue] = useState()\r\n\r\n  const { mode } = props\r\n\r\n  const setDateRange = useCallback(range => {\r\n    setFromValue(new Date(Date.now() - range * 1000).toISOString().slice(0, 10))\r\n    setToValue(undefined)\r\n  }, [setFromValue, setToValue])\r\n\r\n  const from = fromValue ? +new Date(fromValue) / 1000 : undefined\r\n  const to = toValue ? +new Date(toValue) / 1000 : NOW\r\n  const params = { from, to, chainName: props.match?.params?.chainName || 'arbitrum' }\r\n\r\n  const [referralsData, referralsLoading] = useReferralsData(params)\r\n  const stats = useMemo(() => {\r\n    if (!referralsData) {\r\n      return null\r\n    }\r\n    const totalVolume = referralsData[referralsData.length - 1]?.volumeCumulative\r\n    const prevTotalVolume = referralsData[referralsData.length - 2]?.volumeCumulative\r\n    const totalVolumeDelta = totalVolume && prevTotalVolume ? totalVolume - prevTotalVolume : null\r\n\r\n    const totalDiscountUsd = referralsData[referralsData.length - 1]?.discountUsdCumulative\r\n    const prevTotalDiscountUsd = referralsData[referralsData.length - 2]?.discountUsdCumulative\r\n    const totalDiscountUsdDelta = totalDiscountUsd && prevTotalDiscountUsd ? totalDiscountUsd - prevTotalDiscountUsd : null\r\n\r\n    const totalReferrerRebateUsd = referralsData[referralsData.length - 1]?.discountUsdCumulative\r\n    const prevTotalReferrerRebateUsd = referralsData[referralsData.length - 2]?.discountUsdCumulative\r\n    const totalReferrerRebateUsdDelta = totalReferrerRebateUsd && prevTotalReferrerRebateUsd ? totalReferrerRebateUsd - prevTotalReferrerRebateUsd : null\r\n\r\n    const totalReferrersCount = referralsData[referralsData.length - 1]?.referrersCountCumulative\r\n    const prevTotalReferrersCount = referralsData[referralsData.length - 2]?.referrersCountCumulative\r\n    const totalReferrersCountDelta = totalReferrersCount && prevTotalReferrersCount ? totalReferrersCount - prevTotalReferrersCount : null\r\n\r\n    const totalReferralsCount = referralsData[referralsData.length - 1]?.referralsCountCumulative\r\n    const prevTotalReferralsCount = referralsData[referralsData.length - 2]?.referralsCountCumulative\r\n    const totalReferralsCountDelta = totalReferralsCount && prevTotalReferralsCount ? totalReferralsCount - prevTotalReferralsCount : null\r\n\r\n    return {\r\n      totalVolume,\r\n      totalVolumeDelta,\r\n      totalDiscountUsd,\r\n      totalDiscountUsdDelta,\r\n      totalReferrerRebateUsd,\r\n      totalReferrerRebateUsdDelta,\r\n      totalReferrersCount,\r\n      totalReferrersCountDelta,\r\n      totalReferralsCount,\r\n      totalReferralsCountDelta\r\n    }\r\n  }, [referralsData])\r\n\r\n  const [lastSubgraphBlock] = useLastSubgraphBlock()\r\n  const [lastBlock] = useLastBlock()\r\n\r\n  const isObsolete = lastSubgraphBlock && lastBlock && lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600\r\n\r\n  const [isExperiment, setIsExperiment] = useState(false)\r\n  useEffect(() => {\r\n    setIsExperiment(window.localStorage.getItem('experiment'))\r\n  }, [setIsExperiment])\r\n\r\n  const showForm = false\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>Analytics / Referrals</h1>\r\n      {lastSubgraphBlock && lastBlock &&\r\n        <p className={cx('page-description', { warning: isObsolete })} style={{ marginTop: '-1rem' }}>\r\n          {isObsolete && \"Data is obsolete. \"}\r\n          Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n          &nbsp;at block <a target=\"_blank\" href={`https://arbiscan.io/block/${lastSubgraphBlock.number}`}>{lastSubgraphBlock.number}</a>\r\n        </p>\r\n      }\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Referral Volume</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalVolume, {currency: true})}\r\n              {stats.totalVolumeDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalVolumeDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Traders Rebates</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalDiscountUsd, {currency: true})}\r\n              {stats.totalDiscountUsdDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalDiscountUsdDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Affiliates Rebates</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(stats.totalReferrerRebateUsd, {currency: true})}\r\n              {stats.totalReferrerRebateUsdDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(stats.totalReferrerRebateUsdDelta, {currency: true, compact: true})}</span>\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Affiliates Registered</div>\r\n            <div className=\"total-stat-value\">\r\n              {stats.totalReferrersCount}\r\n              {stats.totalReferrersCountDelta ?\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{stats.totalReferrersCountDelta}</span> : null\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {stats ? <>\r\n            <div className=\"total-stat-label\">Referrals Registrations</div>\r\n            <div className=\"total-stat-value\">\r\n              {stats.totalReferralsCount}\r\n              {stats.totalReferralsCountDelta ?\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{stats.totalReferralsCountDelta}</span> : null\r\n              }\r\n            </div>\r\n          </> : <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Volume\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"volume\"\r\n              rightYaxisDataKey=\"volumeCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'volume', name: 'Daily', unit: '$' },\r\n                {\r\n                  key: 'volumeCumulative',\r\n                  name: 'Cumulative',\r\n                  type: 'Line',\r\n                  yAxisId: 'right',\r\n                  strokeWidth: 2,\r\n                  color: COLORS[4],\r\n                  unit: '$'\r\n                }\r\n              ]}\r\n              type=\"Composed\"\r\n              description=\"Volume generated by registered referrals\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Rebates\"\r\n              data={referralsData?.map(item => ({ all: item.totalRebateUsd.toFixed(2), ...item }))}\r\n              yaxisDataKey=\"totalRebateUsd\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'discountUsd', name: 'Discount', unit: '$' },\r\n                { key: 'referrerRebateUsd', name: 'Rebates', unit: '$' }\r\n              ]}\r\n              type=\"Bar\"\r\n              description=\"Rebates go to Affiliates, Discount go to Traders\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={referralsLoading}\r\n              title=\"Registered Affiliates\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"referrersCount\"\r\n              rightYaxisDataKey=\"referrersCountCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'referrersCount', type: 'Bar', name: 'Daily'},\r\n                // { key: 'referralCodesCount', type: 'Bar', name: 'Codes' },\r\n                {\r\n                  key: 'referrersCountCumulative',\r\n                  strokeWidth: 2,\r\n                  yAxisId: 'right',\r\n                  type: 'Line',\r\n                  name: 'Cumulative Affiliates',\r\n                  color: COLORS[4]\r\n                },\r\n                // {\r\n                //   key: 'referralCodesCountCumulative',\r\n                //   strokeWidth: 2,\r\n                //   yAxisId: 'right',\r\n                //   type: 'Line',\r\n                //   name: 'Cumulative Codes',\r\n                //   color: COLORS[5]\r\n                // }\r\n              ]}\r\n              type=\"Composed\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={referralsLoading}\r\n              title=\"Referrals Registrations\"\r\n              data={referralsData}\r\n              yaxisDataKey=\"referralsCount\"\r\n              rightYaxisDataKey=\"referralsCountCumulative\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'referralsCount', type: 'Bar', name: 'Daily'},\r\n                // { key: 'referralCodesCount', type: 'Bar', name: 'Codes' },\r\n                {\r\n                  key: 'referralsCountCumulative',\r\n                  strokeWidth: 2,\r\n                  yAxisId: 'right',\r\n                  type: 'Line',\r\n                  name: 'Cumulative Referrals',\r\n                  color: COLORS[4]\r\n                },\r\n                // {\r\n                //   key: 'referralCodesCountCumulative',\r\n                //   strokeWidth: 2,\r\n                //   yAxisId: 'right',\r\n                //   type: 'Line',\r\n                //   name: 'Cumulative Codes',\r\n                //   color: COLORS[5]\r\n                // }\r\n              ]}\r\n              type=\"Composed\"\r\n              description=\"Traders registrations with referral code\"\r\n            />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Referrals;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport moment from 'moment'\r\nimport { RiLoader5Fill } from 'react-icons/ri'\r\nimport cx from \"classnames\";\r\n\r\nimport {\r\n  yaxisFormatterNumber,\r\n  yaxisFormatterPercent,\r\n  yaxisFormatter,\r\n  tooltipLabelFormatter,\r\n  tooltipLabelFormatterUnits,\r\n  tooltipFormatter,\r\n  tooltipFormatterNumber,\r\n  tooltipFormatterPercent,\r\n  formatNumber,\r\n  CHART_HEIGHT,\r\n  YAXIS_WIDTH,\r\n  COLORS,\r\n  GREEN,\r\n  RED,\r\n  convertToPercents\r\n} from '../helpers'\r\n\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  ComposedChart,\r\n  Cell\r\n} from 'recharts';\r\n\r\nimport ChartWrapper from '../components/ChartWrapper'\r\nimport VolumeChart from '../components/VolumeChart'\r\nimport FeesChart from '../components/FeesChart'\r\nimport GenericChart from '../components/GenericChart'\r\nimport DateRangeSelect from '../components/DateRangeSelect'\r\n\r\nimport {\r\n  useVolumeData,\r\n  useFeesData,\r\n  useGlpData,\r\n  useGlpPerformanceData,\r\n  useTradersData,\r\n  useSwapSources,\r\n  useFundingRateData,\r\n  useUsersData,\r\n  useLastSubgraphBlock,\r\n  useLastBlock\r\n} from '../dataProvider'\r\nimport PoolAmountChart from '../components/PoolAmountChart';\r\nimport TradersProfitLossChart from '../components/TradersProfitLossChart';\r\n\r\nconst NOW = Math.floor(Date.now() / 1000)\r\n\r\nfunction Avalanche(props) {\r\n  const DEFAULT_GROUP_PERIOD = 86400\r\n  const [groupPeriod] = useState(DEFAULT_GROUP_PERIOD)\r\n  const [dataRange, setDataRange] = useState({ fromValue: moment().subtract(3, 'month').toDate(), toValue: null })\r\n\r\n  const { mode } = props\r\n\r\n  const from = dataRange.fromValue ? Math.floor(+new Date(dataRange.fromValue) / 1000) : undefined\r\n  const to = dataRange.toValue ? Math.floor(+new Date(dataRange.toValue) / 1000) : NOW\r\n\r\n  const params = { from, to, groupPeriod, chainName: 'avalanche' }\r\n\r\n  const [fundingRateData, fundingRateLoading] = useFundingRateData(params)\r\n\r\n  const [volumeData, volumeLoading] = useVolumeData(params)\r\n  const [totalVolumeData, totalVolumeLoading] = useVolumeData({ chainName: 'avalanche' })\r\n  // const [volumeData, volumeLoading] = useVolumeDataFromServer(params)\r\n  // const [totalVolume] = useTotalVolumeFromServer()\r\n  const [totalVolume, totalVolumeDelta] = useMemo(() => {\r\n    if (!totalVolumeData) {\r\n      return []\r\n    }\r\n    const total = totalVolumeData[totalVolumeData.length - 1]?.cumulative\r\n    const delta = total - totalVolumeData[totalVolumeData.length - 2]?.cumulative\r\n    return [total, delta]\r\n  }, [totalVolumeData])\r\n\r\n  const [feesData, feesLoading] = useFeesData(params)\r\n  const [totalFeesData, totalFeesLoading] = useFeesData({ chainName: 'avalanche' })\r\n  const [totalFees, totalFeesDelta] = useMemo(() => {\r\n    if (!totalFeesData) {\r\n      return []\r\n    }\r\n    const total = totalFeesData[totalFeesData.length - 1]?.cumulative\r\n    const delta = total - totalFeesData[totalFeesData.length - 2]?.cumulative\r\n    return [total, delta]\r\n  }, [totalFeesData])\r\n\r\n  const [glpData, glpLoading] = useGlpData(params)\r\n  const [totalGlpData, totalGlpLoading] = useGlpData({ chainName: 'avalanche' })\r\n  const [totalAum, totalAumDelta] = useMemo(() => {\r\n    if (!totalGlpData) {\r\n      return []\r\n    }\r\n    const total = totalGlpData[totalGlpData.length - 1]?.aum\r\n    const delta = total - totalGlpData[totalGlpData.length - 2]?.aum\r\n    return [total, delta]\r\n  }, [totalGlpData])\r\n\r\n  // const [aumPerformanceData, aumPerformanceLoading] = useAumPerformanceData(params)\r\n  const [glpPerformanceData, glpPerformanceLoading] = useGlpPerformanceData(glpData, feesData, params)\r\n\r\n  const [tradersData, tradersLoading] = useTradersData(params)\r\n  const [totalTradersData, totalTradersLoading] = useTradersData({ chainName: 'avalanche' })\r\n  const [openInterest, openInterestDelta] = useMemo(() => {\r\n    if (!totalTradersData) {\r\n      return []\r\n    }\r\n    const total = totalTradersData.data[totalTradersData.data.length - 1]?.openInterest\r\n    const delta = total - totalTradersData.data[totalTradersData.data.length - 2]?.openInterest\r\n    return [total, delta]\r\n  }, [totalTradersData])\r\n\r\n  const [usersData, usersLoading] = useUsersData(params)\r\n  const [totalUsersData, totalUsersLoading] = useUsersData({ chainName: 'avalanche' })\r\n  const [totalUsers, totalUsersDelta] = useMemo(() => {\r\n    if (!totalUsersData) {\r\n      return [null, null]\r\n    }\r\n    const total = totalUsersData[totalUsersData.length - 1]?.uniqueCountCumulative\r\n    const prevTotal = totalUsersData[totalUsersData.length - 2]?.uniqueCountCumulative\r\n    const delta = total && prevTotal ? total - prevTotal : null\r\n    return [\r\n      total,\r\n      delta\r\n    ]\r\n  }, [totalUsersData])\r\n\r\n  const [swapSources, swapSourcesLoading] = useSwapSources(params)\r\n  const swapSourcesKeys = Object.keys((swapSources || []).reduce((memo, el) => {\r\n    Object.keys(el).forEach(key => {\r\n      if (key === 'all' || key === 'timestamp') return\r\n      memo[key] = true\r\n    })\r\n    return memo\r\n  }, {}))\r\n\r\n  const [lastSubgraphBlock, , lastSubgraphBlockError] = useLastSubgraphBlock(params.chainName)\r\n  const [lastBlock] = useLastBlock(params.chainName)\r\n\r\n  const isObsolete = lastSubgraphBlock && lastBlock && lastBlock.timestamp - lastSubgraphBlock.timestamp > 3600\r\n\r\n  const onDateRangeChange = (dates) => {\r\n    const [start, end] = dates;\r\n    setDataRange({ fromValue: start, toValue: end })\r\n  };\r\n\r\n  const dateRangeOptions = [{\r\n    label: \"Last Month\",\r\n    id: 1\r\n  }, {\r\n    label: \"Last 2 Months\",\r\n    id: 2,\r\n    isDefault: true,\r\n  }, {\r\n    label: \"Last 3 Months\",\r\n    id: 3,\r\n  }, {\r\n    label: \"All time\",\r\n    id: 4\r\n  }]\r\n\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"page-title-section\">\r\n        <div className=\"page-title-block\">\r\n          <h1>Analytics / Avalanche</h1>\r\n          {lastSubgraphBlock && lastBlock &&\r\n            <p className={cx('page-description', { warning: isObsolete })}>\r\n              {isObsolete && \"Data is obsolete. \"}\r\n              Updated {moment(lastSubgraphBlock.timestamp * 1000).fromNow()}\r\n              &nbsp;at block <a rel=\"noreferrer\" target=\"_blank\" href={`https://snowtrace.io/block/${lastSubgraphBlock.number}`} rel=\"noreferrer\">{lastSubgraphBlock.number}</a>\r\n            </p>\r\n          }\r\n          {\r\n            lastSubgraphBlockError &&\r\n            <p className=\"page-description warning\">\r\n              Subgraph data is temporarily unavailable.\r\n            </p>\r\n          }\r\n        </div>\r\n        <div className=\"form\">\r\n          <DateRangeSelect options={dateRangeOptions} startDate={dataRange.fromValue} endDate={dataRange.toValue} onChange={onDateRangeChange} />\r\n        </div>\r\n      </div>\r\n      <div className=\"chart-grid\">\r\n        <div className=\"chart-cell stats\">\r\n          {totalVolume ? <>\r\n            <div className=\"total-stat-label\">Total Volume</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalVolume, { currency: true })}\r\n              {!!totalVolumeDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(totalVolumeDelta, { currency: true, compact: true })}</span>\r\n              }\r\n            </div>\r\n          </> : null}\r\n          {totalVolumeLoading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalFees ? <>\r\n            <div className=\"total-stat-label\">Total Fees</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalFees, { currency: true })}\r\n              {!!totalFeesDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(totalFeesDelta, { currency: true, compact: true })}</span>\r\n              }\r\n            </div>\r\n          </> : null}\r\n          {totalFeesLoading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalAum ? <>\r\n            <div className=\"total-stat-label\">GLP Pool</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalAum, { currency: true })}\r\n              {!!totalAumDelta &&\r\n                <span className={cx(\"total-stat-delta\", (totalAumDelta > 0 ? 'plus' : 'minus'))} title=\"Change since previous day\">{totalAumDelta > 0 ? '+' : ''}{formatNumber(totalAumDelta, { currency: true, compact: true })}</span>\r\n              }\r\n            </div>\r\n          </> : null}\r\n          {totalGlpLoading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {totalUsers && <>\r\n            <div className=\"total-stat-label\">Total Users</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(totalUsers)}\r\n              {!!totalUsersDelta &&\r\n                <span className=\"total-stat-delta plus\" title=\"Change since previous day\">+{formatNumber(totalUsersDelta)}</span>\r\n              }\r\n            </div>\r\n          </>}\r\n          {totalUsersLoading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell stats\">\r\n          {openInterest ? <>\r\n            <div className=\"total-stat-label\">Open Interest</div>\r\n            <div className=\"total-stat-value\">\r\n              {formatNumber(openInterest, { currency: true })}\r\n              {!!openInterestDelta &&\r\n                <span className={cx(\"total-stat-delta\", (openInterestDelta > 0 ? 'plus' : 'minus'))} title=\"Change since previous day\">\r\n                  {openInterestDelta > 0 ? '+' : ''}{formatNumber(openInterestDelta, { currency: true, compact: true })}\r\n                </span>\r\n              }\r\n            </div>\r\n          </> : null}\r\n          {totalTradersLoading && <RiLoader5Fill size=\"3em\" className=\"loader\" />}\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <VolumeChart\r\n            data={volumeData}\r\n            loading={volumeLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <FeesChart\r\n            data={feesData}\r\n            loading={feesLoading}\r\n            chartHeight={CHART_HEIGHT}\r\n            yaxisWidth={YAXIS_WIDTH}\r\n            xaxisTickFormatter={tooltipLabelFormatter}\r\n            tooltipLabelFormatter={tooltipLabelFormatter}\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper title=\"AUM & Glp Supply\" loading={glpLoading} data={glpData} csvFields={[{ key: 'aum' }, { key: 'glpSupply' }]}>\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"glpSupply\" tickFormatter={yaxisFormatter} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line isAnimationActive={false} type=\"monotone\" strokeWidth={2} unit=\"$\" dot={false} dataKey=\"aum\" stackId=\"a\" name=\"AUM\" stroke={COLORS[0]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" strokeWidth={2} dot={false} dataKey=\"glpSupply\" stackId=\"a\" name=\"Glp Supply\" stroke={COLORS[1]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <PoolAmountChart \r\n            from={from}\r\n            to={to}\r\n            chainName={params.chainName}\r\n            syncId=\"syncGlp\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Glp Performance\"\r\n            loading={glpLoading}\r\n            data={glpPerformanceData}\r\n            csvFields={[{key: 'syntheticPrice'}, {key: 'glpPrice'}, {key: 'glpPlusFees'}, {key: 'lpBtcPrice'}, {key: 'lpEthPrice'}]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpPerformanceData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"performanceLpAvaxCollectedFees\" domain={[80, 180]} unit=\"%\" tickFormatter={yaxisFormatterNumber} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceLpBtcCollectedFees\" name=\"% LP BTC-USDC\" stroke={COLORS[2]} />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceLpEthCollectedFees\" name=\"% LP ETH-USDC\" stroke={COLORS[4]} />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceLpAvaxCollectedFees\" name=\"% LP AVAX-USDC\" stroke={COLORS[3]} />\r\n                <Line dot={false} isAnimationActive={false} type=\"monotone\" unit=\"%\" dataKey=\"performanceSyntheticCollectedFees\" name=\"% Index\" stroke={COLORS[0]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{color: COLORS[0]}}>% of Index</span> is Glp with fees / Index Price * 100. Index is a basket 16.6% AVAX, 16.6% BTC, 16.6% ETH and 50% USDC rebalanced once&nbsp;a&nbsp;day\r\n                  <br/>\r\n                <span style={{color: COLORS[4]}}>% of LP TOKEN-USDC</span> is Glp Price with fees / LP TOKEN-USDC * 100<br/>\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Glp Price Comparison\"\r\n            loading={glpLoading}\r\n            data={glpPerformanceData}\r\n            csvFields={[{ key: 'syntheticPrice' }, { key: 'glpPrice' }, { key: 'glpPlusFees' }, { key: 'lpBtcPrice' }, { key: 'lpEthPrice' }]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <LineChart data={glpPerformanceData} syncId=\"syncGlp\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis dataKey=\"glpPrice\" domain={[0.3, 1.4]} tickFormatter={yaxisFormatterNumber} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatterNumber}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"syntheticPrice\" name=\"Index Price\" stroke={COLORS[2]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"glpPrice\" name=\"Glp Price\" stroke={COLORS[1]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={2} dot={false} dataKey=\"glpPlusFees\" name=\"Glp w/ fees\" stroke={COLORS[3]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"lpBtcPrice\" name=\"LP BTC-USDC\" stroke={COLORS[2]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"lpEthPrice\" name=\"LP ETH-USDC\" stroke={COLORS[4]} />\r\n                <Line isAnimationActive={false} type=\"monotone\" unit=\"$\" strokeWidth={1} dot={false} dataKey=\"lpAvaxPrice\" name=\"LP AVAX-USDC\" stroke={COLORS[5]} />\r\n              </LineChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>\r\n                <span style={{color: COLORS[3]}}>Glp with fees</span> is based on GLP share of fees received and excluding esGMX rewards<br/>\r\n                <span style={{color: COLORS[2]}}>Index Price</span> is a basket 16.6% AVAX, 16.6% BTC, 16.6% ETH and 50% USDC rebalanced once&nbsp;a&nbsp;day\r\n              </p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <ChartWrapper\r\n            title=\"Traders Net PnL\"\r\n            loading={tradersLoading}\r\n            data={tradersData?.data}\r\n            csvFields={[{ key: 'pnl', name: 'Net PnL' }, { key: 'pnlCumulative', name: 'Cumulative PnL' }]}\r\n          >\r\n            <ResponsiveContainer width=\"100%\" height={CHART_HEIGHT}>\r\n              <ComposedChart data={tradersData?.data} syncId=\"tradersId\">\r\n                <CartesianGrid strokeDasharray=\"10 10\" />\r\n                <XAxis dataKey=\"timestamp\" tickFormatter={tooltipLabelFormatter} minTickGap={30} />\r\n                <YAxis\r\n                  domain={[-tradersData?.stats.maxAbsCumulativePnl * 1.05, tradersData?.stats.maxAbsCumulativePnl * 1.05]}\r\n                  orientation=\"right\"\r\n                  yAxisId=\"right\"\r\n                  tickFormatter={yaxisFormatter}\r\n                  width={YAXIS_WIDTH}\r\n                  tick={{ fill: COLORS[4] }}\r\n                />\r\n                <YAxis domain={[-tradersData?.stats.maxAbsPnl * 1.05, tradersData?.stats.maxAbsPnl * 1.05]} tickFormatter={yaxisFormatter} width={YAXIS_WIDTH} />\r\n                <Tooltip\r\n                  formatter={tooltipFormatter}\r\n                  labelFormatter={tooltipLabelFormatter}\r\n                  contentStyle={{ textAlign: 'left' }}\r\n                />\r\n                <Legend />\r\n                <Bar type=\"monotone\" fill={mode == \"dark\" ? \"#FFFFFF\" : \"#000000\"} dot={false} dataKey=\"pnl\" name=\"Net PnL\">\r\n                  {(tradersData?.data || []).map((item, i) => {\r\n                    return <Cell key={`cell-${i}`} fill={item.pnl > 0 ? '#22c761' : '#f93333'} />\r\n                  })}\r\n                </Bar>\r\n                <Line\r\n                  type=\"monotone\"\r\n                  strokeWidth={2}\r\n                  stroke={COLORS[4]}\r\n                  dataKey=\"currentPnlCumulative\"\r\n                  name=\"Cumulative PnL\"\r\n                  yAxisId=\"right\"\r\n                />\r\n              </ComposedChart>\r\n            </ResponsiveContainer>\r\n            <div className=\"chart-description\">\r\n              <p>Considers settled (closed) positions</p>\r\n              <p>Fees are not factored into PnL</p>\r\n            </div>\r\n          </ChartWrapper>\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <TradersProfitLossChart \r\n              syncId=\"tradersId\"\r\n              loading={tradersLoading}\r\n              tradersData={tradersData}\r\n              yaxisWidth={YAXIS_WIDTH}\r\n              chartHeight={CHART_HEIGHT}\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              loading={tradersLoading}\r\n              title=\"Open Interest\"\r\n              data={tradersData?.data.map(item => ({ all: item.openInterest, ...item }))}\r\n              controls={{\r\n                convertToPercents: convertToPercents\r\n              }}\r\n              yaxisDataKey=\"all\"\r\n              items={[{ key: 'shortOpenInterest', name: 'Short', color: RED }, { key: 'longOpenInterest', name: 'Long', color: GREEN }]}\r\n              type=\"Bar\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              loading={fundingRateLoading}\r\n              title=\"Borrowing Rate Annualized\"\r\n              data={fundingRateData}\r\n              yaxisDataKey=\"ETH\"\r\n              yaxisTickFormatter={yaxisFormatterPercent}\r\n              tooltipFormatter={tooltipFormatterPercent}\r\n              items={[{ key: 'WETH.e' }, { key: 'WBTC.e' }, { key: 'AVAX' }, { key: 'MIM' }, { key: 'USDC' }, { key: 'USDC.e' }]}\r\n              type=\"Line\"\r\n              yaxisDomain={[0, 90 /* ~87% is a maximum yearly borrow rate */]}\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n           <GenericChart\r\n              syncId=\"syncGlp\"\r\n              loading={usersLoading}\r\n              title=\"Unique Users\"\r\n              data={usersData}\r\n              truncateYThreshold={6500}\r\n              yaxisDataKey=\"uniqueSum\"\r\n              yaxisTickFormatter={yaxisFormatterNumber}\r\n              tooltipFormatter={tooltipFormatterNumber}\r\n              tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n              items={[\r\n                { key: 'uniqueSwapCount', name: 'Swaps'},\r\n                { key: 'uniqueMarginCount', name: 'Margin trading'},\r\n                { key: 'uniqueMintBurnCount', name: 'Mint & Burn GLP' }\r\n              ]}\r\n              type=\"Composed\"\r\n            />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            syncId=\"syncGlp\"\r\n            loading={usersLoading}\r\n            title=\"New Users\"\r\n            data={usersData?.map(item => ({ ...item, all: item.newCount }))}\r\n            truncateYThreshold={6000}\r\n            yaxisDataKey=\"newCount\"\r\n            rightYaxisDataKey=\"uniqueCountCumulative\"\r\n            yaxisTickFormatter={yaxisFormatterNumber}\r\n            tooltipFormatter={tooltipFormatterNumber}\r\n            tooltipLabelFormatter={tooltipLabelFormatterUnits}\r\n            items={[\r\n              { key: 'newSwapCount', name: 'Swap' },\r\n              { key: 'newMarginCount', name: 'Margin trading' },\r\n              { key: 'newMintBurnCount', name: 'Mint & Burn' },\r\n              { key: 'cumulativeNewUserCount', name: 'Cumulative', type: 'Line', yAxisId: 'right', strokeWidth: 2, color: COLORS[4] }\r\n            ]}\r\n            type=\"Composed\"\r\n          />\r\n        </div>\r\n        <div className=\"chart-cell\">\r\n          <GenericChart\r\n            loading={swapSourcesLoading}\r\n            title=\"Swap Sources\"\r\n            data={swapSources}\r\n            items={swapSourcesKeys.map(key => ({ key }))}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Avalanche;\r\n","import React, { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport * as ethers from 'ethers'\r\nimport * as strftime from 'strftime'\r\n\r\nimport { urlWithParams, tsToIso } from '../helpers'\r\nimport { useRequest } from '../dataProvider'\r\n\r\nimport {\r\n  LineChart,\r\n  BarChart,\r\n  Line,\r\n  Bar,\r\n  Label,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  ResponsiveContainer,\r\n  LabelList,\r\n  ReferenceLine,\r\n  Area,\r\n  AreaChart,\r\n  ComposedChart\r\n} from 'recharts';\r\n\r\nconst { BigNumber } = ethers\r\nconst { formatUnits} = ethers.utils\r\n\r\n// function fillTicks(dataset, { from, to, interval }) {\r\n//  let i = 0\r\n//  let prevItem\r\n//  while (true) {\r\n//    const item = dataset[i] \r\n//    const intervalGroup = Math.floor(item.timestamp / interval)\r\n//    if (prevItem && )\r\n//  }\r\n// }\r\n\r\nfunction Trading() {\r\n  const [from, setFrom] = useState(tsToIso(Date.now() - 86400000 * 3))\r\n  const [to, setTo] = useState()\r\n\r\n  const fromTs = +new Date(from) / 1000\r\n  const toTs = to ?? +new Date(to) / 1000\r\n\r\n  const params = {from: fromTs, to: toTs}\r\n  const [btcData] = useRequest(urlWithParams(`/api/prices/BTC`, params), [])\r\n  const [ethData] = useRequest(urlWithParams(`/api/prices/ETH`, params), [])\r\n  const [bnbData] = useRequest(urlWithParams(`/api/prices/BNB`, params), [])\r\n\r\n  const assetChartData = useMemo(() => {\r\n    const all = {}\r\n    const options = [\r\n      ['BTC', btcData],\r\n      ['ETH', ethData],\r\n      ['BNB', bnbData]\r\n    ]\r\n\r\n    options.forEach(([name, assetData]) => {\r\n      if (!assetData || assetData.length === 0) {\r\n        return\r\n      }\r\n      let maxPrice = 0\r\n      let minPrice = Infinity\r\n      all[name] = {\r\n        data: assetData.map(item => {\r\n          const price = item.price / 1e8\r\n          if (price > maxPrice) {\r\n            maxPrice = price\r\n          }\r\n          if (price < minPrice) {\r\n            minPrice = price\r\n          }\r\n          return {\r\n            date: new Date(item.timestamp * 1000),\r\n            price: price,\r\n            poolAmount: item.poolAmount\r\n          }\r\n        })\r\n      }\r\n      all[name].maxPrice = maxPrice\r\n      all[name].minPrice = minPrice\r\n    })\r\n\r\n    return all\r\n  }, [btcData, ethData, bnbData])\r\n\r\n  const [pnlData] = useRequest(urlWithParams('/api/marginPnl', params), [])\r\n  const pnlChartData = useMemo(() => {\r\n    return pnlData.map(item => {\r\n      if (!item.metrics) {\r\n        return {\r\n          date: new Date(item.timestamp * 1000)\r\n        }\r\n      }\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        net: item.metrics.net,\r\n        profits: item.metrics.profits,\r\n        loss: item.metrics.loss,\r\n        long: item.metrics.long,\r\n        short: item.metrics.short,\r\n      } \r\n    })\r\n  }, [pnlData])\r\n  const pnlMin = pnlChartData.length ? pnlChartData[pnlChartData.length - 1].loss : 0\r\n  const pnlMax = pnlChartData.length ? pnlChartData[pnlChartData.length - 1].profits : 0\r\n\r\n  const [liquidationsData] = useRequest(urlWithParams('api/liquidations', {from: fromTs, to: toTs}), [])\r\n  const liquidationsChartData = useMemo(() => {\r\n    let cum = 0\r\n    let longCum = 0\r\n    let shortCum = 0\r\n    return liquidationsData.map(item => {\r\n      const collateral = item.collateral || 0\r\n      cum += collateral\r\n      if (item.isLong) {\r\n        longCum += collateral\r\n      } else {\r\n        shortCum += collateral\r\n      }\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        collateral: cum,\r\n        long: longCum,\r\n        short: shortCum\r\n      }\r\n    })\r\n  }, [liquidationsData])\r\n\r\n  const [feesData] = useRequest(urlWithParams('/api/fees', { disableGrouping: 1, ...params }), [])\r\n  const feesChartData = useMemo(() => {\r\n    const cum = {}\r\n    return feesData.map(item => {\r\n      cum[item.type] = (cum[item.type] || 0) + item.value\r\n      const all = Object.values(cum).reduce((sum, value) => sum + value)\r\n      return {\r\n        ...cum,\r\n        all,\r\n        date: new Date(item.timestamp * 1000)\r\n      }\r\n    })\r\n  }, [feesData])\r\n\r\n  const [swapSourcesData] = useRequest(urlWithParams('/api/swapSources', { period: 3600, rawSource: 1, ...params }), [])\r\n  const swapSourcesFilteredKeys = useMemo(() => {\r\n    if (swapSourcesData.length === 0) {\r\n      return []\r\n    }\r\n    const count = {}\r\n    swapSourcesData.forEach(item => {\r\n      if (!item.metrics) {\r\n        return\r\n      }\r\n      Object.keys(item.metrics).forEach(key => {\r\n        count[key] = (count[key] || 0) + 1\r\n      })\r\n    })\r\n\r\n    return Object.keys(count).filter(key => count[key] > 1)\r\n  }, [swapSourcesData])\r\n  const swapSourcesChartData = useMemo(() => {\r\n    if (swapSourcesFilteredKeys.length === 0) {\r\n      return []\r\n    }\r\n\r\n    let cum = {}\r\n    return swapSourcesData.map(item => {\r\n      let all = 0\r\n      swapSourcesFilteredKeys.forEach(key => {\r\n        if (item.metrics && item.metrics[key]) {\r\n          cum[key] = (cum[key] || 0) + item.metrics[key]\r\n          all += cum[key]\r\n        }\r\n      })\r\n      return {\r\n        date: new Date(item.timestamp * 1000),\r\n        all,\r\n        ...cum\r\n      }\r\n    })\r\n  }, [swapSourcesData, swapSourcesFilteredKeys])\r\n\r\n  const COLORS = ['red', 'green', 'blue', 'lightblue', 'purple', 'pink', 'brown', 'orange']\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <p>\r\n          <label>From</label>\r\n          <input type=\"datetime-local\" value={from} onChange={evt => setFrom(evt.target.value)} />\r\n        </p>\r\n        <p>\r\n          <label>To</label>\r\n          <input type=\"datetime-local\" value={to} onChange={evt => setTo(evt.target.value)} />\r\n        </p>\r\n      </div>     \r\n      {Object.entries(assetChartData).map(([name, {data, maxPrice, minPrice}]) => {\r\n        return <div key={name}>\r\n          <h2>{name}</h2>\r\n          <ResponsiveContainer width=\"100%\" height={600}>\r\n            <ComposedChart\r\n              data={data}\r\n            >\r\n              <CartesianGrid strokeDasharray=\"10 10\" />\r\n              <XAxis dataKey=\"date\" />\r\n              <YAxis\r\n                yAxisId=\"left\"\r\n                dataKey=\"price\"\r\n                domain={[Math.round(minPrice * 0.99), Math.round(maxPrice * 1.01)]}\r\n              />\r\n              <YAxis yAxisId=\"right\" orientation=\"right\" dataKey=\"poolAmount\" />\r\n              <Tooltip />\r\n              <Legend />\r\n              <Area isAnimationActive={false} strokeWidth={0} yAxisId=\"right\" dataKey=\"poolAmount\" name=\"Pool\" dot={false} fill=\"#627EEA\" />\r\n              <Line isAnimationActive={false} yAxisId=\"left\" dataKey=\"price\" name=\"Chainlink Price\" dot={false} stroke=\"#666\" strokeWidth={2} />\r\n            </ComposedChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      })}\r\n\r\n      <h2>Liquidated Collateral</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart\r\n          data={liquidationsChartData}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis dataKey=\"collateral\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area isAnimationActive={false} stackId=\"a\" dataKey=\"long\" name=\"Long\" dot={false} strokeWidth={0} stroke=\"purple\" fill=\"purple\" />\r\n          <Area isAnimationActive={false} stackId=\"a\" dataKey=\"short\" name=\"Short\" dot={false} stroke=\"green\" strokeWidth={0} fill=\"green\" />\r\n          <Line isAnimationActive={false} dataKey=\"collateral\" name=\"All\" dot={false} stroke=\"black\" strokeWidth={2} />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Global PnL</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart\r\n          data={pnlChartData}\r\n        >\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis domain={[pnlMin * 1.5, pnlMax * 0.50]} />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area isAnimationActive={false} dataKey=\"profits\" name=\"Profits\" dot={false} strokeWidth={0} fill=\"lightblue\" />\r\n          <Area isAnimationActive={false} dataKey=\"loss\" name=\"Loss\" dot={false} stroke=\"pink\" strokeWidth={0} fill=\"pink\" />\r\n          <Line isAnimationActive={false} dataKey=\"net\" name=\"Net\" dot={false} stroke=\"#000\" strokeWidth={2} />\r\n          <Line isAnimationActive={false} dataKey=\"long\" name=\"Longs Net\" dot={false} stroke=\"green\" strokeWidth={1} />\r\n          <Line isAnimationActive={false} dataKey=\"short\" name=\"Shorts Net\" dot={false} stroke=\"red\" strokeWidth={1} />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Fees</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <ComposedChart syncId=\"syncId\" data={feesChartData}>\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" minTickGap={30} />\r\n          <YAxis dataKey=\"all\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"swap\" stackId=\"a\" name=\"Swap\" stroke=\"#FE88B1\" fill=\"#FE88B1\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"mint\" stackId=\"a\" name=\"Mint USDG\" stroke=\"#C9DB74\" fill=\"#C9DB74\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"burn\" stackId=\"a\" name=\"Burn USDG\" stroke=\"#ab6100\" fill=\"#ab6100\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"liquidation\" stackId=\"a\" name=\"Liquidation\" stroke=\"#c90000\" fill=\"#c90000\" />\r\n          <Area type=\"monotone\" dot={false} dataKey=\"margin\" stackId=\"a\" name=\"Margin trading\" stroke=\"#5D69B1\" fill=\"#5D69B1\" />\r\n          <Line isAnimationActive={false} dot={false} dataKey=\"all\" name=\"Total\" stroke=\"#000\" />\r\n        </ComposedChart>\r\n      </ResponsiveContainer>\r\n\r\n      <h2>Swap volumes by recipient</h2>\r\n      <ResponsiveContainer width=\"100%\" height={600}>\r\n        <LineChart syncId=\"syncId\" data={swapSourcesChartData}>\r\n          <CartesianGrid strokeDasharray=\"10 10\" />\r\n          <XAxis dataKey=\"date\" minTickGap={30} />\r\n          <YAxis dataKey=\"all\" />\r\n          <Tooltip />\r\n          <Legend />\r\n          {swapSourcesFilteredKeys.map((key, i) => {\r\n            return <Line dataKey={key} dot={false} stroke={COLORS[i % COLORS.length]} />\r\n          })}\r\n        </LineChart>\r\n      </ResponsiveContainer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Trading","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, NavLink } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from \"framer-motion\";\r\nimport cx from \"classnames\";\r\nimport Arbitrum from './views/Arbitrum';\r\nimport Referrals from './views/Referrals';\r\nimport Avalanche from './views/Avalanche';\r\nimport Trading from './views/Trading';\r\nimport './App.css';\r\nimport logoIcon from './img/logo_GMX.svg';\r\nimport darkLogoIcon from './img/logo_GMX_dark.svg';\r\nimport lightLogoIcon from './img/logo_GMX_light.svg';\r\nimport { FaSun, FaMoon, FaTimes } from \"react-icons/fa\";\r\nimport { FiX } from \"react-icons/fi\";\r\nimport { RiMenuLine } from 'react-icons/ri';\r\n\r\nfunction AppHeaderLinks({ mode, small, clickCloseIcon }) {\r\n  return (\r\n    <div className=\"App-header-links\">\r\n      {small &&\r\n        <div className=\"App-header-links-header\">\r\n          <div className=\"App-header-menu-icon-block\" onClick={() => clickCloseIcon()}>\r\n            <FiX className=\"App-header-menu-icon\" />\r\n          </div>\r\n          <NavLink exact activeClassName=\"active\" className=\"App-header-link-main\" to=\"/\">\r\n            <img src={logoIcon} alt=\"GMX Logo\" />\r\n          </NavLink>\r\n        </div>\r\n      }\r\n      <div className=\"App-header-link-container\">\r\n        <NavLink to=\"/\" exact className=\"nav-link\" activeClassName=\"active\">Arbitrum</NavLink>\r\n      </div>\r\n      <div className=\"App-header-link-container\">\r\n        <NavLink to=\"/avalanche\" className=\"nav-link\">Avalanche</NavLink>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst App = () => {\r\n  const [mode, setMode] = useState(null);\r\n  const [isDrawerVisible, setIsDrawerVisible] = useState(undefined);\r\n\r\n  const slideVariants = {\r\n    hidden: { x: \"-100%\" },\r\n    visible: { x: 0 }\r\n  }\r\n\r\n  const fadeVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: { opacity: 1 }\r\n  }\r\n\r\n  useEffect(() => {\r\n    const savedMode = window.localStorage.getItem('mode');\r\n    const targetMode = savedMode == 'light' ? 'light' : 'dark';\r\n    document.querySelector('body').style.backgroundColor = targetMode == 'dark' ? '#101124' : '#f6f9ff';\r\n    setMode(targetMode);\r\n  }, [])\r\n\r\n  const switchMode = () => {\r\n    const targetMode = mode == 'dark' ? 'light' : 'dark';\r\n    window.localStorage.setItem('mode', targetMode);\r\n    document.querySelector('body').style.backgroundColor = targetMode == 'dark' ? '#101124' : '#f6f9ff';\r\n    setMode(targetMode)\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      {\r\n        mode && <div className={cx(\"App\", mode)}>\r\n          {isDrawerVisible &&\r\n            <AnimatePresence>\r\n              {isDrawerVisible &&\r\n                <motion.div className=\"App-header-backdrop\"\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"hidden\"\r\n                  variants={fadeVariants}\r\n                  transition={{ duration: 0.2 }}\r\n                  onClick={() => setIsDrawerVisible(!isDrawerVisible)}\r\n                >\r\n                </motion.div>\r\n              }\r\n            </AnimatePresence>\r\n          }\r\n          <div className=\"nav\">\r\n            <div className=\"nav-left\">\r\n              <div className=\"App-header-menu-icon-block\" onClick={() => setIsDrawerVisible(!isDrawerVisible)}>\r\n                {!isDrawerVisible && <RiMenuLine className=\"App-header-menu-icon\" />}\r\n                {isDrawerVisible && <FaTimes className=\"App-header-menu-icon\" />}\r\n              </div>\r\n              <a href=\"https://gmx.io\" target=\"_blank\" className=\"nav-logo\">\r\n                <img width=\"87\" src={mode == 'dark' ? darkLogoIcon : lightLogoIcon} />\r\n              </a>\r\n              <NavLink to=\"/\" exact className=\"nav-link\" activeClassName=\"active\">Arbitrum</NavLink>\r\n              <NavLink to=\"/avalanche\" className=\"nav-link\">Avalanche</NavLink>\r\n            </div>\r\n            <div className=\"nav-right\">\r\n              <a href=\"https://gmx.io\" target=\"_blank\" className=\"nav-link\">APP</a>\r\n              <a href=\"https://gmxio.gitbook.io/gmx/\" target=\"_blank\" className=\"nav-link\">DOCS</a>\r\n              <div className='modeselect' onClick={() => switchMode()}>\r\n                {mode == 'dark' ? <FaSun /> : <FaMoon />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <AnimatePresence>\r\n            {isDrawerVisible &&\r\n              <motion.div\r\n                onClick={() => setIsDrawerVisible(false)}\r\n                className=\"App-header-links-container App-header-drawer\"\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"hidden\"\r\n                variants={slideVariants}\r\n                transition={{ duration: 0.2 }}\r\n              >\r\n                <AppHeaderLinks mode={mode} small clickCloseIcon={() => setIsDrawerVisible(false)} />\r\n              </motion.div>\r\n            }\r\n          </AnimatePresence>\r\n          <div className=\"content\">\r\n            <Route exact path=\"/\" render={(props) => (\r\n              <Arbitrum {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/avalanche\" render={(props) => (\r\n              <Avalanche {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/referrals/:chainName\" render={(props) => (\r\n              <Referrals {...props} mode={mode} />\r\n            )} />\r\n            <Route exact path=\"/trading\" component={Trading} />\r\n          </div>\r\n        </div>\r\n      }\r\n    </Switch>\r\n  )\r\n};\r\n\r\nexport default App;\r\n","import { ethers } from 'ethers'\r\nimport React from 'react';\r\nimport { StaticRouter } from 'react-router-dom';\r\nimport { renderToString } from 'react-dom/server';\r\n\r\nimport { createHttpError }  from './utils';\r\nimport { ARBITRUM, AVALANCHE } from './addresses'\r\nimport { getPricesLimit, getLastUpdatedTimestamp, VALID_PERIODS } from './prices'\r\n\r\nimport App from './App';\r\nimport { getLogger } from './helpers'\r\nimport { queryEarnData } from './dataProvider'\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\nconst assets = require(process.env.RAZZLE_ASSETS_MANIFEST);\r\n\r\nconst cssLinksFromAssets = (assets, entrypoint) => {\r\n  return assets[entrypoint] ? assets[entrypoint].css ?\r\n  assets[entrypoint].css.map(asset=>\r\n    `<link rel=\"stylesheet\" href=\"${asset}\">`\r\n  ).join('') : '' : '';\r\n};\r\n\r\nconst jsScriptTagsFromAssets = (assets, entrypoint, extra = '') => {\r\n  return assets[entrypoint] ? assets[entrypoint].js ?\r\n  assets[entrypoint].js.map(asset=>\r\n    `<script src=\"${asset}\"${extra}></script>`\r\n  ).join('') : '' : '';\r\n};\r\n\r\nconst { formatUnits } = ethers.utils\r\n\r\nconst logger = getLogger('routes')\r\n\r\nexport default function routes(app) {\r\n  app.get('/api/earn/:account', async (req, res, next) => {\r\n    const chainName = req.query.chain || 'arbitrum'\r\n    const validChainNames = new Set(['arbitrum', 'avalanche'])\r\n    if (!validChainNames.has(chainName)) {\r\n      next(createHttpError(400, `Valid chains are: ${Array.from(validChainNames)}`))\r\n      return\r\n    }\r\n    try {\r\n      const earnData = await queryEarnData(chainName, req.params.account)\r\n      res.send(earnData)\r\n    } catch (ex) {\r\n      logger.error(ex)\r\n      next(createHttpError(500, ex.message))\r\n      return\r\n    }\r\n  })\r\n\r\n  app.get('/api/gmx-supply', async (req, res) => {\r\n    const apiResponse = await fetch('https://api.gmx.io/gmx_supply')  \r\n    console.log(\"url:\", \"https://api.gmx.io/gmx_supply\")\r\n    const data = (await apiResponse.text()).toString()\r\n    res.set('Content-Type', 'text/plain')\r\n    res.send(formatUnits(data))\r\n  })\r\n\r\n  app.get('/api/candles/:symbol', async (req, res, next) => {\r\n    const period = req.query.period?.toLowerCase()\r\n    if (!period || !VALID_PERIODS.has(period)) {\r\n      next(createHttpError(400, `Invalid period. Valid periods are ${Array.from(VALID_PERIODS)}`))\r\n      return\r\n    }\r\n    \r\n    const validSymbols = new Set(['BTC', 'ETH', 'BNB', 'UNI', 'LINK', 'AVAX'])\r\n    const symbol = req.params.symbol\r\n    if (!validSymbols.has(symbol)) {\r\n      next(createHttpError(400, `Invalid symbol ${symbol}`))\r\n      return\r\n    }\r\n    const preferableChainId = Number(req.query.preferableChainId)\r\n    const validSources = new Set([ARBITRUM, AVALANCHE])\r\n    if (!validSources.has(preferableChainId)) {\r\n      next(createHttpError(400, `Invalid preferableChainId ${preferableChainId}. Valid options are ${ARBITRUM}, ${AVALANCHE}`))\r\n      return\r\n    }\r\n    \r\n    const MAX_LIMIT = 5000\r\n    let limit = 5000\r\n    if (req.query.limit) {\r\n      limit = Number(req.query.limit)\r\n      if (Number.isNaN(limit)) {\r\n        next(createHttpError(400, `Invalid limit ${req.query.limit}`))\r\n        return\r\n      }\r\n      if (limit > MAX_LIMIT) {\r\n        limit = MAX_LIMIT \r\n      }\r\n    }\r\n\r\n    let prices\r\n    try {\r\n      prices = getPricesLimit(limit, preferableChainId, req.params.symbol, period)\r\n    } catch (ex) {\r\n      next(ex)\r\n      return\r\n    }\r\n\r\n    res.set('Cache-Control', 'max-age=60')\r\n    res.send({\r\n      prices,\r\n      period,\r\n      updatedAt: getLastUpdatedTimestamp()\r\n    })\r\n  })\r\n\r\n  const cssAssetsTag = cssLinksFromAssets(assets, 'client')\r\n  const jsAssetsTag = jsScriptTagsFromAssets(assets, 'client', ' defer crossorigin')\r\n\r\n  app.get('/*', (req, res, next) => {\r\n    if (res.headersSent) {\r\n      next()\r\n      return\r\n    }\r\n\r\n    const context = {};\r\n    const markup = renderToString(\r\n      <StaticRouter context={context} location={req.url}>\r\n        <App />\r\n      </StaticRouter>\r\n    );\r\n    res.set('Content-Type', 'text/html')\r\n\r\n    res.status(200).send(\r\n      `<!doctype html>\r\n          <html lang=\"\">\r\n          <head>\r\n              <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n              <meta charset=\"utf-8\" />\r\n              <title>GMX analytics</title>\r\n              <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n              <link rel=\"icon\" type=\"image/png\" href=\"/favicon.png\" />\r\n              ${cssAssetsTag}\r\n          </head>\r\n          <body>\r\n              <div id=\"root\">${markup}</div>\r\n              ${jsAssetsTag}\r\n          </body>\r\n      </html>`\r\n    );\r\n    next()\r\n  });\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  app.use('/api', function (err, req, res, _) {\r\n    res.set('Content-Type', 'text/plain')\r\n    const statusCode = Number(err.code) || 500\r\n    let response = ''\r\n    if (IS_PRODUCTION) {\r\n      if (err.code === 400) {\r\n        response = err.message\r\n      }\r\n    } else {\r\n      response = err.stack\r\n    }\r\n    res.status(statusCode)\r\n    res.send(response)\r\n  })\r\n}","import { getLogger } from './helpers'\r\nconst logger = getLogger('app')\r\n\r\nconst IS_PRODUCTION = process.env.NODE_ENV === 'production'\r\n\r\nfunction _logRequest(req, res) {\r\n  const time = (Date.now() - req.start)\r\n  const method = res.statusCode < 400 ? 'info' : 'warn'\r\n  logger[method]('request %s %s handled statusCode: %s in time: %sms referer: %s ip: %s',\r\n    req.method,\r\n    req.originalUrl,\r\n    res.statusCode,\r\n    time,\r\n    req.get('referer'),\r\n    req.ip\r\n  )\r\n}\r\n\r\nexport function requestLogger(req, res, next) {\r\n  req.start = Date.now()\r\n  res.on('close', evt => {\r\n    _logRequest(req, res)\r\n  })\r\n  next()\r\n}\r\n\r\nexport function csp(req, res, next) {\r\n  const csp = {\r\n    \"default-src\": [\"'self'\"],\r\n    \"style-src\": [\"'self'\"],\r\n    \"connect-src\": [\r\n      \"https://arb1.arbitrum.io\",\r\n      \"https://api.avax.network\",\r\n      \"https://api.thegraph.com\",\r\n      \"https://gmx-server-mainnet.uw.r.appspot.com\",\r\n      \"https://api.coingecko.com\"\r\n    ]\r\n  }\r\n  if (!IS_PRODUCTION) {\r\n    csp[\"default-src\"].push(\"localhost:3114\")\r\n    csp[\"style-src\"].push(\"'unsafe-inline'\")\r\n    csp[\"connect-src\"].push(\"localhost:3114\", \"ws://localhost:3114\")\r\n  }\r\n  const cspParts = ''\r\n  for (const [key, value] of Object.entries(csp)) {\r\n  }\r\n  const cspString = Object.entries(csp).map(([key, value]) => `${key} ${value.join(' ')}`).join('; ')\r\n  res.set(\"Content-Security-Policy\", cspString)\r\n  next()\r\n}\r\n","import express from 'express';\r\n\r\nimport routes from './routes'\r\nimport { requestLogger, csp } from './middlewares'\r\n\r\nconst app = express();\r\napp.set('trust proxy', true)\r\n\r\napp\r\n  .disable('x-powered-by')\r\n  .use(express.static(process.env.RAZZLE_PUBLIC_DIR))\r\n  .use(require('cors')())\r\n  .use(requestLogger)\r\n  .use(csp)\r\n  .use((req, res, next) => {\r\n    res.set('X-Content-Type-Options', 'nosniff')\r\n    res.set('X-Frame-Options', 'DENY')\r\n    res.set('Referrer-Policy', 'same-origin')\r\n    next()\r\n  })\r\n\r\napp.get('/ping', (req, res, next) => {\r\n  res.send('ok')\r\n  next()\r\n});\r\n\r\nroutes(app)\r\n\r\nexport default app;\r\n"],"sourceRoot":""}